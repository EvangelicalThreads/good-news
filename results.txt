// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
const nextConfig: NextConfig = {
     *   stale:      300 seconds (5 minutes)
     *   revalidate: 900 seconds (15 minutes)
     *   expire:     never
    export function unstable_cacheLife(profile: "default"): void
     *   stale:      0 seconds
     *   revalidate: 1 seconds
     *   expire:     60 seconds (1 minute)
    export function unstable_cacheLife(profile: "seconds"): void
     *   stale:      300 seconds (5 minutes)
     *   revalidate: 60 seconds (1 minute)
     *   expire:     3600 seconds (1 hour)
    export function unstable_cacheLife(profile: "minutes"): void
     *   stale:      300 seconds (5 minutes)
     *   revalidate: 3600 seconds (1 hour)
     *   expire:     86400 seconds (1 day)
    export function unstable_cacheLife(profile: "hours"): void
     *   stale:      300 seconds (5 minutes)
     *   revalidate: 86400 seconds (1 day)
     *   expire:     604800 seconds (1 week)
    export function unstable_cacheLife(profile: "days"): void
     *   stale:      300 seconds (5 minutes)
     *   revalidate: 604800 seconds (1 week)
     *   expire:     2592000 seconds (30 days)
    export function unstable_cacheLife(profile: "weeks"): void
     *   stale:      300 seconds (5 minutes)
     *   revalidate: 2592000 seconds (30 days)
     *   expire:     never
    export function unstable_cacheLife(profile: "max"): void
     *   stale: ... // seconds
     *   revalidate: ... // seconds
     *   expire: ... // seconds
     * This is similar to Cache-Control: max-age=`stale`,s-max-age=`revalidate`,stale-while-revalidate=`expire-revalidate`
    export function unstable_cacheLife(profile: {
      stale?: number,
      revalidate?: number,
      expire?: number
    }): void
// File: C:\Users\katie\good-news\src\app\layout.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\admin\moderation\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\ai-plan\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\admin\pending-comments\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\admin\pending-reflections\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\ai-plan\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\auth\[...nextauth]\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\daily-tasks\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\daily-tasks\ai\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\daily-tasks\ai-generate\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\daily-tasks\create\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\devotional_goals\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\devotional_tasks\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\devotional_tasks\complete\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\devotional_tasks\today\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\feed\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\good-news\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\journals\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\likes\status\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\likes\toggle\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\login\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\niche-tags\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflections\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflections\by-tag\[tagId]\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflections\[id]\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflections\[id]\tags\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflections\[id]\[action]\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflection_comments\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\reflection_comments\[id]\[action]\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\signup\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\test-db-access\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\test-session\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\test-supabase\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\user\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\user\devotional_goal\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\user\update\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\user_ai_task_progress\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\user_progress\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\user_task_progress\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\api\whoami\route.ts
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
type RouteContext = { params: Promise<SegmentParams> }
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
  __tag__: string
  __param_position__: string
  __param_type__: T
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\daily-tasks\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\devotional-goals\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\devotional-goals\[goalId]\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: any
  generateMetadata?: Function
  viewport?: any
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\feed\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\journals\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\login\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\profile\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\reflections\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
// File: C:\Users\katie\good-news\src\app\signup\page.tsx
type SegmentParams<T extends Object = any> = T extends Record<string, any>
  ? { [K in keyof T]: T[K] extends string ? string | string[] | undefined : never }
  : T
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  metadata?: unknown
  generateMetadata?: Function
  viewport?: unknown
  generateViewport?: Function
  experimental_ppr?: boolean
  checkFields<Diff<{ params: SegmentParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: unknown[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
  params?: Promise<SegmentParams>
  searchParams?: Promise<any>
  children?: React.ReactNode
  params?: Promise<SegmentParams>
type RevalidateRange<T> = T extends { revalidate: unknown } ? NonNegative<T['revalidate']> : never
// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>
type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never
function checkFields<_ extends { [k in keyof any]: never }>() {}
// https://github.com/sindresorhus/type-fest
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'
 * const users = await prisma.user.findMany()
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }
   * const users = await prisma.user.findMany()
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;
  $connect(): $Utils.JsPromise<void>;
  $disconnect(): $Utils.JsPromise<void>;
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: unknown[]): Prisma.PrismaPromise<number>;
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  $executeRawUnsafe<T = unknown>(query: string, ...values: unknown[]): Prisma.PrismaPromise<number>;
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: unknown[]): Prisma.PrismaPromise<T>;
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  $queryRawUnsafe<T = unknown>(query: string, ...values: unknown[]): Prisma.PrismaPromise<T>;
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>
  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>
  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * const users = await prisma.user.findMany()
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;
   * `prisma.reflection`: Exposes CRUD operations for the **Reflection** model.
    * Example usage:
    * const reflections = await prisma.reflection.findMany()
  get reflection(): Prisma.ReflectionDelegate<ExtArgs, ClientOptions>;
   * `prisma.like`: Exposes CRUD operations for the **Like** model.
    * Example usage:
    * const likes = await prisma.like.findMany()
  get like(): Prisma.LikeDelegate<ExtArgs, ClientOptions>;
   * `prisma.reflectionComment`: Exposes CRUD operations for the **ReflectionComment** model.
    * Example usage:
    * const reflectionComments = await prisma.reflectionComment.findMany()
  get reflectionComment(): Prisma.ReflectionCommentDelegate<ExtArgs, ClientOptions>;
   * `prisma.reflectionLike`: Exposes CRUD operations for the **ReflectionLike** model.
    * Example usage:
    * const reflectionLikes = await prisma.reflectionLike.findMany()
  get reflectionLike(): Prisma.ReflectionLikeDelegate<ExtArgs, ClientOptions>;
   * `prisma.journal`: Exposes CRUD operations for the **Journal** model.
    * Example usage:
    * const journals = await prisma.journal.findMany()
  get journal(): Prisma.JournalDelegate<ExtArgs, ClientOptions>;
   * `prisma.devotionalGoal`: Exposes CRUD operations for the **DevotionalGoal** model.
    * Example usage:
    * const devotionalGoals = await prisma.devotionalGoal.findMany()
  get devotionalGoal(): Prisma.DevotionalGoalDelegate<ExtArgs, ClientOptions>;
   * `prisma.devotionalTask`: Exposes CRUD operations for the **DevotionalTask** model.
    * Example usage:
    * const devotionalTasks = await prisma.devotionalTask.findMany()
  get devotionalTask(): Prisma.DevotionalTaskDelegate<ExtArgs, ClientOptions>;
   * `prisma.userTaskProgress`: Exposes CRUD operations for the **UserTaskProgress** model.
    * Example usage:
    * const userTaskProgresses = await prisma.userTaskProgress.findMany()
  get userTaskProgress(): Prisma.UserTaskProgressDelegate<ExtArgs, ClientOptions>;
   * `prisma.nicheTag`: Exposes CRUD operations for the **NicheTag** model.
    * Example usage:
    * const nicheTags = await prisma.nicheTag.findMany()
  get nicheTag(): Prisma.NicheTagDelegate<ExtArgs, ClientOptions>;
   * `prisma.reflectionNicheTag`: Exposes CRUD operations for the **ReflectionNicheTag** model.
    * Example usage:
    * const reflectionNicheTags = await prisma.reflectionNicheTag.findMany()
  get reflectionNicheTag(): Prisma.ReflectionNicheTagDelegate<ExtArgs, ClientOptions>;
   * `prisma.dailyTask`: Exposes CRUD operations for the **DailyTask** model.
    * Example usage:
    * const dailyTasks = await prisma.dailyTask.findMany()
  get dailyTask(): Prisma.DailyTaskDelegate<ExtArgs, ClientOptions>;
   * `prisma.dailyTaskCompletion`: Exposes CRUD operations for the **DailyTaskCompletion** model.
    * Example usage:
    * const dailyTaskCompletions = await prisma.dailyTaskCompletion.findMany()
  get dailyTaskCompletion(): Prisma.DailyTaskCompletionDelegate<ExtArgs, ClientOptions>;
   * `prisma.devotional_daily_task_templates`: Exposes CRUD operations for the **devotional_daily_task_templates** model.
    * Example usage:
    * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.findMany()
  get devotional_daily_task_templates(): Prisma.devotional_daily_task_templatesDelegate<ExtArgs, ClientOptions>;
   * `prisma.good_news`: Exposes CRUD operations for the **good_news** model.
    * Example usage:
    * const good_news = await prisma.good_news.findMany()
  get good_news(): Prisma.good_newsDelegate<ExtArgs, ClientOptions>;
   * `prisma.aiPlan`: Exposes CRUD operations for the **AiPlan** model.
    * Example usage:
    * const aiPlans = await prisma.aiPlan.findMany()
  get aiPlan(): Prisma.AiPlanDelegate<ExtArgs, ClientOptions>;
   * `prisma.aiPlanTask`: Exposes CRUD operations for the **AiPlanTask** model.
    * Example usage:
    * const aiPlanTasks = await prisma.aiPlanTask.findMany()
  get aiPlanTask(): Prisma.AiPlanTaskDelegate<ExtArgs, ClientOptions>;
   * `prisma.userAiTaskProgress`: Exposes CRUD operations for the **UserAiTaskProgress** model.
    * Example usage:
    * const userAiTaskProgresses = await prisma.userAiTaskProgress.findMany()
  get userAiTaskProgress(): Prisma.UserAiTaskProgressDelegate<ExtArgs, ClientOptions>;
   * `prisma.aiPlanDailyTask`: Exposes CRUD operations for the **AiPlanDailyTask** model.
    * Example usage:
    * const aiPlanDailyTasks = await prisma.aiPlanDailyTask.findMany()
  get aiPlanDailyTask(): Prisma.AiPlanDailyTaskDelegate<ExtArgs, ClientOptions>;
   * Prisma Client JS version: 6.16.1
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
    client: string
  export const prismaVersion: PrismaVersion
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
      private DbNull: never
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
      private JsonNull: never
    * Type of `Prisma.AnyNull`.
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    class AnyNull {
      private AnyNull: never
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
  export const DbNull: NullTypes.DbNull
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
  export const JsonNull: NullTypes.JsonNull
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
  export const AnyNull: NullTypes.AnyNull
    select: unknown
    include: unknown
    select: unknown
    omit: unknown
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;
  export type PromiseReturnType<T extends (...args: unknown) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>
      [P in K]: T[P];
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
    [key in keyof T]: key extends keyof U ? T[key] : never;
    [key in keyof T]: key extends keyof U ? T[key] : never
      : T extends SelectAndOmit
        : {})
    [key in keyof T]: key extends keyof U ? T[key] : never
  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
    : U : T
  type IsObject<T extends any> = T extends Array<any>
  : T extends Date
  : T extends Uint8Array
  : T extends BigInt
  : T extends object
  : False
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  > = O extends unknown ? _Either<O, K, strict> : never
  export type Union = any
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    : never
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
      [K in keyof U]-?: At<U, K>;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
    [K in keyof O]?: O[K];
  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  type NoExpand<T> = T extends unknown ? T : never;
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;
  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;
    0: 1
    1: 0
  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    : 0
    0: {
      0: 0
      1: 1
    1: {
      0: 1
      1: 1
  export type Keys<U extends Union> = U extends unknown ? keyof U : never
  type Cast<A, B> = A extends B ? A : B;
  export const type: unique symbol;
    [P in keyof T]: P extends keyof O
      : never
  } : never
  > = IsObject<T> extends True ? U : T
    [K in keyof T]: Or<
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      : K
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T
  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>
  export const ModelName: {
    User: 'User',
    Reflection: 'Reflection',
    Like: 'Like',
    ReflectionComment: 'ReflectionComment',
    ReflectionLike: 'ReflectionLike',
    Journal: 'Journal',
    DevotionalGoal: 'DevotionalGoal',
    DevotionalTask: 'DevotionalTask',
    UserTaskProgress: 'UserTaskProgress',
    NicheTag: 'NicheTag',
    ReflectionNicheTag: 'ReflectionNicheTag',
    DailyTask: 'DailyTask',
    DailyTaskCompletion: 'DailyTaskCompletion',
    devotional_daily_task_templates: 'devotional_daily_task_templates',
    good_news: 'good_news',
    AiPlan: 'AiPlan',
    AiPlanTask: 'AiPlanTask',
    UserAiTaskProgress: 'UserAiTaskProgress',
    AiPlanDailyTask: 'AiPlanDailyTask'
    db?: Datasource
  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
    globalOmitOptions: {
      omit: GlobalOmitOptions
    meta: {
      modelProps: "user" | "reflection" | "like" | "reflectionComment" | "reflectionLike" | "journal" | "devotionalGoal" | "devotionalTask" | "userTaskProgress" | "nicheTag" | "reflectionNicheTag" | "dailyTask" | "dailyTaskCompletion" | "devotional_daily_task_templates" | "good_news" | "aiPlan" | "aiPlanTask" | "userAiTaskProgress" | "aiPlanDailyTask"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
      Reflection: {
        payload: Prisma.$ReflectionPayload<ExtArgs>
        fields: Prisma.ReflectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReflectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload> | null
          findUniqueOrThrow: {
            args: Prisma.ReflectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>
          findFirst: {
            args: Prisma.ReflectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload> | null
          findFirstOrThrow: {
            args: Prisma.ReflectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>
          findMany: {
            args: Prisma.ReflectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>[]
          create: {
            args: Prisma.ReflectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>
          createMany: {
            args: Prisma.ReflectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.ReflectionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>[]
          delete: {
            args: Prisma.ReflectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>
          update: {
            args: Prisma.ReflectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>
          deleteMany: {
            args: Prisma.ReflectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.ReflectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.ReflectionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>[]
          upsert: {
            args: Prisma.ReflectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionPayload>
          aggregate: {
            args: Prisma.ReflectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReflection>
          groupBy: {
            args: Prisma.ReflectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReflectionGroupByOutputType>[]
          count: {
            args: Prisma.ReflectionCountArgs<ExtArgs>
            result: $Utils.Optional<ReflectionCountAggregateOutputType> | number
      Like: {
        payload: Prisma.$LikePayload<ExtArgs>
        fields: Prisma.LikeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LikeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          findUniqueOrThrow: {
            args: Prisma.LikeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          findFirst: {
            args: Prisma.LikeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          findFirstOrThrow: {
            args: Prisma.LikeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          findMany: {
            args: Prisma.LikeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          create: {
            args: Prisma.LikeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          createMany: {
            args: Prisma.LikeCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.LikeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          delete: {
            args: Prisma.LikeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          update: {
            args: Prisma.LikeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          deleteMany: {
            args: Prisma.LikeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.LikeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.LikeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          upsert: {
            args: Prisma.LikeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          aggregate: {
            args: Prisma.LikeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLike>
          groupBy: {
            args: Prisma.LikeGroupByArgs<ExtArgs>
            result: $Utils.Optional<LikeGroupByOutputType>[]
          count: {
            args: Prisma.LikeCountArgs<ExtArgs>
            result: $Utils.Optional<LikeCountAggregateOutputType> | number
      ReflectionComment: {
        payload: Prisma.$ReflectionCommentPayload<ExtArgs>
        fields: Prisma.ReflectionCommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReflectionCommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload> | null
          findUniqueOrThrow: {
            args: Prisma.ReflectionCommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>
          findFirst: {
            args: Prisma.ReflectionCommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload> | null
          findFirstOrThrow: {
            args: Prisma.ReflectionCommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>
          findMany: {
            args: Prisma.ReflectionCommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>[]
          create: {
            args: Prisma.ReflectionCommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>
          createMany: {
            args: Prisma.ReflectionCommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.ReflectionCommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>[]
          delete: {
            args: Prisma.ReflectionCommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>
          update: {
            args: Prisma.ReflectionCommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>
          deleteMany: {
            args: Prisma.ReflectionCommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.ReflectionCommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.ReflectionCommentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>[]
          upsert: {
            args: Prisma.ReflectionCommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionCommentPayload>
          aggregate: {
            args: Prisma.ReflectionCommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReflectionComment>
          groupBy: {
            args: Prisma.ReflectionCommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReflectionCommentGroupByOutputType>[]
          count: {
            args: Prisma.ReflectionCommentCountArgs<ExtArgs>
            result: $Utils.Optional<ReflectionCommentCountAggregateOutputType> | number
      ReflectionLike: {
        payload: Prisma.$ReflectionLikePayload<ExtArgs>
        fields: Prisma.ReflectionLikeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReflectionLikeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload> | null
          findUniqueOrThrow: {
            args: Prisma.ReflectionLikeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>
          findFirst: {
            args: Prisma.ReflectionLikeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload> | null
          findFirstOrThrow: {
            args: Prisma.ReflectionLikeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>
          findMany: {
            args: Prisma.ReflectionLikeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>[]
          create: {
            args: Prisma.ReflectionLikeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>
          createMany: {
            args: Prisma.ReflectionLikeCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.ReflectionLikeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>[]
          delete: {
            args: Prisma.ReflectionLikeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>
          update: {
            args: Prisma.ReflectionLikeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>
          deleteMany: {
            args: Prisma.ReflectionLikeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.ReflectionLikeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.ReflectionLikeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>[]
          upsert: {
            args: Prisma.ReflectionLikeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionLikePayload>
          aggregate: {
            args: Prisma.ReflectionLikeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReflectionLike>
          groupBy: {
            args: Prisma.ReflectionLikeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReflectionLikeGroupByOutputType>[]
          count: {
            args: Prisma.ReflectionLikeCountArgs<ExtArgs>
            result: $Utils.Optional<ReflectionLikeCountAggregateOutputType> | number
      Journal: {
        payload: Prisma.$JournalPayload<ExtArgs>
        fields: Prisma.JournalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JournalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload> | null
          findUniqueOrThrow: {
            args: Prisma.JournalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>
          findFirst: {
            args: Prisma.JournalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload> | null
          findFirstOrThrow: {
            args: Prisma.JournalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>
          findMany: {
            args: Prisma.JournalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>[]
          create: {
            args: Prisma.JournalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>
          createMany: {
            args: Prisma.JournalCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.JournalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>[]
          delete: {
            args: Prisma.JournalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>
          update: {
            args: Prisma.JournalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>
          deleteMany: {
            args: Prisma.JournalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.JournalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.JournalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>[]
          upsert: {
            args: Prisma.JournalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalPayload>
          aggregate: {
            args: Prisma.JournalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJournal>
          groupBy: {
            args: Prisma.JournalGroupByArgs<ExtArgs>
            result: $Utils.Optional<JournalGroupByOutputType>[]
          count: {
            args: Prisma.JournalCountArgs<ExtArgs>
            result: $Utils.Optional<JournalCountAggregateOutputType> | number
      DevotionalGoal: {
        payload: Prisma.$DevotionalGoalPayload<ExtArgs>
        fields: Prisma.DevotionalGoalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevotionalGoalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload> | null
          findUniqueOrThrow: {
            args: Prisma.DevotionalGoalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>
          findFirst: {
            args: Prisma.DevotionalGoalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload> | null
          findFirstOrThrow: {
            args: Prisma.DevotionalGoalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>
          findMany: {
            args: Prisma.DevotionalGoalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>[]
          create: {
            args: Prisma.DevotionalGoalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>
          createMany: {
            args: Prisma.DevotionalGoalCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.DevotionalGoalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>[]
          delete: {
            args: Prisma.DevotionalGoalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>
          update: {
            args: Prisma.DevotionalGoalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>
          deleteMany: {
            args: Prisma.DevotionalGoalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.DevotionalGoalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.DevotionalGoalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>[]
          upsert: {
            args: Prisma.DevotionalGoalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalGoalPayload>
          aggregate: {
            args: Prisma.DevotionalGoalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevotionalGoal>
          groupBy: {
            args: Prisma.DevotionalGoalGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevotionalGoalGroupByOutputType>[]
          count: {
            args: Prisma.DevotionalGoalCountArgs<ExtArgs>
            result: $Utils.Optional<DevotionalGoalCountAggregateOutputType> | number
      DevotionalTask: {
        payload: Prisma.$DevotionalTaskPayload<ExtArgs>
        fields: Prisma.DevotionalTaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevotionalTaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload> | null
          findUniqueOrThrow: {
            args: Prisma.DevotionalTaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>
          findFirst: {
            args: Prisma.DevotionalTaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload> | null
          findFirstOrThrow: {
            args: Prisma.DevotionalTaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>
          findMany: {
            args: Prisma.DevotionalTaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>[]
          create: {
            args: Prisma.DevotionalTaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>
          createMany: {
            args: Prisma.DevotionalTaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.DevotionalTaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>[]
          delete: {
            args: Prisma.DevotionalTaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>
          update: {
            args: Prisma.DevotionalTaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>
          deleteMany: {
            args: Prisma.DevotionalTaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.DevotionalTaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.DevotionalTaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>[]
          upsert: {
            args: Prisma.DevotionalTaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevotionalTaskPayload>
          aggregate: {
            args: Prisma.DevotionalTaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevotionalTask>
          groupBy: {
            args: Prisma.DevotionalTaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevotionalTaskGroupByOutputType>[]
          count: {
            args: Prisma.DevotionalTaskCountArgs<ExtArgs>
            result: $Utils.Optional<DevotionalTaskCountAggregateOutputType> | number
      UserTaskProgress: {
        payload: Prisma.$UserTaskProgressPayload<ExtArgs>
        fields: Prisma.UserTaskProgressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserTaskProgressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload> | null
          findUniqueOrThrow: {
            args: Prisma.UserTaskProgressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>
          findFirst: {
            args: Prisma.UserTaskProgressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload> | null
          findFirstOrThrow: {
            args: Prisma.UserTaskProgressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>
          findMany: {
            args: Prisma.UserTaskProgressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>[]
          create: {
            args: Prisma.UserTaskProgressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>
          createMany: {
            args: Prisma.UserTaskProgressCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.UserTaskProgressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>[]
          delete: {
            args: Prisma.UserTaskProgressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>
          update: {
            args: Prisma.UserTaskProgressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>
          deleteMany: {
            args: Prisma.UserTaskProgressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.UserTaskProgressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.UserTaskProgressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>[]
          upsert: {
            args: Prisma.UserTaskProgressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTaskProgressPayload>
          aggregate: {
            args: Prisma.UserTaskProgressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserTaskProgress>
          groupBy: {
            args: Prisma.UserTaskProgressGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserTaskProgressGroupByOutputType>[]
          count: {
            args: Prisma.UserTaskProgressCountArgs<ExtArgs>
            result: $Utils.Optional<UserTaskProgressCountAggregateOutputType> | number
      NicheTag: {
        payload: Prisma.$NicheTagPayload<ExtArgs>
        fields: Prisma.NicheTagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NicheTagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload> | null
          findUniqueOrThrow: {
            args: Prisma.NicheTagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>
          findFirst: {
            args: Prisma.NicheTagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload> | null
          findFirstOrThrow: {
            args: Prisma.NicheTagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>
          findMany: {
            args: Prisma.NicheTagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>[]
          create: {
            args: Prisma.NicheTagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>
          createMany: {
            args: Prisma.NicheTagCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.NicheTagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>[]
          delete: {
            args: Prisma.NicheTagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>
          update: {
            args: Prisma.NicheTagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>
          deleteMany: {
            args: Prisma.NicheTagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.NicheTagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.NicheTagUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>[]
          upsert: {
            args: Prisma.NicheTagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NicheTagPayload>
          aggregate: {
            args: Prisma.NicheTagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNicheTag>
          groupBy: {
            args: Prisma.NicheTagGroupByArgs<ExtArgs>
            result: $Utils.Optional<NicheTagGroupByOutputType>[]
          count: {
            args: Prisma.NicheTagCountArgs<ExtArgs>
            result: $Utils.Optional<NicheTagCountAggregateOutputType> | number
      ReflectionNicheTag: {
        payload: Prisma.$ReflectionNicheTagPayload<ExtArgs>
        fields: Prisma.ReflectionNicheTagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReflectionNicheTagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload> | null
          findUniqueOrThrow: {
            args: Prisma.ReflectionNicheTagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>
          findFirst: {
            args: Prisma.ReflectionNicheTagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload> | null
          findFirstOrThrow: {
            args: Prisma.ReflectionNicheTagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>
          findMany: {
            args: Prisma.ReflectionNicheTagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>[]
          create: {
            args: Prisma.ReflectionNicheTagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>
          createMany: {
            args: Prisma.ReflectionNicheTagCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.ReflectionNicheTagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>[]
          delete: {
            args: Prisma.ReflectionNicheTagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>
          update: {
            args: Prisma.ReflectionNicheTagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>
          deleteMany: {
            args: Prisma.ReflectionNicheTagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.ReflectionNicheTagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.ReflectionNicheTagUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>[]
          upsert: {
            args: Prisma.ReflectionNicheTagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReflectionNicheTagPayload>
          aggregate: {
            args: Prisma.ReflectionNicheTagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReflectionNicheTag>
          groupBy: {
            args: Prisma.ReflectionNicheTagGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReflectionNicheTagGroupByOutputType>[]
          count: {
            args: Prisma.ReflectionNicheTagCountArgs<ExtArgs>
            result: $Utils.Optional<ReflectionNicheTagCountAggregateOutputType> | number
      DailyTask: {
        payload: Prisma.$DailyTaskPayload<ExtArgs>
        fields: Prisma.DailyTaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DailyTaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload> | null
          findUniqueOrThrow: {
            args: Prisma.DailyTaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>
          findFirst: {
            args: Prisma.DailyTaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload> | null
          findFirstOrThrow: {
            args: Prisma.DailyTaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>
          findMany: {
            args: Prisma.DailyTaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>[]
          create: {
            args: Prisma.DailyTaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>
          createMany: {
            args: Prisma.DailyTaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.DailyTaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>[]
          delete: {
            args: Prisma.DailyTaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>
          update: {
            args: Prisma.DailyTaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>
          deleteMany: {
            args: Prisma.DailyTaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.DailyTaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.DailyTaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>[]
          upsert: {
            args: Prisma.DailyTaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskPayload>
          aggregate: {
            args: Prisma.DailyTaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDailyTask>
          groupBy: {
            args: Prisma.DailyTaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<DailyTaskGroupByOutputType>[]
          count: {
            args: Prisma.DailyTaskCountArgs<ExtArgs>
            result: $Utils.Optional<DailyTaskCountAggregateOutputType> | number
      DailyTaskCompletion: {
        payload: Prisma.$DailyTaskCompletionPayload<ExtArgs>
        fields: Prisma.DailyTaskCompletionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DailyTaskCompletionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload> | null
          findUniqueOrThrow: {
            args: Prisma.DailyTaskCompletionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>
          findFirst: {
            args: Prisma.DailyTaskCompletionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload> | null
          findFirstOrThrow: {
            args: Prisma.DailyTaskCompletionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>
          findMany: {
            args: Prisma.DailyTaskCompletionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>[]
          create: {
            args: Prisma.DailyTaskCompletionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>
          createMany: {
            args: Prisma.DailyTaskCompletionCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.DailyTaskCompletionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>[]
          delete: {
            args: Prisma.DailyTaskCompletionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>
          update: {
            args: Prisma.DailyTaskCompletionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>
          deleteMany: {
            args: Prisma.DailyTaskCompletionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.DailyTaskCompletionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.DailyTaskCompletionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>[]
          upsert: {
            args: Prisma.DailyTaskCompletionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DailyTaskCompletionPayload>
          aggregate: {
            args: Prisma.DailyTaskCompletionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDailyTaskCompletion>
          groupBy: {
            args: Prisma.DailyTaskCompletionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DailyTaskCompletionGroupByOutputType>[]
          count: {
            args: Prisma.DailyTaskCompletionCountArgs<ExtArgs>
            result: $Utils.Optional<DailyTaskCompletionCountAggregateOutputType> | number
      devotional_daily_task_templates: {
        payload: Prisma.$devotional_daily_task_templatesPayload<ExtArgs>
        fields: Prisma.devotional_daily_task_templatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.devotional_daily_task_templatesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload> | null
          findUniqueOrThrow: {
            args: Prisma.devotional_daily_task_templatesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>
          findFirst: {
            args: Prisma.devotional_daily_task_templatesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload> | null
          findFirstOrThrow: {
            args: Prisma.devotional_daily_task_templatesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>
          findMany: {
            args: Prisma.devotional_daily_task_templatesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>[]
          create: {
            args: Prisma.devotional_daily_task_templatesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>
          createMany: {
            args: Prisma.devotional_daily_task_templatesCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.devotional_daily_task_templatesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>[]
          delete: {
            args: Prisma.devotional_daily_task_templatesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>
          update: {
            args: Prisma.devotional_daily_task_templatesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>
          deleteMany: {
            args: Prisma.devotional_daily_task_templatesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.devotional_daily_task_templatesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.devotional_daily_task_templatesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>[]
          upsert: {
            args: Prisma.devotional_daily_task_templatesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$devotional_daily_task_templatesPayload>
          aggregate: {
            args: Prisma.Devotional_daily_task_templatesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevotional_daily_task_templates>
          groupBy: {
            args: Prisma.devotional_daily_task_templatesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Devotional_daily_task_templatesGroupByOutputType>[]
          count: {
            args: Prisma.devotional_daily_task_templatesCountArgs<ExtArgs>
            result: $Utils.Optional<Devotional_daily_task_templatesCountAggregateOutputType> | number
      good_news: {
        payload: Prisma.$good_newsPayload<ExtArgs>
        fields: Prisma.good_newsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.good_newsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload> | null
          findUniqueOrThrow: {
            args: Prisma.good_newsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>
          findFirst: {
            args: Prisma.good_newsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload> | null
          findFirstOrThrow: {
            args: Prisma.good_newsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>
          findMany: {
            args: Prisma.good_newsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>[]
          create: {
            args: Prisma.good_newsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>
          createMany: {
            args: Prisma.good_newsCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.good_newsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>[]
          delete: {
            args: Prisma.good_newsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>
          update: {
            args: Prisma.good_newsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>
          deleteMany: {
            args: Prisma.good_newsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.good_newsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.good_newsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>[]
          upsert: {
            args: Prisma.good_newsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$good_newsPayload>
          aggregate: {
            args: Prisma.Good_newsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGood_news>
          groupBy: {
            args: Prisma.good_newsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Good_newsGroupByOutputType>[]
          count: {
            args: Prisma.good_newsCountArgs<ExtArgs>
            result: $Utils.Optional<Good_newsCountAggregateOutputType> | number
      AiPlan: {
        payload: Prisma.$AiPlanPayload<ExtArgs>
        fields: Prisma.AiPlanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AiPlanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload> | null
          findUniqueOrThrow: {
            args: Prisma.AiPlanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>
          findFirst: {
            args: Prisma.AiPlanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload> | null
          findFirstOrThrow: {
            args: Prisma.AiPlanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>
          findMany: {
            args: Prisma.AiPlanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>[]
          create: {
            args: Prisma.AiPlanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>
          createMany: {
            args: Prisma.AiPlanCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.AiPlanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>[]
          delete: {
            args: Prisma.AiPlanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>
          update: {
            args: Prisma.AiPlanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>
          deleteMany: {
            args: Prisma.AiPlanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.AiPlanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.AiPlanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>[]
          upsert: {
            args: Prisma.AiPlanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanPayload>
          aggregate: {
            args: Prisma.AiPlanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAiPlan>
          groupBy: {
            args: Prisma.AiPlanGroupByArgs<ExtArgs>
            result: $Utils.Optional<AiPlanGroupByOutputType>[]
          count: {
            args: Prisma.AiPlanCountArgs<ExtArgs>
            result: $Utils.Optional<AiPlanCountAggregateOutputType> | number
      AiPlanTask: {
        payload: Prisma.$AiPlanTaskPayload<ExtArgs>
        fields: Prisma.AiPlanTaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AiPlanTaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload> | null
          findUniqueOrThrow: {
            args: Prisma.AiPlanTaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>
          findFirst: {
            args: Prisma.AiPlanTaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload> | null
          findFirstOrThrow: {
            args: Prisma.AiPlanTaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>
          findMany: {
            args: Prisma.AiPlanTaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>[]
          create: {
            args: Prisma.AiPlanTaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>
          createMany: {
            args: Prisma.AiPlanTaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.AiPlanTaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>[]
          delete: {
            args: Prisma.AiPlanTaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>
          update: {
            args: Prisma.AiPlanTaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>
          deleteMany: {
            args: Prisma.AiPlanTaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.AiPlanTaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.AiPlanTaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>[]
          upsert: {
            args: Prisma.AiPlanTaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanTaskPayload>
          aggregate: {
            args: Prisma.AiPlanTaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAiPlanTask>
          groupBy: {
            args: Prisma.AiPlanTaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<AiPlanTaskGroupByOutputType>[]
          count: {
            args: Prisma.AiPlanTaskCountArgs<ExtArgs>
            result: $Utils.Optional<AiPlanTaskCountAggregateOutputType> | number
      UserAiTaskProgress: {
        payload: Prisma.$UserAiTaskProgressPayload<ExtArgs>
        fields: Prisma.UserAiTaskProgressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserAiTaskProgressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload> | null
          findUniqueOrThrow: {
            args: Prisma.UserAiTaskProgressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>
          findFirst: {
            args: Prisma.UserAiTaskProgressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload> | null
          findFirstOrThrow: {
            args: Prisma.UserAiTaskProgressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>
          findMany: {
            args: Prisma.UserAiTaskProgressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>[]
          create: {
            args: Prisma.UserAiTaskProgressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>
          createMany: {
            args: Prisma.UserAiTaskProgressCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.UserAiTaskProgressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>[]
          delete: {
            args: Prisma.UserAiTaskProgressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>
          update: {
            args: Prisma.UserAiTaskProgressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>
          deleteMany: {
            args: Prisma.UserAiTaskProgressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.UserAiTaskProgressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.UserAiTaskProgressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>[]
          upsert: {
            args: Prisma.UserAiTaskProgressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAiTaskProgressPayload>
          aggregate: {
            args: Prisma.UserAiTaskProgressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserAiTaskProgress>
          groupBy: {
            args: Prisma.UserAiTaskProgressGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserAiTaskProgressGroupByOutputType>[]
          count: {
            args: Prisma.UserAiTaskProgressCountArgs<ExtArgs>
            result: $Utils.Optional<UserAiTaskProgressCountAggregateOutputType> | number
      AiPlanDailyTask: {
        payload: Prisma.$AiPlanDailyTaskPayload<ExtArgs>
        fields: Prisma.AiPlanDailyTaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AiPlanDailyTaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload> | null
          findUniqueOrThrow: {
            args: Prisma.AiPlanDailyTaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>
          findFirst: {
            args: Prisma.AiPlanDailyTaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload> | null
          findFirstOrThrow: {
            args: Prisma.AiPlanDailyTaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>
          findMany: {
            args: Prisma.AiPlanDailyTaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>[]
          create: {
            args: Prisma.AiPlanDailyTaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>
          createMany: {
            args: Prisma.AiPlanDailyTaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          createManyAndReturn: {
            args: Prisma.AiPlanDailyTaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>[]
          delete: {
            args: Prisma.AiPlanDailyTaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>
          update: {
            args: Prisma.AiPlanDailyTaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>
          deleteMany: {
            args: Prisma.AiPlanDailyTaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          updateMany: {
            args: Prisma.AiPlanDailyTaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          updateManyAndReturn: {
            args: Prisma.AiPlanDailyTaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>[]
          upsert: {
            args: Prisma.AiPlanDailyTaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiPlanDailyTaskPayload>
          aggregate: {
            args: Prisma.AiPlanDailyTaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAiPlanDailyTask>
          groupBy: {
            args: Prisma.AiPlanDailyTaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<AiPlanDailyTaskGroupByOutputType>[]
          count: {
            args: Prisma.AiPlanDailyTaskCountArgs<ExtArgs>
            result: $Utils.Optional<AiPlanDailyTaskCountAggregateOutputType> | number
    other: {
      payload: unknown
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: unknown[]],
          result: unknown
        $executeRawUnsafe: {
          args: [query: string, ...values: unknown[]],
          result: unknown
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: unknown[]],
          result: unknown
        $queryRawUnsafe: {
          args: [query: string, ...values: unknown[]],
          result: unknown
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
    datasources?: Datasources
    datasourceUrl?: string
    errorFormat?: ErrorFormat
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
    log?: (LogLevel | LogDefinition)[]
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    adapter?: runtime.SqlDriverAdapterFactory | null
     *   omit: {
     *     user: {
     *       password: true
    omit?: Prisma.GlobalOmitConfig
    user?: UserOmit
    reflection?: ReflectionOmit
    like?: LikeOmit
    reflectionComment?: ReflectionCommentOmit
    reflectionLike?: ReflectionLikeOmit
    journal?: JournalOmit
    devotionalGoal?: DevotionalGoalOmit
    devotionalTask?: DevotionalTaskOmit
    userTaskProgress?: UserTaskProgressOmit
    nicheTag?: NicheTagOmit
    reflectionNicheTag?: ReflectionNicheTagOmit
    dailyTask?: DailyTaskOmit
    dailyTaskCompletion?: DailyTaskCompletionOmit
    devotional_daily_task_templates?: devotional_daily_task_templatesOmit
    good_news?: good_newsOmit
    aiPlan?: AiPlanOmit
    aiPlanTask?: AiPlanTaskOmit
    userAiTaskProgress?: UserAiTaskProgressOmit
    aiPlanDailyTask?: AiPlanDailyTaskOmit
    level: LogLevel
    emit: 'stdout' | 'event'
  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;
    T extends LogDefinition ? T['level'] : T
  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    : never;
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
    timestamp: Date
    message: string
    target: string
    | 'findMany'
    | 'createMany'
    | 'createManyAndReturn'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'deleteMany'
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;
    url?: string
    AiPlan: number
    dailyTaskCompletions: number
    dailyTasks: number
    journals: number
    likes: number
    reflectionComments: number
    reflectionLikes: number
    reflections: number
    UserAiTaskProgress: number
    user_task_progress: number
    AiPlan?: boolean | UserCountOutputTypeCountAiPlanArgs
    dailyTaskCompletions?: boolean | UserCountOutputTypeCountDailyTaskCompletionsArgs
    dailyTasks?: boolean | UserCountOutputTypeCountDailyTasksArgs
    journals?: boolean | UserCountOutputTypeCountJournalsArgs
    likes?: boolean | UserCountOutputTypeCountLikesArgs
    reflectionComments?: boolean | UserCountOutputTypeCountReflectionCommentsArgs
    reflectionLikes?: boolean | UserCountOutputTypeCountReflectionLikesArgs
    reflections?: boolean | UserCountOutputTypeCountReflectionsArgs
    UserAiTaskProgress?: boolean | UserCountOutputTypeCountUserAiTaskProgressArgs
    user_task_progress?: boolean | UserCountOutputTypeCountUser_task_progressArgs
    select?: UserCountOutputTypeSelect<ExtArgs> | null
    where?: AiPlanWhereInput
    where?: DailyTaskCompletionWhereInput
    where?: DailyTaskWhereInput
    where?: JournalWhereInput
    where?: LikeWhereInput
    where?: ReflectionCommentWhereInput
    where?: ReflectionLikeWhereInput
    where?: ReflectionWhereInput
    where?: UserAiTaskProgressWhereInput
    where?: UserTaskProgressWhereInput
    likes: number
    reflectionComments: number
    reflectionLikes: number
    reflectionNicheTags: number
    likes?: boolean | ReflectionCountOutputTypeCountLikesArgs
    reflectionComments?: boolean | ReflectionCountOutputTypeCountReflectionCommentsArgs
    reflectionLikes?: boolean | ReflectionCountOutputTypeCountReflectionLikesArgs
    reflectionNicheTags?: boolean | ReflectionCountOutputTypeCountReflectionNicheTagsArgs
    select?: ReflectionCountOutputTypeSelect<ExtArgs> | null
    where?: LikeWhereInput
    where?: ReflectionCommentWhereInput
    where?: ReflectionLikeWhereInput
    where?: ReflectionNicheTagWhereInput
    devotional_daily_task_templates: number
    tasks: number
    users: number
    devotional_daily_task_templates?: boolean | DevotionalGoalCountOutputTypeCountDevotional_daily_task_templatesArgs
    tasks?: boolean | DevotionalGoalCountOutputTypeCountTasksArgs
    users?: boolean | DevotionalGoalCountOutputTypeCountUsersArgs
    select?: DevotionalGoalCountOutputTypeSelect<ExtArgs> | null
    where?: devotional_daily_task_templatesWhereInput
    where?: DevotionalTaskWhereInput
    where?: UserWhereInput
    user_task_progress: number
    user_task_progress?: boolean | DevotionalTaskCountOutputTypeCountUser_task_progressArgs
    select?: DevotionalTaskCountOutputTypeSelect<ExtArgs> | null
    where?: UserTaskProgressWhereInput
    reflectionNicheTags: number
    reflectionNicheTags?: boolean | NicheTagCountOutputTypeCountReflectionNicheTagsArgs
    select?: NicheTagCountOutputTypeSelect<ExtArgs> | null
    where?: ReflectionNicheTagWhereInput
    completions: number
    completions?: boolean | DailyTaskCountOutputTypeCountCompletionsArgs
    select?: DailyTaskCountOutputTypeSelect<ExtArgs> | null
    where?: DailyTaskCompletionWhereInput
    dailyTasks: number
    tasks: number
    dailyTasks?: boolean | AiPlanCountOutputTypeCountDailyTasksArgs
    tasks?: boolean | AiPlanCountOutputTypeCountTasksArgs
    select?: AiPlanCountOutputTypeSelect<ExtArgs> | null
    where?: AiPlanDailyTaskWhereInput
    where?: AiPlanTaskWhereInput
    progress: number
    progress?: boolean | AiPlanTaskCountOutputTypeCountProgressArgs
    select?: AiPlanTaskCountOutputTypeSelect<ExtArgs> | null
    where?: UserAiTaskProgressWhereInput
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
    streak: number | null
    streak: number | null
    id: string | null
    email: string | null
    name: string | null
    password: string | null
    emailOptIn: boolean | null
    streak: number | null
    streak_last_date: Date | null
    avatar: string | null
    devotional_goal_id: string | null
    is_admin: boolean | null
    id: string | null
    email: string | null
    name: string | null
    password: string | null
    emailOptIn: boolean | null
    streak: number | null
    streak_last_date: Date | null
    avatar: string | null
    devotional_goal_id: string | null
    is_admin: boolean | null
    id: number
    email: number
    name: number
    password: number
    emailOptIn: number
    streak: number
    streak_last_date: number
    avatar: number
    devotional_goal_id: number
    is_admin: number
    _all: number
    streak?: true
    streak?: true
    id?: true
    email?: true
    name?: true
    password?: true
    emailOptIn?: true
    streak?: true
    streak_last_date?: true
    avatar?: true
    devotional_goal_id?: true
    is_admin?: true
    id?: true
    email?: true
    name?: true
    password?: true
    emailOptIn?: true
    streak?: true
    streak_last_date?: true
    avatar?: true
    devotional_goal_id?: true
    is_admin?: true
    id?: true
    email?: true
    name?: true
    password?: true
    emailOptIn?: true
    streak?: true
    streak_last_date?: true
    avatar?: true
    devotional_goal_id?: true
    is_admin?: true
    _all?: true
    where?: UserWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | UserCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _avg?: UserAvgAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _sum?: UserSumAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: UserMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: UserMaxAggregateInputType
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
    id: string
    email: string
    name: string | null
    password: string
    emailOptIn: boolean | null
    streak: number
    streak_last_date: Date | null
    avatar: string | null
    devotional_goal_id: string | null
    is_admin: boolean | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    emailOptIn?: boolean
    streak?: boolean
    streak_last_date?: boolean
    avatar?: boolean
    devotional_goal_id?: boolean
    is_admin?: boolean
    AiPlan?: boolean | User$AiPlanArgs<ExtArgs>
    dailyTaskCompletions?: boolean | User$dailyTaskCompletionsArgs<ExtArgs>
    dailyTasks?: boolean | User$dailyTasksArgs<ExtArgs>
    journals?: boolean | User$journalsArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    reflectionComments?: boolean | User$reflectionCommentsArgs<ExtArgs>
    reflectionLikes?: boolean | User$reflectionLikesArgs<ExtArgs>
    reflections?: boolean | User$reflectionsArgs<ExtArgs>
    UserAiTaskProgress?: boolean | User$UserAiTaskProgressArgs<ExtArgs>
    user_task_progress?: boolean | User$user_task_progressArgs<ExtArgs>
    devotionalGoal?: boolean | User$devotionalGoalArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    emailOptIn?: boolean
    streak?: boolean
    streak_last_date?: boolean
    avatar?: boolean
    devotional_goal_id?: boolean
    is_admin?: boolean
    devotionalGoal?: boolean | User$devotionalGoalArgs<ExtArgs>
  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    emailOptIn?: boolean
    streak?: boolean
    streak_last_date?: boolean
    avatar?: boolean
    devotional_goal_id?: boolean
    is_admin?: boolean
    devotionalGoal?: boolean | User$devotionalGoalArgs<ExtArgs>
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    emailOptIn?: boolean
    streak?: boolean
    streak_last_date?: boolean
    avatar?: boolean
    devotional_goal_id?: boolean
    is_admin?: boolean
    AiPlan?: boolean | User$AiPlanArgs<ExtArgs>
    dailyTaskCompletions?: boolean | User$dailyTaskCompletionsArgs<ExtArgs>
    dailyTasks?: boolean | User$dailyTasksArgs<ExtArgs>
    journals?: boolean | User$journalsArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    reflectionComments?: boolean | User$reflectionCommentsArgs<ExtArgs>
    reflectionLikes?: boolean | User$reflectionLikesArgs<ExtArgs>
    reflections?: boolean | User$reflectionsArgs<ExtArgs>
    UserAiTaskProgress?: boolean | User$UserAiTaskProgressArgs<ExtArgs>
    user_task_progress?: boolean | User$user_task_progressArgs<ExtArgs>
    devotionalGoal?: boolean | User$devotionalGoalArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devotionalGoal?: boolean | User$devotionalGoalArgs<ExtArgs>
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devotionalGoal?: boolean | User$devotionalGoalArgs<ExtArgs>
    name: "User"
    objects: {
      AiPlan: Prisma.$AiPlanPayload<ExtArgs>[]
      dailyTaskCompletions: Prisma.$DailyTaskCompletionPayload<ExtArgs>[]
      dailyTasks: Prisma.$DailyTaskPayload<ExtArgs>[]
      journals: Prisma.$JournalPayload<ExtArgs>[]
      likes: Prisma.$LikePayload<ExtArgs>[]
      reflectionComments: Prisma.$ReflectionCommentPayload<ExtArgs>[]
      reflectionLikes: Prisma.$ReflectionLikePayload<ExtArgs>[]
      reflections: Prisma.$ReflectionPayload<ExtArgs>[]
      UserAiTaskProgress: Prisma.$UserAiTaskProgressPayload<ExtArgs>[]
      user_task_progress: Prisma.$UserTaskProgressPayload<ExtArgs>[]
      devotionalGoal: Prisma.$DevotionalGoalPayload<ExtArgs> | null
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string | null
      password: string
      emailOptIn: boolean | null
      streak: number
      streak_last_date: Date | null
      avatar: string | null
      devotional_goal_id: string | null
      is_admin: boolean | null
    composites: {}
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
     *   where: {
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * const users = await prisma.user.findMany()
     * const users = await prisma.user.findMany({ take: 10 })
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * const { count } = await prisma.user.deleteMany({
     *   where: {
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *   data: [
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: UserFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AiPlan<T extends User$AiPlanArgs<ExtArgs> = {}>(args?: Subset<T, User$AiPlanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    dailyTaskCompletions<T extends User$dailyTaskCompletionsArgs<ExtArgs> = {}>(args?: Subset<T, User$dailyTaskCompletionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    dailyTasks<T extends User$dailyTasksArgs<ExtArgs> = {}>(args?: Subset<T, User$dailyTasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    journals<T extends User$journalsArgs<ExtArgs> = {}>(args?: Subset<T, User$journalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends User$likesArgs<ExtArgs> = {}>(args?: Subset<T, User$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reflectionComments<T extends User$reflectionCommentsArgs<ExtArgs> = {}>(args?: Subset<T, User$reflectionCommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reflectionLikes<T extends User$reflectionLikesArgs<ExtArgs> = {}>(args?: Subset<T, User$reflectionLikesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reflections<T extends User$reflectionsArgs<ExtArgs> = {}>(args?: Subset<T, User$reflectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserAiTaskProgress<T extends User$UserAiTaskProgressArgs<ExtArgs> = {}>(args?: Subset<T, User$UserAiTaskProgressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_task_progress<T extends User$user_task_progressArgs<ExtArgs> = {}>(args?: Subset<T, User$user_task_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    devotionalGoal<T extends User$devotionalGoalArgs<ExtArgs> = {}>(args?: Subset<T, User$devotionalGoalArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly emailOptIn: FieldRef<"User", 'Boolean'>
    readonly streak: FieldRef<"User", 'Int'>
    readonly streak_last_date: FieldRef<"User", 'DateTime'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly devotional_goal_id: FieldRef<"User", 'String'>
    readonly is_admin: FieldRef<"User", 'Boolean'>
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where: UserWhereUniqueInput
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where: UserWhereUniqueInput
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
   * User findMany
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
   * User createMany
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many Users.
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
   * User createManyAndReturn
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
     * The data used to create many Users.
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    where: UserWhereUniqueInput
   * User updateMany
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    where?: UserWhereInput
     * Limit how many Users to update.
    limit?: number
   * User updateManyAndReturn
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    where?: UserWhereInput
     * Limit how many Users to update.
    limit?: number
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where: UserWhereUniqueInput
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where: UserWhereUniqueInput
   * User deleteMany
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
     * Limit how many Users to delete.
    limit?: number
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where?: AiPlanWhereInput
    orderBy?: AiPlanOrderByWithRelationInput | AiPlanOrderByWithRelationInput[]
    cursor?: AiPlanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AiPlanScalarFieldEnum | AiPlanScalarFieldEnum[]
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where?: DailyTaskCompletionWhereInput
    orderBy?: DailyTaskCompletionOrderByWithRelationInput | DailyTaskCompletionOrderByWithRelationInput[]
    cursor?: DailyTaskCompletionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DailyTaskCompletionScalarFieldEnum | DailyTaskCompletionScalarFieldEnum[]
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where?: DailyTaskWhereInput
    orderBy?: DailyTaskOrderByWithRelationInput | DailyTaskOrderByWithRelationInput[]
    cursor?: DailyTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DailyTaskScalarFieldEnum | DailyTaskScalarFieldEnum[]
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where?: JournalWhereInput
    orderBy?: JournalOrderByWithRelationInput | JournalOrderByWithRelationInput[]
    cursor?: JournalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JournalScalarFieldEnum | JournalScalarFieldEnum[]
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where?: ReflectionCommentWhereInput
    orderBy?: ReflectionCommentOrderByWithRelationInput | ReflectionCommentOrderByWithRelationInput[]
    cursor?: ReflectionCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionCommentScalarFieldEnum | ReflectionCommentScalarFieldEnum[]
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where?: ReflectionLikeWhereInput
    orderBy?: ReflectionLikeOrderByWithRelationInput | ReflectionLikeOrderByWithRelationInput[]
    cursor?: ReflectionLikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionLikeScalarFieldEnum | ReflectionLikeScalarFieldEnum[]
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where?: ReflectionWhereInput
    orderBy?: ReflectionOrderByWithRelationInput | ReflectionOrderByWithRelationInput[]
    cursor?: ReflectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionScalarFieldEnum | ReflectionScalarFieldEnum[]
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where?: UserAiTaskProgressWhereInput
    orderBy?: UserAiTaskProgressOrderByWithRelationInput | UserAiTaskProgressOrderByWithRelationInput[]
    cursor?: UserAiTaskProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserAiTaskProgressScalarFieldEnum | UserAiTaskProgressScalarFieldEnum[]
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where?: UserTaskProgressWhereInput
    orderBy?: UserTaskProgressOrderByWithRelationInput | UserTaskProgressOrderByWithRelationInput[]
    cursor?: UserTaskProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTaskProgressScalarFieldEnum | UserTaskProgressScalarFieldEnum[]
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where?: DevotionalGoalWhereInput
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    _count: ReflectionCountAggregateOutputType | null
    _min: ReflectionMinAggregateOutputType | null
    _max: ReflectionMaxAggregateOutputType | null
    id: string | null
    user_id: string | null
    text: string | null
    mood: string | null
    created_at: Date | null
    status: string | null
    id: string | null
    user_id: string | null
    text: string | null
    mood: string | null
    created_at: Date | null
    status: string | null
    id: number
    user_id: number
    text: number
    mood: number
    created_at: number
    status: number
    _all: number
    id?: true
    user_id?: true
    text?: true
    mood?: true
    created_at?: true
    status?: true
    id?: true
    user_id?: true
    text?: true
    mood?: true
    created_at?: true
    status?: true
    id?: true
    user_id?: true
    text?: true
    mood?: true
    created_at?: true
    status?: true
    _all?: true
    where?: ReflectionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionOrderByWithRelationInput | ReflectionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | ReflectionCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: ReflectionMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: ReflectionMaxAggregateInputType
        [P in keyof T & keyof AggregateReflection]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateReflection[P]>
      : GetScalarType<T[P], AggregateReflection[P]>
    where?: ReflectionWhereInput
    orderBy?: ReflectionOrderByWithAggregationInput | ReflectionOrderByWithAggregationInput[]
    by: ReflectionScalarFieldEnum[] | ReflectionScalarFieldEnum
    having?: ReflectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReflectionCountAggregateInputType | true
    _min?: ReflectionMinAggregateInputType
    _max?: ReflectionMaxAggregateInputType
    id: string
    user_id: string
    text: string
    mood: string | null
    created_at: Date | null
    status: string | null
    _count: ReflectionCountAggregateOutputType | null
    _min: ReflectionMinAggregateOutputType | null
    _max: ReflectionMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof ReflectionGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], ReflectionGroupByOutputType[P]>
            : GetScalarType<T[P], ReflectionGroupByOutputType[P]>
    id?: boolean
    user_id?: boolean
    text?: boolean
    mood?: boolean
    created_at?: boolean
    status?: boolean
    likes?: boolean | Reflection$likesArgs<ExtArgs>
    reflectionComments?: boolean | Reflection$reflectionCommentsArgs<ExtArgs>
    reflectionLikes?: boolean | Reflection$reflectionLikesArgs<ExtArgs>
    reflectionNicheTags?: boolean | Reflection$reflectionNicheTagsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | ReflectionCountOutputTypeDefaultArgs<ExtArgs>
  export type ReflectionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    text?: boolean
    mood?: boolean
    created_at?: boolean
    status?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    text?: boolean
    mood?: boolean
    created_at?: boolean
    status?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    user_id?: boolean
    text?: boolean
    mood?: boolean
    created_at?: boolean
    status?: boolean
    likes?: boolean | Reflection$likesArgs<ExtArgs>
    reflectionComments?: boolean | Reflection$reflectionCommentsArgs<ExtArgs>
    reflectionLikes?: boolean | Reflection$reflectionLikesArgs<ExtArgs>
    reflectionNicheTags?: boolean | Reflection$reflectionNicheTagsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | ReflectionCountOutputTypeDefaultArgs<ExtArgs>
  export type ReflectionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "Reflection"
    objects: {
      likes: Prisma.$LikePayload<ExtArgs>[]
      reflectionComments: Prisma.$ReflectionCommentPayload<ExtArgs>[]
      reflectionLikes: Prisma.$ReflectionLikePayload<ExtArgs>[]
      reflectionNicheTags: Prisma.$ReflectionNicheTagPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      text: string
      mood: string | null
      created_at: Date | null
      status: string | null
    composites: {}
    Omit<ReflectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReflectionCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reflection'], meta: { name: 'Reflection' } }
     *   where: {
    findUnique<T extends ReflectionFindUniqueArgs>(args: SelectSubset<T, ReflectionFindUniqueArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends ReflectionFindUniqueOrThrowArgs>(args: SelectSubset<T, ReflectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends ReflectionFindFirstArgs>(args?: SelectSubset<T, ReflectionFindFirstArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends ReflectionFindFirstOrThrowArgs>(args?: SelectSubset<T, ReflectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * const reflections = await prisma.reflection.findMany()
     * const reflections = await prisma.reflection.findMany({ take: 10 })
     * const reflectionWithIdOnly = await prisma.reflection.findMany({ select: { id: true } })
    findMany<T extends ReflectionFindManyArgs>(args?: SelectSubset<T, ReflectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends ReflectionCreateArgs>(args: SelectSubset<T, ReflectionCreateArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many Reflections.
     * @param {ReflectionCreateManyArgs} args - Arguments to create many Reflections.
     * // Create many Reflections
     * const reflection = await prisma.reflection.createMany({
     *   data: [
    createMany<T extends ReflectionCreateManyArgs>(args?: SelectSubset<T, ReflectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many Reflections and returns the data saved in the database.
     * @param {ReflectionCreateManyAndReturnArgs} args - Arguments to create many Reflections.
     * // Create many Reflections
     * const reflection = await prisma.reflection.createManyAndReturn({
     *   data: [
     * // Create many Reflections and only return the `id`
     * const reflectionWithIdOnly = await prisma.reflection.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends ReflectionCreateManyAndReturnArgs>(args?: SelectSubset<T, ReflectionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends ReflectionDeleteArgs>(args: SelectSubset<T, ReflectionDeleteArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends ReflectionUpdateArgs>(args: SelectSubset<T, ReflectionUpdateArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {ReflectionDeleteManyArgs} args - Arguments to filter Reflections to delete.
     * const { count } = await prisma.reflection.deleteMany({
     *   where: {
    deleteMany<T extends ReflectionDeleteManyArgs>(args?: SelectSubset<T, ReflectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many Reflections
     * const reflection = await prisma.reflection.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends ReflectionUpdateManyArgs>(args: SelectSubset<T, ReflectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {ReflectionUpdateManyAndReturnArgs} args - Arguments to update many Reflections.
     * // Update many Reflections
     * const reflection = await prisma.reflection.updateManyAndReturn({
     *   where: {
     *   data: [
     * const reflectionWithIdOnly = await prisma.reflection.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends ReflectionUpdateManyAndReturnArgs>(args: SelectSubset<T, ReflectionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends ReflectionUpsertArgs>(args: SelectSubset<T, ReflectionUpsertArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, ReflectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], ReflectionCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends ReflectionAggregateArgs>(args: Subset<T, ReflectionAggregateArgs>): Prisma.PrismaPromise<GetReflectionAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: ReflectionGroupByArgs['orderBy'] }
        : { orderBy?: ReflectionGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, ReflectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReflectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: ReflectionFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    likes<T extends Reflection$likesArgs<ExtArgs> = {}>(args?: Subset<T, Reflection$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reflectionComments<T extends Reflection$reflectionCommentsArgs<ExtArgs> = {}>(args?: Subset<T, Reflection$reflectionCommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reflectionLikes<T extends Reflection$reflectionLikesArgs<ExtArgs> = {}>(args?: Subset<T, Reflection$reflectionLikesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reflectionNicheTags<T extends Reflection$reflectionNicheTagsArgs<ExtArgs> = {}>(args?: Subset<T, Reflection$reflectionNicheTagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"Reflection", 'String'>
    readonly user_id: FieldRef<"Reflection", 'String'>
    readonly text: FieldRef<"Reflection", 'String'>
    readonly mood: FieldRef<"Reflection", 'String'>
    readonly created_at: FieldRef<"Reflection", 'DateTime'>
    readonly status: FieldRef<"Reflection", 'String'>
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where: ReflectionWhereUniqueInput
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where: ReflectionWhereUniqueInput
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where?: ReflectionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionOrderByWithRelationInput | ReflectionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionScalarFieldEnum | ReflectionScalarFieldEnum[]
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where?: ReflectionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionOrderByWithRelationInput | ReflectionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionScalarFieldEnum | ReflectionScalarFieldEnum[]
   * Reflection findMany
  export type ReflectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where?: ReflectionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionOrderByWithRelationInput | ReflectionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: ReflectionScalarFieldEnum | ReflectionScalarFieldEnum[]
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    data: XOR<ReflectionCreateInput, ReflectionUncheckedCreateInput>
   * Reflection createMany
  export type ReflectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many Reflections.
    data: ReflectionCreateManyInput | ReflectionCreateManyInput[]
    skipDuplicates?: boolean
   * Reflection createManyAndReturn
  export type ReflectionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionSelectCreateManyAndReturn<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
     * The data used to create many Reflections.
    data: ReflectionCreateManyInput | ReflectionCreateManyInput[]
    skipDuplicates?: boolean
    include?: ReflectionIncludeCreateManyAndReturn<ExtArgs> | null
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    data: XOR<ReflectionUpdateInput, ReflectionUncheckedUpdateInput>
    where: ReflectionWhereUniqueInput
   * Reflection updateMany
  export type ReflectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<ReflectionUpdateManyMutationInput, ReflectionUncheckedUpdateManyInput>
    where?: ReflectionWhereInput
     * Limit how many Reflections to update.
    limit?: number
   * Reflection updateManyAndReturn
  export type ReflectionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    data: XOR<ReflectionUpdateManyMutationInput, ReflectionUncheckedUpdateManyInput>
    where?: ReflectionWhereInput
     * Limit how many Reflections to update.
    limit?: number
    include?: ReflectionIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where: ReflectionWhereUniqueInput
    create: XOR<ReflectionCreateInput, ReflectionUncheckedCreateInput>
    update: XOR<ReflectionUpdateInput, ReflectionUncheckedUpdateInput>
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    where: ReflectionWhereUniqueInput
   * Reflection deleteMany
  export type ReflectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReflectionWhereInput
     * Limit how many Reflections to delete.
    limit?: number
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where?: ReflectionCommentWhereInput
    orderBy?: ReflectionCommentOrderByWithRelationInput | ReflectionCommentOrderByWithRelationInput[]
    cursor?: ReflectionCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionCommentScalarFieldEnum | ReflectionCommentScalarFieldEnum[]
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where?: ReflectionLikeWhereInput
    orderBy?: ReflectionLikeOrderByWithRelationInput | ReflectionLikeOrderByWithRelationInput[]
    cursor?: ReflectionLikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionLikeScalarFieldEnum | ReflectionLikeScalarFieldEnum[]
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where?: ReflectionNicheTagWhereInput
    orderBy?: ReflectionNicheTagOrderByWithRelationInput | ReflectionNicheTagOrderByWithRelationInput[]
    cursor?: ReflectionNicheTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionNicheTagScalarFieldEnum | ReflectionNicheTagScalarFieldEnum[]
    select?: ReflectionSelect<ExtArgs> | null
    omit?: ReflectionOmit<ExtArgs> | null
    include?: ReflectionInclude<ExtArgs> | null
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
    id: string | null
    reflection_id: string | null
    user_id: string | null
    created_at: Date | null
    id: string | null
    reflection_id: string | null
    user_id: string | null
    created_at: Date | null
    id: number
    reflection_id: number
    user_id: number
    created_at: number
    _all: number
    id?: true
    reflection_id?: true
    user_id?: true
    created_at?: true
    id?: true
    reflection_id?: true
    user_id?: true
    created_at?: true
    id?: true
    reflection_id?: true
    user_id?: true
    created_at?: true
    _all?: true
    where?: LikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: LikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | LikeCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: LikeMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: LikeMaxAggregateInputType
        [P in keyof T & keyof AggregateLike]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateLike[P]>
      : GetScalarType<T[P], AggregateLike[P]>
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithAggregationInput | LikeOrderByWithAggregationInput[]
    by: LikeScalarFieldEnum[] | LikeScalarFieldEnum
    having?: LikeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikeCountAggregateInputType | true
    _min?: LikeMinAggregateInputType
    _max?: LikeMaxAggregateInputType
    id: string
    reflection_id: string
    user_id: string
    created_at: Date | null
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof LikeGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], LikeGroupByOutputType[P]>
            : GetScalarType<T[P], LikeGroupByOutputType[P]>
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type LikeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type LikeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type LikeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type LikeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "Like"
    objects: {
      reflection: Prisma.$ReflectionPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reflection_id: string
      user_id: string
      created_at: Date | null
    composites: {}
    Omit<LikeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LikeCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Like'], meta: { name: 'Like' } }
     *   where: {
    findUnique<T extends LikeFindUniqueArgs>(args: SelectSubset<T, LikeFindUniqueArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends LikeFindUniqueOrThrowArgs>(args: SelectSubset<T, LikeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends LikeFindFirstArgs>(args?: SelectSubset<T, LikeFindFirstArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends LikeFindFirstOrThrowArgs>(args?: SelectSubset<T, LikeFindFirstOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindManyArgs} args - Arguments to filter and select certain fields only.
     * const likes = await prisma.like.findMany()
     * const likes = await prisma.like.findMany({ take: 10 })
     * const likeWithIdOnly = await prisma.like.findMany({ select: { id: true } })
    findMany<T extends LikeFindManyArgs>(args?: SelectSubset<T, LikeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends LikeCreateArgs>(args: SelectSubset<T, LikeCreateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many Likes.
     * @param {LikeCreateManyArgs} args - Arguments to create many Likes.
     * // Create many Likes
     * const like = await prisma.like.createMany({
     *   data: [
    createMany<T extends LikeCreateManyArgs>(args?: SelectSubset<T, LikeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many Likes and returns the data saved in the database.
     * @param {LikeCreateManyAndReturnArgs} args - Arguments to create many Likes.
     * // Create many Likes
     * const like = await prisma.like.createManyAndReturn({
     *   data: [
     * // Create many Likes and only return the `id`
     * const likeWithIdOnly = await prisma.like.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends LikeCreateManyAndReturnArgs>(args?: SelectSubset<T, LikeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends LikeDeleteArgs>(args: SelectSubset<T, LikeDeleteArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends LikeUpdateArgs>(args: SelectSubset<T, LikeUpdateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {LikeDeleteManyArgs} args - Arguments to filter Likes to delete.
     * const { count } = await prisma.like.deleteMany({
     *   where: {
    deleteMany<T extends LikeDeleteManyArgs>(args?: SelectSubset<T, LikeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many Likes
     * const like = await prisma.like.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends LikeUpdateManyArgs>(args: SelectSubset<T, LikeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {LikeUpdateManyAndReturnArgs} args - Arguments to update many Likes.
     * // Update many Likes
     * const like = await prisma.like.updateManyAndReturn({
     *   where: {
     *   data: [
     * const likeWithIdOnly = await prisma.like.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends LikeUpdateManyAndReturnArgs>(args: SelectSubset<T, LikeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends LikeUpsertArgs>(args: SelectSubset<T, LikeUpsertArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, LikeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], LikeCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends LikeAggregateArgs>(args: Subset<T, LikeAggregateArgs>): Prisma.PrismaPromise<GetLikeAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: LikeGroupByArgs['orderBy'] }
        : { orderBy?: LikeGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, LikeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: LikeFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reflection<T extends ReflectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReflectionDefaultArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"Like", 'String'>
    readonly reflection_id: FieldRef<"Like", 'String'>
    readonly user_id: FieldRef<"Like", 'String'>
    readonly created_at: FieldRef<"Like", 'DateTime'>
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where: LikeWhereUniqueInput
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where: LikeWhereUniqueInput
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: LikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: LikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
   * Like findMany
  export type LikeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: LikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    data: XOR<LikeCreateInput, LikeUncheckedCreateInput>
   * Like createMany
  export type LikeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many Likes.
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
   * Like createManyAndReturn
  export type LikeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: LikeSelectCreateManyAndReturn<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
     * The data used to create many Likes.
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
    include?: LikeIncludeCreateManyAndReturn<ExtArgs> | null
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    data: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
    where: LikeWhereUniqueInput
   * Like updateMany
  export type LikeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyInput>
    where?: LikeWhereInput
     * Limit how many Likes to update.
    limit?: number
   * Like updateManyAndReturn
  export type LikeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: LikeSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyInput>
    where?: LikeWhereInput
     * Limit how many Likes to update.
    limit?: number
    include?: LikeIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateInput, LikeUncheckedCreateInput>
    update: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    where: LikeWhereUniqueInput
   * Like deleteMany
  export type LikeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
     * Limit how many Likes to delete.
    limit?: number
    select?: LikeSelect<ExtArgs> | null
    omit?: LikeOmit<ExtArgs> | null
    include?: LikeInclude<ExtArgs> | null
    _count: ReflectionCommentCountAggregateOutputType | null
    _min: ReflectionCommentMinAggregateOutputType | null
    _max: ReflectionCommentMaxAggregateOutputType | null
    id: string | null
    reflection_id: string | null
    user_id: string | null
    comment: string | null
    created_at: Date | null
    status: string | null
    id: string | null
    reflection_id: string | null
    user_id: string | null
    comment: string | null
    created_at: Date | null
    status: string | null
    id: number
    reflection_id: number
    user_id: number
    comment: number
    created_at: number
    status: number
    _all: number
    id?: true
    reflection_id?: true
    user_id?: true
    comment?: true
    created_at?: true
    status?: true
    id?: true
    reflection_id?: true
    user_id?: true
    comment?: true
    created_at?: true
    status?: true
    id?: true
    reflection_id?: true
    user_id?: true
    comment?: true
    created_at?: true
    status?: true
    _all?: true
    where?: ReflectionCommentWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionCommentOrderByWithRelationInput | ReflectionCommentOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionCommentWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | ReflectionCommentCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: ReflectionCommentMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: ReflectionCommentMaxAggregateInputType
        [P in keyof T & keyof AggregateReflectionComment]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateReflectionComment[P]>
      : GetScalarType<T[P], AggregateReflectionComment[P]>
    where?: ReflectionCommentWhereInput
    orderBy?: ReflectionCommentOrderByWithAggregationInput | ReflectionCommentOrderByWithAggregationInput[]
    by: ReflectionCommentScalarFieldEnum[] | ReflectionCommentScalarFieldEnum
    having?: ReflectionCommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReflectionCommentCountAggregateInputType | true
    _min?: ReflectionCommentMinAggregateInputType
    _max?: ReflectionCommentMaxAggregateInputType
    id: string
    reflection_id: string
    user_id: string
    comment: string
    created_at: Date | null
    status: string | null
    _count: ReflectionCommentCountAggregateOutputType | null
    _min: ReflectionCommentMinAggregateOutputType | null
    _max: ReflectionCommentMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof ReflectionCommentGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], ReflectionCommentGroupByOutputType[P]>
            : GetScalarType<T[P], ReflectionCommentGroupByOutputType[P]>
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    comment?: boolean
    created_at?: boolean
    status?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionCommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    comment?: boolean
    created_at?: boolean
    status?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionCommentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    comment?: boolean
    created_at?: boolean
    status?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    comment?: boolean
    created_at?: boolean
    status?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionCommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionCommentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "ReflectionComment"
    objects: {
      reflection: Prisma.$ReflectionPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reflection_id: string
      user_id: string
      comment: string
      created_at: Date | null
      status: string | null
    composites: {}
    Omit<ReflectionCommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReflectionCommentCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReflectionComment'], meta: { name: 'ReflectionComment' } }
     *   where: {
    findUnique<T extends ReflectionCommentFindUniqueArgs>(args: SelectSubset<T, ReflectionCommentFindUniqueArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends ReflectionCommentFindUniqueOrThrowArgs>(args: SelectSubset<T, ReflectionCommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends ReflectionCommentFindFirstArgs>(args?: SelectSubset<T, ReflectionCommentFindFirstArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends ReflectionCommentFindFirstOrThrowArgs>(args?: SelectSubset<T, ReflectionCommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionCommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * const reflectionComments = await prisma.reflectionComment.findMany()
     * const reflectionComments = await prisma.reflectionComment.findMany({ take: 10 })
     * const reflectionCommentWithIdOnly = await prisma.reflectionComment.findMany({ select: { id: true } })
    findMany<T extends ReflectionCommentFindManyArgs>(args?: SelectSubset<T, ReflectionCommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends ReflectionCommentCreateArgs>(args: SelectSubset<T, ReflectionCommentCreateArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many ReflectionComments.
     * @param {ReflectionCommentCreateManyArgs} args - Arguments to create many ReflectionComments.
     * // Create many ReflectionComments
     * const reflectionComment = await prisma.reflectionComment.createMany({
     *   data: [
    createMany<T extends ReflectionCommentCreateManyArgs>(args?: SelectSubset<T, ReflectionCommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many ReflectionComments and returns the data saved in the database.
     * @param {ReflectionCommentCreateManyAndReturnArgs} args - Arguments to create many ReflectionComments.
     * // Create many ReflectionComments
     * const reflectionComment = await prisma.reflectionComment.createManyAndReturn({
     *   data: [
     * // Create many ReflectionComments and only return the `id`
     * const reflectionCommentWithIdOnly = await prisma.reflectionComment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends ReflectionCommentCreateManyAndReturnArgs>(args?: SelectSubset<T, ReflectionCommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends ReflectionCommentDeleteArgs>(args: SelectSubset<T, ReflectionCommentDeleteArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends ReflectionCommentUpdateArgs>(args: SelectSubset<T, ReflectionCommentUpdateArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {ReflectionCommentDeleteManyArgs} args - Arguments to filter ReflectionComments to delete.
     * const { count } = await prisma.reflectionComment.deleteMany({
     *   where: {
    deleteMany<T extends ReflectionCommentDeleteManyArgs>(args?: SelectSubset<T, ReflectionCommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionCommentUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many ReflectionComments
     * const reflectionComment = await prisma.reflectionComment.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends ReflectionCommentUpdateManyArgs>(args: SelectSubset<T, ReflectionCommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {ReflectionCommentUpdateManyAndReturnArgs} args - Arguments to update many ReflectionComments.
     * // Update many ReflectionComments
     * const reflectionComment = await prisma.reflectionComment.updateManyAndReturn({
     *   where: {
     *   data: [
     * const reflectionCommentWithIdOnly = await prisma.reflectionComment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends ReflectionCommentUpdateManyAndReturnArgs>(args: SelectSubset<T, ReflectionCommentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends ReflectionCommentUpsertArgs>(args: SelectSubset<T, ReflectionCommentUpsertArgs<ExtArgs>>): Prisma__ReflectionCommentClient<$Result.GetResult<Prisma.$ReflectionCommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, ReflectionCommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], ReflectionCommentCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends ReflectionCommentAggregateArgs>(args: Subset<T, ReflectionCommentAggregateArgs>): Prisma.PrismaPromise<GetReflectionCommentAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: ReflectionCommentGroupByArgs['orderBy'] }
        : { orderBy?: ReflectionCommentGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, ReflectionCommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReflectionCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: ReflectionCommentFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reflection<T extends ReflectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReflectionDefaultArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"ReflectionComment", 'String'>
    readonly reflection_id: FieldRef<"ReflectionComment", 'String'>
    readonly user_id: FieldRef<"ReflectionComment", 'String'>
    readonly comment: FieldRef<"ReflectionComment", 'String'>
    readonly created_at: FieldRef<"ReflectionComment", 'DateTime'>
    readonly status: FieldRef<"ReflectionComment", 'String'>
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where: ReflectionCommentWhereUniqueInput
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where: ReflectionCommentWhereUniqueInput
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where?: ReflectionCommentWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionCommentOrderByWithRelationInput | ReflectionCommentOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionCommentWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionCommentScalarFieldEnum | ReflectionCommentScalarFieldEnum[]
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where?: ReflectionCommentWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionCommentOrderByWithRelationInput | ReflectionCommentOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionCommentWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionCommentScalarFieldEnum | ReflectionCommentScalarFieldEnum[]
   * ReflectionComment findMany
  export type ReflectionCommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where?: ReflectionCommentWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionCommentOrderByWithRelationInput | ReflectionCommentOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionCommentWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: ReflectionCommentScalarFieldEnum | ReflectionCommentScalarFieldEnum[]
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    data: XOR<ReflectionCommentCreateInput, ReflectionCommentUncheckedCreateInput>
   * ReflectionComment createMany
  export type ReflectionCommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many ReflectionComments.
    data: ReflectionCommentCreateManyInput | ReflectionCommentCreateManyInput[]
    skipDuplicates?: boolean
   * ReflectionComment createManyAndReturn
  export type ReflectionCommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionCommentSelectCreateManyAndReturn<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
     * The data used to create many ReflectionComments.
    data: ReflectionCommentCreateManyInput | ReflectionCommentCreateManyInput[]
    skipDuplicates?: boolean
    include?: ReflectionCommentIncludeCreateManyAndReturn<ExtArgs> | null
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    data: XOR<ReflectionCommentUpdateInput, ReflectionCommentUncheckedUpdateInput>
    where: ReflectionCommentWhereUniqueInput
   * ReflectionComment updateMany
  export type ReflectionCommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<ReflectionCommentUpdateManyMutationInput, ReflectionCommentUncheckedUpdateManyInput>
    where?: ReflectionCommentWhereInput
     * Limit how many ReflectionComments to update.
    limit?: number
   * ReflectionComment updateManyAndReturn
  export type ReflectionCommentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionCommentSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    data: XOR<ReflectionCommentUpdateManyMutationInput, ReflectionCommentUncheckedUpdateManyInput>
    where?: ReflectionCommentWhereInput
     * Limit how many ReflectionComments to update.
    limit?: number
    include?: ReflectionCommentIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where: ReflectionCommentWhereUniqueInput
    create: XOR<ReflectionCommentCreateInput, ReflectionCommentUncheckedCreateInput>
    update: XOR<ReflectionCommentUpdateInput, ReflectionCommentUncheckedUpdateInput>
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    where: ReflectionCommentWhereUniqueInput
   * ReflectionComment deleteMany
  export type ReflectionCommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReflectionCommentWhereInput
     * Limit how many ReflectionComments to delete.
    limit?: number
    select?: ReflectionCommentSelect<ExtArgs> | null
    omit?: ReflectionCommentOmit<ExtArgs> | null
    include?: ReflectionCommentInclude<ExtArgs> | null
    _count: ReflectionLikeCountAggregateOutputType | null
    _min: ReflectionLikeMinAggregateOutputType | null
    _max: ReflectionLikeMaxAggregateOutputType | null
    id: string | null
    reflection_id: string | null
    user_id: string | null
    created_at: Date | null
    id: string | null
    reflection_id: string | null
    user_id: string | null
    created_at: Date | null
    id: number
    reflection_id: number
    user_id: number
    created_at: number
    _all: number
    id?: true
    reflection_id?: true
    user_id?: true
    created_at?: true
    id?: true
    reflection_id?: true
    user_id?: true
    created_at?: true
    id?: true
    reflection_id?: true
    user_id?: true
    created_at?: true
    _all?: true
    where?: ReflectionLikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionLikeOrderByWithRelationInput | ReflectionLikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionLikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | ReflectionLikeCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: ReflectionLikeMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: ReflectionLikeMaxAggregateInputType
        [P in keyof T & keyof AggregateReflectionLike]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateReflectionLike[P]>
      : GetScalarType<T[P], AggregateReflectionLike[P]>
    where?: ReflectionLikeWhereInput
    orderBy?: ReflectionLikeOrderByWithAggregationInput | ReflectionLikeOrderByWithAggregationInput[]
    by: ReflectionLikeScalarFieldEnum[] | ReflectionLikeScalarFieldEnum
    having?: ReflectionLikeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReflectionLikeCountAggregateInputType | true
    _min?: ReflectionLikeMinAggregateInputType
    _max?: ReflectionLikeMaxAggregateInputType
    id: string
    reflection_id: string
    user_id: string
    created_at: Date | null
    _count: ReflectionLikeCountAggregateOutputType | null
    _min: ReflectionLikeMinAggregateOutputType | null
    _max: ReflectionLikeMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof ReflectionLikeGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], ReflectionLikeGroupByOutputType[P]>
            : GetScalarType<T[P], ReflectionLikeGroupByOutputType[P]>
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionLikeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionLikeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    reflection_id?: boolean
    user_id?: boolean
    created_at?: boolean
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionLikeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type ReflectionLikeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "ReflectionLike"
    objects: {
      reflection: Prisma.$ReflectionPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reflection_id: string
      user_id: string
      created_at: Date | null
    composites: {}
    Omit<ReflectionLikeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReflectionLikeCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReflectionLike'], meta: { name: 'ReflectionLike' } }
     *   where: {
    findUnique<T extends ReflectionLikeFindUniqueArgs>(args: SelectSubset<T, ReflectionLikeFindUniqueArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends ReflectionLikeFindUniqueOrThrowArgs>(args: SelectSubset<T, ReflectionLikeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends ReflectionLikeFindFirstArgs>(args?: SelectSubset<T, ReflectionLikeFindFirstArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends ReflectionLikeFindFirstOrThrowArgs>(args?: SelectSubset<T, ReflectionLikeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionLikeFindManyArgs} args - Arguments to filter and select certain fields only.
     * const reflectionLikes = await prisma.reflectionLike.findMany()
     * const reflectionLikes = await prisma.reflectionLike.findMany({ take: 10 })
     * const reflectionLikeWithIdOnly = await prisma.reflectionLike.findMany({ select: { id: true } })
    findMany<T extends ReflectionLikeFindManyArgs>(args?: SelectSubset<T, ReflectionLikeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends ReflectionLikeCreateArgs>(args: SelectSubset<T, ReflectionLikeCreateArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many ReflectionLikes.
     * @param {ReflectionLikeCreateManyArgs} args - Arguments to create many ReflectionLikes.
     * // Create many ReflectionLikes
     * const reflectionLike = await prisma.reflectionLike.createMany({
     *   data: [
    createMany<T extends ReflectionLikeCreateManyArgs>(args?: SelectSubset<T, ReflectionLikeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many ReflectionLikes and returns the data saved in the database.
     * @param {ReflectionLikeCreateManyAndReturnArgs} args - Arguments to create many ReflectionLikes.
     * // Create many ReflectionLikes
     * const reflectionLike = await prisma.reflectionLike.createManyAndReturn({
     *   data: [
     * // Create many ReflectionLikes and only return the `id`
     * const reflectionLikeWithIdOnly = await prisma.reflectionLike.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends ReflectionLikeCreateManyAndReturnArgs>(args?: SelectSubset<T, ReflectionLikeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends ReflectionLikeDeleteArgs>(args: SelectSubset<T, ReflectionLikeDeleteArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends ReflectionLikeUpdateArgs>(args: SelectSubset<T, ReflectionLikeUpdateArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {ReflectionLikeDeleteManyArgs} args - Arguments to filter ReflectionLikes to delete.
     * const { count } = await prisma.reflectionLike.deleteMany({
     *   where: {
    deleteMany<T extends ReflectionLikeDeleteManyArgs>(args?: SelectSubset<T, ReflectionLikeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionLikeUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many ReflectionLikes
     * const reflectionLike = await prisma.reflectionLike.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends ReflectionLikeUpdateManyArgs>(args: SelectSubset<T, ReflectionLikeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {ReflectionLikeUpdateManyAndReturnArgs} args - Arguments to update many ReflectionLikes.
     * // Update many ReflectionLikes
     * const reflectionLike = await prisma.reflectionLike.updateManyAndReturn({
     *   where: {
     *   data: [
     * const reflectionLikeWithIdOnly = await prisma.reflectionLike.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends ReflectionLikeUpdateManyAndReturnArgs>(args: SelectSubset<T, ReflectionLikeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends ReflectionLikeUpsertArgs>(args: SelectSubset<T, ReflectionLikeUpsertArgs<ExtArgs>>): Prisma__ReflectionLikeClient<$Result.GetResult<Prisma.$ReflectionLikePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, ReflectionLikeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], ReflectionLikeCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends ReflectionLikeAggregateArgs>(args: Subset<T, ReflectionLikeAggregateArgs>): Prisma.PrismaPromise<GetReflectionLikeAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: ReflectionLikeGroupByArgs['orderBy'] }
        : { orderBy?: ReflectionLikeGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, ReflectionLikeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReflectionLikeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: ReflectionLikeFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reflection<T extends ReflectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReflectionDefaultArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"ReflectionLike", 'String'>
    readonly reflection_id: FieldRef<"ReflectionLike", 'String'>
    readonly user_id: FieldRef<"ReflectionLike", 'String'>
    readonly created_at: FieldRef<"ReflectionLike", 'DateTime'>
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where: ReflectionLikeWhereUniqueInput
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where: ReflectionLikeWhereUniqueInput
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where?: ReflectionLikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionLikeOrderByWithRelationInput | ReflectionLikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionLikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionLikeScalarFieldEnum | ReflectionLikeScalarFieldEnum[]
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where?: ReflectionLikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionLikeOrderByWithRelationInput | ReflectionLikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionLikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionLikeScalarFieldEnum | ReflectionLikeScalarFieldEnum[]
   * ReflectionLike findMany
  export type ReflectionLikeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where?: ReflectionLikeWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionLikeOrderByWithRelationInput | ReflectionLikeOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionLikeWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: ReflectionLikeScalarFieldEnum | ReflectionLikeScalarFieldEnum[]
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    data: XOR<ReflectionLikeCreateInput, ReflectionLikeUncheckedCreateInput>
   * ReflectionLike createMany
  export type ReflectionLikeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many ReflectionLikes.
    data: ReflectionLikeCreateManyInput | ReflectionLikeCreateManyInput[]
    skipDuplicates?: boolean
   * ReflectionLike createManyAndReturn
  export type ReflectionLikeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionLikeSelectCreateManyAndReturn<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
     * The data used to create many ReflectionLikes.
    data: ReflectionLikeCreateManyInput | ReflectionLikeCreateManyInput[]
    skipDuplicates?: boolean
    include?: ReflectionLikeIncludeCreateManyAndReturn<ExtArgs> | null
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    data: XOR<ReflectionLikeUpdateInput, ReflectionLikeUncheckedUpdateInput>
    where: ReflectionLikeWhereUniqueInput
   * ReflectionLike updateMany
  export type ReflectionLikeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<ReflectionLikeUpdateManyMutationInput, ReflectionLikeUncheckedUpdateManyInput>
    where?: ReflectionLikeWhereInput
     * Limit how many ReflectionLikes to update.
    limit?: number
   * ReflectionLike updateManyAndReturn
  export type ReflectionLikeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionLikeSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    data: XOR<ReflectionLikeUpdateManyMutationInput, ReflectionLikeUncheckedUpdateManyInput>
    where?: ReflectionLikeWhereInput
     * Limit how many ReflectionLikes to update.
    limit?: number
    include?: ReflectionLikeIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where: ReflectionLikeWhereUniqueInput
    create: XOR<ReflectionLikeCreateInput, ReflectionLikeUncheckedCreateInput>
    update: XOR<ReflectionLikeUpdateInput, ReflectionLikeUncheckedUpdateInput>
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    where: ReflectionLikeWhereUniqueInput
   * ReflectionLike deleteMany
  export type ReflectionLikeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReflectionLikeWhereInput
     * Limit how many ReflectionLikes to delete.
    limit?: number
    select?: ReflectionLikeSelect<ExtArgs> | null
    omit?: ReflectionLikeOmit<ExtArgs> | null
    include?: ReflectionLikeInclude<ExtArgs> | null
    _count: JournalCountAggregateOutputType | null
    _min: JournalMinAggregateOutputType | null
    _max: JournalMaxAggregateOutputType | null
    id: string | null
    user_id: string | null
    title: string | null
    content: string | null
    mood: string | null
    created_at: Date | null
    updated_at: Date | null
    id: string | null
    user_id: string | null
    title: string | null
    content: string | null
    mood: string | null
    created_at: Date | null
    updated_at: Date | null
    id: number
    user_id: number
    title: number
    content: number
    mood: number
    created_at: number
    updated_at: number
    _all: number
    id?: true
    user_id?: true
    title?: true
    content?: true
    mood?: true
    created_at?: true
    updated_at?: true
    id?: true
    user_id?: true
    title?: true
    content?: true
    mood?: true
    created_at?: true
    updated_at?: true
    id?: true
    user_id?: true
    title?: true
    content?: true
    mood?: true
    created_at?: true
    updated_at?: true
    _all?: true
    where?: JournalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: JournalOrderByWithRelationInput | JournalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: JournalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | JournalCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: JournalMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: JournalMaxAggregateInputType
        [P in keyof T & keyof AggregateJournal]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateJournal[P]>
      : GetScalarType<T[P], AggregateJournal[P]>
    where?: JournalWhereInput
    orderBy?: JournalOrderByWithAggregationInput | JournalOrderByWithAggregationInput[]
    by: JournalScalarFieldEnum[] | JournalScalarFieldEnum
    having?: JournalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JournalCountAggregateInputType | true
    _min?: JournalMinAggregateInputType
    _max?: JournalMaxAggregateInputType
    id: string
    user_id: string
    title: string
    content: string
    mood: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: JournalCountAggregateOutputType | null
    _min: JournalMinAggregateOutputType | null
    _max: JournalMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof JournalGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], JournalGroupByOutputType[P]>
            : GetScalarType<T[P], JournalGroupByOutputType[P]>
    id?: boolean
    user_id?: boolean
    title?: boolean
    content?: boolean
    mood?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type JournalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    content?: boolean
    mood?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type JournalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    content?: boolean
    mood?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    user_id?: boolean
    title?: boolean
    content?: boolean
    mood?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type JournalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type JournalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "Journal"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      title: string
      content: string
      mood: string | null
      created_at: Date | null
      updated_at: Date | null
    composites: {}
    Omit<JournalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JournalCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Journal'], meta: { name: 'Journal' } }
     *   where: {
    findUnique<T extends JournalFindUniqueArgs>(args: SelectSubset<T, JournalFindUniqueArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends JournalFindUniqueOrThrowArgs>(args: SelectSubset<T, JournalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends JournalFindFirstArgs>(args?: SelectSubset<T, JournalFindFirstArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends JournalFindFirstOrThrowArgs>(args?: SelectSubset<T, JournalFindFirstOrThrowArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalFindManyArgs} args - Arguments to filter and select certain fields only.
     * const journals = await prisma.journal.findMany()
     * const journals = await prisma.journal.findMany({ take: 10 })
     * const journalWithIdOnly = await prisma.journal.findMany({ select: { id: true } })
    findMany<T extends JournalFindManyArgs>(args?: SelectSubset<T, JournalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends JournalCreateArgs>(args: SelectSubset<T, JournalCreateArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many Journals.
     * @param {JournalCreateManyArgs} args - Arguments to create many Journals.
     * // Create many Journals
     * const journal = await prisma.journal.createMany({
     *   data: [
    createMany<T extends JournalCreateManyArgs>(args?: SelectSubset<T, JournalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many Journals and returns the data saved in the database.
     * @param {JournalCreateManyAndReturnArgs} args - Arguments to create many Journals.
     * // Create many Journals
     * const journal = await prisma.journal.createManyAndReturn({
     *   data: [
     * // Create many Journals and only return the `id`
     * const journalWithIdOnly = await prisma.journal.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends JournalCreateManyAndReturnArgs>(args?: SelectSubset<T, JournalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends JournalDeleteArgs>(args: SelectSubset<T, JournalDeleteArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends JournalUpdateArgs>(args: SelectSubset<T, JournalUpdateArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {JournalDeleteManyArgs} args - Arguments to filter Journals to delete.
     * const { count } = await prisma.journal.deleteMany({
     *   where: {
    deleteMany<T extends JournalDeleteManyArgs>(args?: SelectSubset<T, JournalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many Journals
     * const journal = await prisma.journal.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends JournalUpdateManyArgs>(args: SelectSubset<T, JournalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {JournalUpdateManyAndReturnArgs} args - Arguments to update many Journals.
     * // Update many Journals
     * const journal = await prisma.journal.updateManyAndReturn({
     *   where: {
     *   data: [
     * const journalWithIdOnly = await prisma.journal.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends JournalUpdateManyAndReturnArgs>(args: SelectSubset<T, JournalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends JournalUpsertArgs>(args: SelectSubset<T, JournalUpsertArgs<ExtArgs>>): Prisma__JournalClient<$Result.GetResult<Prisma.$JournalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, JournalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], JournalCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends JournalAggregateArgs>(args: Subset<T, JournalAggregateArgs>): Prisma.PrismaPromise<GetJournalAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: JournalGroupByArgs['orderBy'] }
        : { orderBy?: JournalGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, JournalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJournalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: JournalFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"Journal", 'String'>
    readonly user_id: FieldRef<"Journal", 'String'>
    readonly title: FieldRef<"Journal", 'String'>
    readonly content: FieldRef<"Journal", 'String'>
    readonly mood: FieldRef<"Journal", 'String'>
    readonly created_at: FieldRef<"Journal", 'DateTime'>
    readonly updated_at: FieldRef<"Journal", 'DateTime'>
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where: JournalWhereUniqueInput
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where: JournalWhereUniqueInput
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where?: JournalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: JournalOrderByWithRelationInput | JournalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: JournalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: JournalScalarFieldEnum | JournalScalarFieldEnum[]
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where?: JournalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: JournalOrderByWithRelationInput | JournalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: JournalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: JournalScalarFieldEnum | JournalScalarFieldEnum[]
   * Journal findMany
  export type JournalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where?: JournalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: JournalOrderByWithRelationInput | JournalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: JournalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: JournalScalarFieldEnum | JournalScalarFieldEnum[]
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    data: XOR<JournalCreateInput, JournalUncheckedCreateInput>
   * Journal createMany
  export type JournalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many Journals.
    data: JournalCreateManyInput | JournalCreateManyInput[]
    skipDuplicates?: boolean
   * Journal createManyAndReturn
  export type JournalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: JournalSelectCreateManyAndReturn<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
     * The data used to create many Journals.
    data: JournalCreateManyInput | JournalCreateManyInput[]
    skipDuplicates?: boolean
    include?: JournalIncludeCreateManyAndReturn<ExtArgs> | null
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    data: XOR<JournalUpdateInput, JournalUncheckedUpdateInput>
    where: JournalWhereUniqueInput
   * Journal updateMany
  export type JournalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<JournalUpdateManyMutationInput, JournalUncheckedUpdateManyInput>
    where?: JournalWhereInput
     * Limit how many Journals to update.
    limit?: number
   * Journal updateManyAndReturn
  export type JournalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: JournalSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    data: XOR<JournalUpdateManyMutationInput, JournalUncheckedUpdateManyInput>
    where?: JournalWhereInput
     * Limit how many Journals to update.
    limit?: number
    include?: JournalIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where: JournalWhereUniqueInput
    create: XOR<JournalCreateInput, JournalUncheckedCreateInput>
    update: XOR<JournalUpdateInput, JournalUncheckedUpdateInput>
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    where: JournalWhereUniqueInput
   * Journal deleteMany
  export type JournalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JournalWhereInput
     * Limit how many Journals to delete.
    limit?: number
    select?: JournalSelect<ExtArgs> | null
    omit?: JournalOmit<ExtArgs> | null
    include?: JournalInclude<ExtArgs> | null
    _count: DevotionalGoalCountAggregateOutputType | null
    _min: DevotionalGoalMinAggregateOutputType | null
    _max: DevotionalGoalMaxAggregateOutputType | null
    id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    id: number
    title: number
    description: number
    created_at: number
    _all: number
    id?: true
    title?: true
    description?: true
    created_at?: true
    id?: true
    title?: true
    description?: true
    created_at?: true
    id?: true
    title?: true
    description?: true
    created_at?: true
    _all?: true
    where?: DevotionalGoalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalGoalOrderByWithRelationInput | DevotionalGoalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalGoalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | DevotionalGoalCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: DevotionalGoalMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: DevotionalGoalMaxAggregateInputType
        [P in keyof T & keyof AggregateDevotionalGoal]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateDevotionalGoal[P]>
      : GetScalarType<T[P], AggregateDevotionalGoal[P]>
    where?: DevotionalGoalWhereInput
    orderBy?: DevotionalGoalOrderByWithAggregationInput | DevotionalGoalOrderByWithAggregationInput[]
    by: DevotionalGoalScalarFieldEnum[] | DevotionalGoalScalarFieldEnum
    having?: DevotionalGoalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevotionalGoalCountAggregateInputType | true
    _min?: DevotionalGoalMinAggregateInputType
    _max?: DevotionalGoalMaxAggregateInputType
    id: string
    title: string
    description: string | null
    created_at: Date | null
    _count: DevotionalGoalCountAggregateOutputType | null
    _min: DevotionalGoalMinAggregateOutputType | null
    _max: DevotionalGoalMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof DevotionalGoalGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], DevotionalGoalGroupByOutputType[P]>
            : GetScalarType<T[P], DevotionalGoalGroupByOutputType[P]>
    id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    devotional_daily_task_templates?: boolean | DevotionalGoal$devotional_daily_task_templatesArgs<ExtArgs>
    tasks?: boolean | DevotionalGoal$tasksArgs<ExtArgs>
    users?: boolean | DevotionalGoal$usersArgs<ExtArgs>
    _count?: boolean | DevotionalGoalCountOutputTypeDefaultArgs<ExtArgs>
  export type DevotionalGoalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
  export type DevotionalGoalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    devotional_daily_task_templates?: boolean | DevotionalGoal$devotional_daily_task_templatesArgs<ExtArgs>
    tasks?: boolean | DevotionalGoal$tasksArgs<ExtArgs>
    users?: boolean | DevotionalGoal$usersArgs<ExtArgs>
    _count?: boolean | DevotionalGoalCountOutputTypeDefaultArgs<ExtArgs>
  export type DevotionalGoalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DevotionalGoalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
    name: "DevotionalGoal"
    objects: {
      devotional_daily_task_templates: Prisma.$devotional_daily_task_templatesPayload<ExtArgs>[]
      tasks: Prisma.$DevotionalTaskPayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string | null
      created_at: Date | null
    composites: {}
    Omit<DevotionalGoalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DevotionalGoalCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DevotionalGoal'], meta: { name: 'DevotionalGoal' } }
     *   where: {
    findUnique<T extends DevotionalGoalFindUniqueArgs>(args: SelectSubset<T, DevotionalGoalFindUniqueArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends DevotionalGoalFindUniqueOrThrowArgs>(args: SelectSubset<T, DevotionalGoalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends DevotionalGoalFindFirstArgs>(args?: SelectSubset<T, DevotionalGoalFindFirstArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends DevotionalGoalFindFirstOrThrowArgs>(args?: SelectSubset<T, DevotionalGoalFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevotionalGoalFindManyArgs} args - Arguments to filter and select certain fields only.
     * const devotionalGoals = await prisma.devotionalGoal.findMany()
     * const devotionalGoals = await prisma.devotionalGoal.findMany({ take: 10 })
     * const devotionalGoalWithIdOnly = await prisma.devotionalGoal.findMany({ select: { id: true } })
    findMany<T extends DevotionalGoalFindManyArgs>(args?: SelectSubset<T, DevotionalGoalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends DevotionalGoalCreateArgs>(args: SelectSubset<T, DevotionalGoalCreateArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many DevotionalGoals.
     * @param {DevotionalGoalCreateManyArgs} args - Arguments to create many DevotionalGoals.
     * // Create many DevotionalGoals
     * const devotionalGoal = await prisma.devotionalGoal.createMany({
     *   data: [
    createMany<T extends DevotionalGoalCreateManyArgs>(args?: SelectSubset<T, DevotionalGoalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many DevotionalGoals and returns the data saved in the database.
     * @param {DevotionalGoalCreateManyAndReturnArgs} args - Arguments to create many DevotionalGoals.
     * // Create many DevotionalGoals
     * const devotionalGoal = await prisma.devotionalGoal.createManyAndReturn({
     *   data: [
     * // Create many DevotionalGoals and only return the `id`
     * const devotionalGoalWithIdOnly = await prisma.devotionalGoal.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends DevotionalGoalCreateManyAndReturnArgs>(args?: SelectSubset<T, DevotionalGoalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends DevotionalGoalDeleteArgs>(args: SelectSubset<T, DevotionalGoalDeleteArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends DevotionalGoalUpdateArgs>(args: SelectSubset<T, DevotionalGoalUpdateArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {DevotionalGoalDeleteManyArgs} args - Arguments to filter DevotionalGoals to delete.
     * const { count } = await prisma.devotionalGoal.deleteMany({
     *   where: {
    deleteMany<T extends DevotionalGoalDeleteManyArgs>(args?: SelectSubset<T, DevotionalGoalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevotionalGoalUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many DevotionalGoals
     * const devotionalGoal = await prisma.devotionalGoal.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends DevotionalGoalUpdateManyArgs>(args: SelectSubset<T, DevotionalGoalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {DevotionalGoalUpdateManyAndReturnArgs} args - Arguments to update many DevotionalGoals.
     * // Update many DevotionalGoals
     * const devotionalGoal = await prisma.devotionalGoal.updateManyAndReturn({
     *   where: {
     *   data: [
     * const devotionalGoalWithIdOnly = await prisma.devotionalGoal.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends DevotionalGoalUpdateManyAndReturnArgs>(args: SelectSubset<T, DevotionalGoalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends DevotionalGoalUpsertArgs>(args: SelectSubset<T, DevotionalGoalUpsertArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, DevotionalGoalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], DevotionalGoalCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends DevotionalGoalAggregateArgs>(args: Subset<T, DevotionalGoalAggregateArgs>): Prisma.PrismaPromise<GetDevotionalGoalAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: DevotionalGoalGroupByArgs['orderBy'] }
        : { orderBy?: DevotionalGoalGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, DevotionalGoalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevotionalGoalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: DevotionalGoalFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    devotional_daily_task_templates<T extends DevotionalGoal$devotional_daily_task_templatesArgs<ExtArgs> = {}>(args?: Subset<T, DevotionalGoal$devotional_daily_task_templatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends DevotionalGoal$tasksArgs<ExtArgs> = {}>(args?: Subset<T, DevotionalGoal$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends DevotionalGoal$usersArgs<ExtArgs> = {}>(args?: Subset<T, DevotionalGoal$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"DevotionalGoal", 'String'>
    readonly title: FieldRef<"DevotionalGoal", 'String'>
    readonly description: FieldRef<"DevotionalGoal", 'String'>
    readonly created_at: FieldRef<"DevotionalGoal", 'DateTime'>
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where: DevotionalGoalWhereUniqueInput
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where: DevotionalGoalWhereUniqueInput
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where?: DevotionalGoalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalGoalOrderByWithRelationInput | DevotionalGoalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalGoalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DevotionalGoalScalarFieldEnum | DevotionalGoalScalarFieldEnum[]
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where?: DevotionalGoalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalGoalOrderByWithRelationInput | DevotionalGoalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalGoalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DevotionalGoalScalarFieldEnum | DevotionalGoalScalarFieldEnum[]
   * DevotionalGoal findMany
  export type DevotionalGoalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where?: DevotionalGoalWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalGoalOrderByWithRelationInput | DevotionalGoalOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalGoalWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: DevotionalGoalScalarFieldEnum | DevotionalGoalScalarFieldEnum[]
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    data: XOR<DevotionalGoalCreateInput, DevotionalGoalUncheckedCreateInput>
   * DevotionalGoal createMany
  export type DevotionalGoalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many DevotionalGoals.
    data: DevotionalGoalCreateManyInput | DevotionalGoalCreateManyInput[]
    skipDuplicates?: boolean
   * DevotionalGoal createManyAndReturn
  export type DevotionalGoalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DevotionalGoalSelectCreateManyAndReturn<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
     * The data used to create many DevotionalGoals.
    data: DevotionalGoalCreateManyInput | DevotionalGoalCreateManyInput[]
    skipDuplicates?: boolean
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    data: XOR<DevotionalGoalUpdateInput, DevotionalGoalUncheckedUpdateInput>
    where: DevotionalGoalWhereUniqueInput
   * DevotionalGoal updateMany
  export type DevotionalGoalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<DevotionalGoalUpdateManyMutationInput, DevotionalGoalUncheckedUpdateManyInput>
    where?: DevotionalGoalWhereInput
     * Limit how many DevotionalGoals to update.
    limit?: number
   * DevotionalGoal updateManyAndReturn
  export type DevotionalGoalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DevotionalGoalSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    data: XOR<DevotionalGoalUpdateManyMutationInput, DevotionalGoalUncheckedUpdateManyInput>
    where?: DevotionalGoalWhereInput
     * Limit how many DevotionalGoals to update.
    limit?: number
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where: DevotionalGoalWhereUniqueInput
    create: XOR<DevotionalGoalCreateInput, DevotionalGoalUncheckedCreateInput>
    update: XOR<DevotionalGoalUpdateInput, DevotionalGoalUncheckedUpdateInput>
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where: DevotionalGoalWhereUniqueInput
   * DevotionalGoal deleteMany
  export type DevotionalGoalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevotionalGoalWhereInput
     * Limit how many DevotionalGoals to delete.
    limit?: number
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where?: devotional_daily_task_templatesWhereInput
    orderBy?: devotional_daily_task_templatesOrderByWithRelationInput | devotional_daily_task_templatesOrderByWithRelationInput[]
    cursor?: devotional_daily_task_templatesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Devotional_daily_task_templatesScalarFieldEnum | Devotional_daily_task_templatesScalarFieldEnum[]
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where?: DevotionalTaskWhereInput
    orderBy?: DevotionalTaskOrderByWithRelationInput | DevotionalTaskOrderByWithRelationInput[]
    cursor?: DevotionalTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevotionalTaskScalarFieldEnum | DevotionalTaskScalarFieldEnum[]
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    _count: DevotionalTaskCountAggregateOutputType | null
    _avg: DevotionalTaskAvgAggregateOutputType | null
    _sum: DevotionalTaskSumAggregateOutputType | null
    _min: DevotionalTaskMinAggregateOutputType | null
    _max: DevotionalTaskMaxAggregateOutputType | null
    day_number: number | null
    day_number: number | null
    id: string | null
    goal_id: string | null
    day_number: number | null
    task_text: string | null
    created_at: Date | null
    id: string | null
    goal_id: string | null
    day_number: number | null
    task_text: string | null
    created_at: Date | null
    id: number
    goal_id: number
    day_number: number
    task_text: number
    created_at: number
    _all: number
    day_number?: true
    day_number?: true
    id?: true
    goal_id?: true
    day_number?: true
    task_text?: true
    created_at?: true
    id?: true
    goal_id?: true
    day_number?: true
    task_text?: true
    created_at?: true
    id?: true
    goal_id?: true
    day_number?: true
    task_text?: true
    created_at?: true
    _all?: true
    where?: DevotionalTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalTaskOrderByWithRelationInput | DevotionalTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | DevotionalTaskCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _avg?: DevotionalTaskAvgAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _sum?: DevotionalTaskSumAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: DevotionalTaskMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: DevotionalTaskMaxAggregateInputType
        [P in keyof T & keyof AggregateDevotionalTask]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateDevotionalTask[P]>
      : GetScalarType<T[P], AggregateDevotionalTask[P]>
    where?: DevotionalTaskWhereInput
    orderBy?: DevotionalTaskOrderByWithAggregationInput | DevotionalTaskOrderByWithAggregationInput[]
    by: DevotionalTaskScalarFieldEnum[] | DevotionalTaskScalarFieldEnum
    having?: DevotionalTaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevotionalTaskCountAggregateInputType | true
    _avg?: DevotionalTaskAvgAggregateInputType
    _sum?: DevotionalTaskSumAggregateInputType
    _min?: DevotionalTaskMinAggregateInputType
    _max?: DevotionalTaskMaxAggregateInputType
    id: string
    goal_id: string | null
    day_number: number
    task_text: string
    created_at: Date | null
    _count: DevotionalTaskCountAggregateOutputType | null
    _avg: DevotionalTaskAvgAggregateOutputType | null
    _sum: DevotionalTaskSumAggregateOutputType | null
    _min: DevotionalTaskMinAggregateOutputType | null
    _max: DevotionalTaskMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof DevotionalTaskGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], DevotionalTaskGroupByOutputType[P]>
            : GetScalarType<T[P], DevotionalTaskGroupByOutputType[P]>
    id?: boolean
    goal_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    goal?: boolean | DevotionalTask$goalArgs<ExtArgs>
    user_task_progress?: boolean | DevotionalTask$user_task_progressArgs<ExtArgs>
    _count?: boolean | DevotionalTaskCountOutputTypeDefaultArgs<ExtArgs>
  export type DevotionalTaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    goal_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    goal?: boolean | DevotionalTask$goalArgs<ExtArgs>
  export type DevotionalTaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    goal_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    goal?: boolean | DevotionalTask$goalArgs<ExtArgs>
    id?: boolean
    goal_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    goal?: boolean | DevotionalTask$goalArgs<ExtArgs>
    user_task_progress?: boolean | DevotionalTask$user_task_progressArgs<ExtArgs>
    _count?: boolean | DevotionalTaskCountOutputTypeDefaultArgs<ExtArgs>
  export type DevotionalTaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goal?: boolean | DevotionalTask$goalArgs<ExtArgs>
  export type DevotionalTaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    goal?: boolean | DevotionalTask$goalArgs<ExtArgs>
    name: "DevotionalTask"
    objects: {
      goal: Prisma.$DevotionalGoalPayload<ExtArgs> | null
      user_task_progress: Prisma.$UserTaskProgressPayload<ExtArgs>[]
    scalars: $Extensions.GetPayloadResult<{
      id: string
      goal_id: string | null
      day_number: number
      task_text: string
      created_at: Date | null
    composites: {}
    Omit<DevotionalTaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DevotionalTaskCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DevotionalTask'], meta: { name: 'DevotionalTask' } }
     *   where: {
    findUnique<T extends DevotionalTaskFindUniqueArgs>(args: SelectSubset<T, DevotionalTaskFindUniqueArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends DevotionalTaskFindUniqueOrThrowArgs>(args: SelectSubset<T, DevotionalTaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends DevotionalTaskFindFirstArgs>(args?: SelectSubset<T, DevotionalTaskFindFirstArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends DevotionalTaskFindFirstOrThrowArgs>(args?: SelectSubset<T, DevotionalTaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevotionalTaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * const devotionalTasks = await prisma.devotionalTask.findMany()
     * const devotionalTasks = await prisma.devotionalTask.findMany({ take: 10 })
     * const devotionalTaskWithIdOnly = await prisma.devotionalTask.findMany({ select: { id: true } })
    findMany<T extends DevotionalTaskFindManyArgs>(args?: SelectSubset<T, DevotionalTaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends DevotionalTaskCreateArgs>(args: SelectSubset<T, DevotionalTaskCreateArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many DevotionalTasks.
     * @param {DevotionalTaskCreateManyArgs} args - Arguments to create many DevotionalTasks.
     * // Create many DevotionalTasks
     * const devotionalTask = await prisma.devotionalTask.createMany({
     *   data: [
    createMany<T extends DevotionalTaskCreateManyArgs>(args?: SelectSubset<T, DevotionalTaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many DevotionalTasks and returns the data saved in the database.
     * @param {DevotionalTaskCreateManyAndReturnArgs} args - Arguments to create many DevotionalTasks.
     * // Create many DevotionalTasks
     * const devotionalTask = await prisma.devotionalTask.createManyAndReturn({
     *   data: [
     * // Create many DevotionalTasks and only return the `id`
     * const devotionalTaskWithIdOnly = await prisma.devotionalTask.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends DevotionalTaskCreateManyAndReturnArgs>(args?: SelectSubset<T, DevotionalTaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends DevotionalTaskDeleteArgs>(args: SelectSubset<T, DevotionalTaskDeleteArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends DevotionalTaskUpdateArgs>(args: SelectSubset<T, DevotionalTaskUpdateArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {DevotionalTaskDeleteManyArgs} args - Arguments to filter DevotionalTasks to delete.
     * const { count } = await prisma.devotionalTask.deleteMany({
     *   where: {
    deleteMany<T extends DevotionalTaskDeleteManyArgs>(args?: SelectSubset<T, DevotionalTaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevotionalTaskUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many DevotionalTasks
     * const devotionalTask = await prisma.devotionalTask.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends DevotionalTaskUpdateManyArgs>(args: SelectSubset<T, DevotionalTaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {DevotionalTaskUpdateManyAndReturnArgs} args - Arguments to update many DevotionalTasks.
     * // Update many DevotionalTasks
     * const devotionalTask = await prisma.devotionalTask.updateManyAndReturn({
     *   where: {
     *   data: [
     * const devotionalTaskWithIdOnly = await prisma.devotionalTask.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends DevotionalTaskUpdateManyAndReturnArgs>(args: SelectSubset<T, DevotionalTaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends DevotionalTaskUpsertArgs>(args: SelectSubset<T, DevotionalTaskUpsertArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, DevotionalTaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], DevotionalTaskCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends DevotionalTaskAggregateArgs>(args: Subset<T, DevotionalTaskAggregateArgs>): Prisma.PrismaPromise<GetDevotionalTaskAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: DevotionalTaskGroupByArgs['orderBy'] }
        : { orderBy?: DevotionalTaskGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, DevotionalTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevotionalTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: DevotionalTaskFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    goal<T extends DevotionalTask$goalArgs<ExtArgs> = {}>(args?: Subset<T, DevotionalTask$goalArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_task_progress<T extends DevotionalTask$user_task_progressArgs<ExtArgs> = {}>(args?: Subset<T, DevotionalTask$user_task_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"DevotionalTask", 'String'>
    readonly goal_id: FieldRef<"DevotionalTask", 'String'>
    readonly day_number: FieldRef<"DevotionalTask", 'Int'>
    readonly task_text: FieldRef<"DevotionalTask", 'String'>
    readonly created_at: FieldRef<"DevotionalTask", 'DateTime'>
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where: DevotionalTaskWhereUniqueInput
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where: DevotionalTaskWhereUniqueInput
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where?: DevotionalTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalTaskOrderByWithRelationInput | DevotionalTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DevotionalTaskScalarFieldEnum | DevotionalTaskScalarFieldEnum[]
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where?: DevotionalTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalTaskOrderByWithRelationInput | DevotionalTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DevotionalTaskScalarFieldEnum | DevotionalTaskScalarFieldEnum[]
   * DevotionalTask findMany
  export type DevotionalTaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where?: DevotionalTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DevotionalTaskOrderByWithRelationInput | DevotionalTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DevotionalTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: DevotionalTaskScalarFieldEnum | DevotionalTaskScalarFieldEnum[]
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    data: XOR<DevotionalTaskCreateInput, DevotionalTaskUncheckedCreateInput>
   * DevotionalTask createMany
  export type DevotionalTaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many DevotionalTasks.
    data: DevotionalTaskCreateManyInput | DevotionalTaskCreateManyInput[]
    skipDuplicates?: boolean
   * DevotionalTask createManyAndReturn
  export type DevotionalTaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DevotionalTaskSelectCreateManyAndReturn<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
     * The data used to create many DevotionalTasks.
    data: DevotionalTaskCreateManyInput | DevotionalTaskCreateManyInput[]
    skipDuplicates?: boolean
    include?: DevotionalTaskIncludeCreateManyAndReturn<ExtArgs> | null
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    data: XOR<DevotionalTaskUpdateInput, DevotionalTaskUncheckedUpdateInput>
    where: DevotionalTaskWhereUniqueInput
   * DevotionalTask updateMany
  export type DevotionalTaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<DevotionalTaskUpdateManyMutationInput, DevotionalTaskUncheckedUpdateManyInput>
    where?: DevotionalTaskWhereInput
     * Limit how many DevotionalTasks to update.
    limit?: number
   * DevotionalTask updateManyAndReturn
  export type DevotionalTaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DevotionalTaskSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    data: XOR<DevotionalTaskUpdateManyMutationInput, DevotionalTaskUncheckedUpdateManyInput>
    where?: DevotionalTaskWhereInput
     * Limit how many DevotionalTasks to update.
    limit?: number
    include?: DevotionalTaskIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where: DevotionalTaskWhereUniqueInput
    create: XOR<DevotionalTaskCreateInput, DevotionalTaskUncheckedCreateInput>
    update: XOR<DevotionalTaskUpdateInput, DevotionalTaskUncheckedUpdateInput>
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where: DevotionalTaskWhereUniqueInput
   * DevotionalTask deleteMany
  export type DevotionalTaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevotionalTaskWhereInput
     * Limit how many DevotionalTasks to delete.
    limit?: number
    select?: DevotionalGoalSelect<ExtArgs> | null
    omit?: DevotionalGoalOmit<ExtArgs> | null
    include?: DevotionalGoalInclude<ExtArgs> | null
    where?: DevotionalGoalWhereInput
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where?: UserTaskProgressWhereInput
    orderBy?: UserTaskProgressOrderByWithRelationInput | UserTaskProgressOrderByWithRelationInput[]
    cursor?: UserTaskProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTaskProgressScalarFieldEnum | UserTaskProgressScalarFieldEnum[]
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    _count: UserTaskProgressCountAggregateOutputType | null
    _min: UserTaskProgressMinAggregateOutputType | null
    _max: UserTaskProgressMaxAggregateOutputType | null
    id: string | null
    user_id: string | null
    devotional_task_id: string | null
    completion_date: Date | null
    completedAt: Date | null
    createdAt: Date | null
    id: string | null
    user_id: string | null
    devotional_task_id: string | null
    completion_date: Date | null
    completedAt: Date | null
    createdAt: Date | null
    id: number
    user_id: number
    devotional_task_id: number
    completion_date: number
    completedAt: number
    createdAt: number
    _all: number
    id?: true
    user_id?: true
    devotional_task_id?: true
    completion_date?: true
    completedAt?: true
    createdAt?: true
    id?: true
    user_id?: true
    devotional_task_id?: true
    completion_date?: true
    completedAt?: true
    createdAt?: true
    id?: true
    user_id?: true
    devotional_task_id?: true
    completion_date?: true
    completedAt?: true
    createdAt?: true
    _all?: true
    where?: UserTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserTaskProgressOrderByWithRelationInput | UserTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | UserTaskProgressCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: UserTaskProgressMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: UserTaskProgressMaxAggregateInputType
        [P in keyof T & keyof AggregateUserTaskProgress]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateUserTaskProgress[P]>
      : GetScalarType<T[P], AggregateUserTaskProgress[P]>
    where?: UserTaskProgressWhereInput
    orderBy?: UserTaskProgressOrderByWithAggregationInput | UserTaskProgressOrderByWithAggregationInput[]
    by: UserTaskProgressScalarFieldEnum[] | UserTaskProgressScalarFieldEnum
    having?: UserTaskProgressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserTaskProgressCountAggregateInputType | true
    _min?: UserTaskProgressMinAggregateInputType
    _max?: UserTaskProgressMaxAggregateInputType
    id: string
    user_id: string | null
    devotional_task_id: string | null
    completion_date: Date
    completedAt: Date | null
    createdAt: Date | null
    _count: UserTaskProgressCountAggregateOutputType | null
    _min: UserTaskProgressMinAggregateOutputType | null
    _max: UserTaskProgressMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof UserTaskProgressGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], UserTaskProgressGroupByOutputType[P]>
            : GetScalarType<T[P], UserTaskProgressGroupByOutputType[P]>
    id?: boolean
    user_id?: boolean
    devotional_task_id?: boolean
    completion_date?: boolean
    completedAt?: boolean
    createdAt?: boolean
    devotional_task?: boolean | UserTaskProgress$devotional_taskArgs<ExtArgs>
    users?: boolean | UserTaskProgress$usersArgs<ExtArgs>
  export type UserTaskProgressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    devotional_task_id?: boolean
    completion_date?: boolean
    completedAt?: boolean
    createdAt?: boolean
    devotional_task?: boolean | UserTaskProgress$devotional_taskArgs<ExtArgs>
    users?: boolean | UserTaskProgress$usersArgs<ExtArgs>
  export type UserTaskProgressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    devotional_task_id?: boolean
    completion_date?: boolean
    completedAt?: boolean
    createdAt?: boolean
    devotional_task?: boolean | UserTaskProgress$devotional_taskArgs<ExtArgs>
    users?: boolean | UserTaskProgress$usersArgs<ExtArgs>
    id?: boolean
    user_id?: boolean
    devotional_task_id?: boolean
    completion_date?: boolean
    completedAt?: boolean
    createdAt?: boolean
    devotional_task?: boolean | UserTaskProgress$devotional_taskArgs<ExtArgs>
    users?: boolean | UserTaskProgress$usersArgs<ExtArgs>
  export type UserTaskProgressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devotional_task?: boolean | UserTaskProgress$devotional_taskArgs<ExtArgs>
    users?: boolean | UserTaskProgress$usersArgs<ExtArgs>
  export type UserTaskProgressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devotional_task?: boolean | UserTaskProgress$devotional_taskArgs<ExtArgs>
    users?: boolean | UserTaskProgress$usersArgs<ExtArgs>
    name: "UserTaskProgress"
    objects: {
      devotional_task: Prisma.$DevotionalTaskPayload<ExtArgs> | null
      users: Prisma.$UserPayload<ExtArgs> | null
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      devotional_task_id: string | null
      completion_date: Date
      completedAt: Date | null
      createdAt: Date | null
    composites: {}
    Omit<UserTaskProgressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserTaskProgressCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserTaskProgress'], meta: { name: 'UserTaskProgress' } }
     *   where: {
    findUnique<T extends UserTaskProgressFindUniqueArgs>(args: SelectSubset<T, UserTaskProgressFindUniqueArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends UserTaskProgressFindUniqueOrThrowArgs>(args: SelectSubset<T, UserTaskProgressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends UserTaskProgressFindFirstArgs>(args?: SelectSubset<T, UserTaskProgressFindFirstArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends UserTaskProgressFindFirstOrThrowArgs>(args?: SelectSubset<T, UserTaskProgressFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskProgressFindManyArgs} args - Arguments to filter and select certain fields only.
     * const userTaskProgresses = await prisma.userTaskProgress.findMany()
     * const userTaskProgresses = await prisma.userTaskProgress.findMany({ take: 10 })
     * const userTaskProgressWithIdOnly = await prisma.userTaskProgress.findMany({ select: { id: true } })
    findMany<T extends UserTaskProgressFindManyArgs>(args?: SelectSubset<T, UserTaskProgressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends UserTaskProgressCreateArgs>(args: SelectSubset<T, UserTaskProgressCreateArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many UserTaskProgresses.
     * @param {UserTaskProgressCreateManyArgs} args - Arguments to create many UserTaskProgresses.
     * // Create many UserTaskProgresses
     * const userTaskProgress = await prisma.userTaskProgress.createMany({
     *   data: [
    createMany<T extends UserTaskProgressCreateManyArgs>(args?: SelectSubset<T, UserTaskProgressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many UserTaskProgresses and returns the data saved in the database.
     * @param {UserTaskProgressCreateManyAndReturnArgs} args - Arguments to create many UserTaskProgresses.
     * // Create many UserTaskProgresses
     * const userTaskProgress = await prisma.userTaskProgress.createManyAndReturn({
     *   data: [
     * // Create many UserTaskProgresses and only return the `id`
     * const userTaskProgressWithIdOnly = await prisma.userTaskProgress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends UserTaskProgressCreateManyAndReturnArgs>(args?: SelectSubset<T, UserTaskProgressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends UserTaskProgressDeleteArgs>(args: SelectSubset<T, UserTaskProgressDeleteArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends UserTaskProgressUpdateArgs>(args: SelectSubset<T, UserTaskProgressUpdateArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {UserTaskProgressDeleteManyArgs} args - Arguments to filter UserTaskProgresses to delete.
     * const { count } = await prisma.userTaskProgress.deleteMany({
     *   where: {
    deleteMany<T extends UserTaskProgressDeleteManyArgs>(args?: SelectSubset<T, UserTaskProgressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskProgressUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many UserTaskProgresses
     * const userTaskProgress = await prisma.userTaskProgress.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends UserTaskProgressUpdateManyArgs>(args: SelectSubset<T, UserTaskProgressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {UserTaskProgressUpdateManyAndReturnArgs} args - Arguments to update many UserTaskProgresses.
     * // Update many UserTaskProgresses
     * const userTaskProgress = await prisma.userTaskProgress.updateManyAndReturn({
     *   where: {
     *   data: [
     * const userTaskProgressWithIdOnly = await prisma.userTaskProgress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends UserTaskProgressUpdateManyAndReturnArgs>(args: SelectSubset<T, UserTaskProgressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends UserTaskProgressUpsertArgs>(args: SelectSubset<T, UserTaskProgressUpsertArgs<ExtArgs>>): Prisma__UserTaskProgressClient<$Result.GetResult<Prisma.$UserTaskProgressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, UserTaskProgressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], UserTaskProgressCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends UserTaskProgressAggregateArgs>(args: Subset<T, UserTaskProgressAggregateArgs>): Prisma.PrismaPromise<GetUserTaskProgressAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: UserTaskProgressGroupByArgs['orderBy'] }
        : { orderBy?: UserTaskProgressGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, UserTaskProgressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserTaskProgressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: UserTaskProgressFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    devotional_task<T extends UserTaskProgress$devotional_taskArgs<ExtArgs> = {}>(args?: Subset<T, UserTaskProgress$devotional_taskArgs<ExtArgs>>): Prisma__DevotionalTaskClient<$Result.GetResult<Prisma.$DevotionalTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends UserTaskProgress$usersArgs<ExtArgs> = {}>(args?: Subset<T, UserTaskProgress$usersArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"UserTaskProgress", 'String'>
    readonly user_id: FieldRef<"UserTaskProgress", 'String'>
    readonly devotional_task_id: FieldRef<"UserTaskProgress", 'String'>
    readonly completion_date: FieldRef<"UserTaskProgress", 'DateTime'>
    readonly completedAt: FieldRef<"UserTaskProgress", 'DateTime'>
    readonly createdAt: FieldRef<"UserTaskProgress", 'DateTime'>
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where: UserTaskProgressWhereUniqueInput
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where: UserTaskProgressWhereUniqueInput
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where?: UserTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserTaskProgressOrderByWithRelationInput | UserTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: UserTaskProgressScalarFieldEnum | UserTaskProgressScalarFieldEnum[]
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where?: UserTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserTaskProgressOrderByWithRelationInput | UserTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: UserTaskProgressScalarFieldEnum | UserTaskProgressScalarFieldEnum[]
   * UserTaskProgress findMany
  export type UserTaskProgressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where?: UserTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserTaskProgressOrderByWithRelationInput | UserTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: UserTaskProgressScalarFieldEnum | UserTaskProgressScalarFieldEnum[]
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    data: XOR<UserTaskProgressCreateInput, UserTaskProgressUncheckedCreateInput>
   * UserTaskProgress createMany
  export type UserTaskProgressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many UserTaskProgresses.
    data: UserTaskProgressCreateManyInput | UserTaskProgressCreateManyInput[]
    skipDuplicates?: boolean
   * UserTaskProgress createManyAndReturn
  export type UserTaskProgressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserTaskProgressSelectCreateManyAndReturn<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
     * The data used to create many UserTaskProgresses.
    data: UserTaskProgressCreateManyInput | UserTaskProgressCreateManyInput[]
    skipDuplicates?: boolean
    include?: UserTaskProgressIncludeCreateManyAndReturn<ExtArgs> | null
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    data: XOR<UserTaskProgressUpdateInput, UserTaskProgressUncheckedUpdateInput>
    where: UserTaskProgressWhereUniqueInput
   * UserTaskProgress updateMany
  export type UserTaskProgressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<UserTaskProgressUpdateManyMutationInput, UserTaskProgressUncheckedUpdateManyInput>
    where?: UserTaskProgressWhereInput
     * Limit how many UserTaskProgresses to update.
    limit?: number
   * UserTaskProgress updateManyAndReturn
  export type UserTaskProgressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserTaskProgressSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    data: XOR<UserTaskProgressUpdateManyMutationInput, UserTaskProgressUncheckedUpdateManyInput>
    where?: UserTaskProgressWhereInput
     * Limit how many UserTaskProgresses to update.
    limit?: number
    include?: UserTaskProgressIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where: UserTaskProgressWhereUniqueInput
    create: XOR<UserTaskProgressCreateInput, UserTaskProgressUncheckedCreateInput>
    update: XOR<UserTaskProgressUpdateInput, UserTaskProgressUncheckedUpdateInput>
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    where: UserTaskProgressWhereUniqueInput
   * UserTaskProgress deleteMany
  export type UserTaskProgressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTaskProgressWhereInput
     * Limit how many UserTaskProgresses to delete.
    limit?: number
    select?: DevotionalTaskSelect<ExtArgs> | null
    omit?: DevotionalTaskOmit<ExtArgs> | null
    include?: DevotionalTaskInclude<ExtArgs> | null
    where?: DevotionalTaskWhereInput
    select?: UserSelect<ExtArgs> | null
    omit?: UserOmit<ExtArgs> | null
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    select?: UserTaskProgressSelect<ExtArgs> | null
    omit?: UserTaskProgressOmit<ExtArgs> | null
    include?: UserTaskProgressInclude<ExtArgs> | null
    _count: NicheTagCountAggregateOutputType | null
    _min: NicheTagMinAggregateOutputType | null
    _max: NicheTagMaxAggregateOutputType | null
    id: string | null
    name: string | null
    id: string | null
    name: string | null
    id: number
    name: number
    _all: number
    id?: true
    name?: true
    id?: true
    name?: true
    id?: true
    name?: true
    _all?: true
    where?: NicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: NicheTagOrderByWithRelationInput | NicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: NicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | NicheTagCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: NicheTagMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: NicheTagMaxAggregateInputType
        [P in keyof T & keyof AggregateNicheTag]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateNicheTag[P]>
      : GetScalarType<T[P], AggregateNicheTag[P]>
    where?: NicheTagWhereInput
    orderBy?: NicheTagOrderByWithAggregationInput | NicheTagOrderByWithAggregationInput[]
    by: NicheTagScalarFieldEnum[] | NicheTagScalarFieldEnum
    having?: NicheTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NicheTagCountAggregateInputType | true
    _min?: NicheTagMinAggregateInputType
    _max?: NicheTagMaxAggregateInputType
    id: string
    name: string
    _count: NicheTagCountAggregateOutputType | null
    _min: NicheTagMinAggregateOutputType | null
    _max: NicheTagMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof NicheTagGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], NicheTagGroupByOutputType[P]>
            : GetScalarType<T[P], NicheTagGroupByOutputType[P]>
    id?: boolean
    name?: boolean
    reflectionNicheTags?: boolean | NicheTag$reflectionNicheTagsArgs<ExtArgs>
    _count?: boolean | NicheTagCountOutputTypeDefaultArgs<ExtArgs>
  export type NicheTagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  export type NicheTagSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    id?: boolean
    name?: boolean
    reflectionNicheTags?: boolean | NicheTag$reflectionNicheTagsArgs<ExtArgs>
    _count?: boolean | NicheTagCountOutputTypeDefaultArgs<ExtArgs>
  export type NicheTagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type NicheTagIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
    name: "NicheTag"
    objects: {
      reflectionNicheTags: Prisma.$ReflectionNicheTagPayload<ExtArgs>[]
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
    composites: {}
    Omit<NicheTagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NicheTagCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NicheTag'], meta: { name: 'NicheTag' } }
     *   where: {
    findUnique<T extends NicheTagFindUniqueArgs>(args: SelectSubset<T, NicheTagFindUniqueArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends NicheTagFindUniqueOrThrowArgs>(args: SelectSubset<T, NicheTagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends NicheTagFindFirstArgs>(args?: SelectSubset<T, NicheTagFindFirstArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends NicheTagFindFirstOrThrowArgs>(args?: SelectSubset<T, NicheTagFindFirstOrThrowArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NicheTagFindManyArgs} args - Arguments to filter and select certain fields only.
     * const nicheTags = await prisma.nicheTag.findMany()
     * const nicheTags = await prisma.nicheTag.findMany({ take: 10 })
     * const nicheTagWithIdOnly = await prisma.nicheTag.findMany({ select: { id: true } })
    findMany<T extends NicheTagFindManyArgs>(args?: SelectSubset<T, NicheTagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends NicheTagCreateArgs>(args: SelectSubset<T, NicheTagCreateArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many NicheTags.
     * @param {NicheTagCreateManyArgs} args - Arguments to create many NicheTags.
     * // Create many NicheTags
     * const nicheTag = await prisma.nicheTag.createMany({
     *   data: [
    createMany<T extends NicheTagCreateManyArgs>(args?: SelectSubset<T, NicheTagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many NicheTags and returns the data saved in the database.
     * @param {NicheTagCreateManyAndReturnArgs} args - Arguments to create many NicheTags.
     * // Create many NicheTags
     * const nicheTag = await prisma.nicheTag.createManyAndReturn({
     *   data: [
     * // Create many NicheTags and only return the `id`
     * const nicheTagWithIdOnly = await prisma.nicheTag.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends NicheTagCreateManyAndReturnArgs>(args?: SelectSubset<T, NicheTagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends NicheTagDeleteArgs>(args: SelectSubset<T, NicheTagDeleteArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends NicheTagUpdateArgs>(args: SelectSubset<T, NicheTagUpdateArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {NicheTagDeleteManyArgs} args - Arguments to filter NicheTags to delete.
     * const { count } = await prisma.nicheTag.deleteMany({
     *   where: {
    deleteMany<T extends NicheTagDeleteManyArgs>(args?: SelectSubset<T, NicheTagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NicheTagUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many NicheTags
     * const nicheTag = await prisma.nicheTag.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends NicheTagUpdateManyArgs>(args: SelectSubset<T, NicheTagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {NicheTagUpdateManyAndReturnArgs} args - Arguments to update many NicheTags.
     * // Update many NicheTags
     * const nicheTag = await prisma.nicheTag.updateManyAndReturn({
     *   where: {
     *   data: [
     * const nicheTagWithIdOnly = await prisma.nicheTag.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends NicheTagUpdateManyAndReturnArgs>(args: SelectSubset<T, NicheTagUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends NicheTagUpsertArgs>(args: SelectSubset<T, NicheTagUpsertArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, NicheTagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], NicheTagCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends NicheTagAggregateArgs>(args: Subset<T, NicheTagAggregateArgs>): Prisma.PrismaPromise<GetNicheTagAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: NicheTagGroupByArgs['orderBy'] }
        : { orderBy?: NicheTagGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, NicheTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNicheTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: NicheTagFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reflectionNicheTags<T extends NicheTag$reflectionNicheTagsArgs<ExtArgs> = {}>(args?: Subset<T, NicheTag$reflectionNicheTagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"NicheTag", 'String'>
    readonly name: FieldRef<"NicheTag", 'String'>
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where: NicheTagWhereUniqueInput
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where: NicheTagWhereUniqueInput
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where?: NicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: NicheTagOrderByWithRelationInput | NicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: NicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: NicheTagScalarFieldEnum | NicheTagScalarFieldEnum[]
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where?: NicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: NicheTagOrderByWithRelationInput | NicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: NicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: NicheTagScalarFieldEnum | NicheTagScalarFieldEnum[]
   * NicheTag findMany
  export type NicheTagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where?: NicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: NicheTagOrderByWithRelationInput | NicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: NicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: NicheTagScalarFieldEnum | NicheTagScalarFieldEnum[]
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    data: XOR<NicheTagCreateInput, NicheTagUncheckedCreateInput>
   * NicheTag createMany
  export type NicheTagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many NicheTags.
    data: NicheTagCreateManyInput | NicheTagCreateManyInput[]
    skipDuplicates?: boolean
   * NicheTag createManyAndReturn
  export type NicheTagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: NicheTagSelectCreateManyAndReturn<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
     * The data used to create many NicheTags.
    data: NicheTagCreateManyInput | NicheTagCreateManyInput[]
    skipDuplicates?: boolean
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    data: XOR<NicheTagUpdateInput, NicheTagUncheckedUpdateInput>
    where: NicheTagWhereUniqueInput
   * NicheTag updateMany
  export type NicheTagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<NicheTagUpdateManyMutationInput, NicheTagUncheckedUpdateManyInput>
    where?: NicheTagWhereInput
     * Limit how many NicheTags to update.
    limit?: number
   * NicheTag updateManyAndReturn
  export type NicheTagUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: NicheTagSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    data: XOR<NicheTagUpdateManyMutationInput, NicheTagUncheckedUpdateManyInput>
    where?: NicheTagWhereInput
     * Limit how many NicheTags to update.
    limit?: number
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where: NicheTagWhereUniqueInput
    create: XOR<NicheTagCreateInput, NicheTagUncheckedCreateInput>
    update: XOR<NicheTagUpdateInput, NicheTagUncheckedUpdateInput>
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    where: NicheTagWhereUniqueInput
   * NicheTag deleteMany
  export type NicheTagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NicheTagWhereInput
     * Limit how many NicheTags to delete.
    limit?: number
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where?: ReflectionNicheTagWhereInput
    orderBy?: ReflectionNicheTagOrderByWithRelationInput | ReflectionNicheTagOrderByWithRelationInput[]
    cursor?: ReflectionNicheTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReflectionNicheTagScalarFieldEnum | ReflectionNicheTagScalarFieldEnum[]
    select?: NicheTagSelect<ExtArgs> | null
    omit?: NicheTagOmit<ExtArgs> | null
    include?: NicheTagInclude<ExtArgs> | null
    _count: ReflectionNicheTagCountAggregateOutputType | null
    _min: ReflectionNicheTagMinAggregateOutputType | null
    _max: ReflectionNicheTagMaxAggregateOutputType | null
    reflection_id: string | null
    niche_tag_id: string | null
    reflection_id: string | null
    niche_tag_id: string | null
    reflection_id: number
    niche_tag_id: number
    _all: number
    reflection_id?: true
    niche_tag_id?: true
    reflection_id?: true
    niche_tag_id?: true
    reflection_id?: true
    niche_tag_id?: true
    _all?: true
    where?: ReflectionNicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionNicheTagOrderByWithRelationInput | ReflectionNicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionNicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | ReflectionNicheTagCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: ReflectionNicheTagMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: ReflectionNicheTagMaxAggregateInputType
        [P in keyof T & keyof AggregateReflectionNicheTag]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateReflectionNicheTag[P]>
      : GetScalarType<T[P], AggregateReflectionNicheTag[P]>
    where?: ReflectionNicheTagWhereInput
    orderBy?: ReflectionNicheTagOrderByWithAggregationInput | ReflectionNicheTagOrderByWithAggregationInput[]
    by: ReflectionNicheTagScalarFieldEnum[] | ReflectionNicheTagScalarFieldEnum
    having?: ReflectionNicheTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReflectionNicheTagCountAggregateInputType | true
    _min?: ReflectionNicheTagMinAggregateInputType
    _max?: ReflectionNicheTagMaxAggregateInputType
    reflection_id: string
    niche_tag_id: string
    _count: ReflectionNicheTagCountAggregateOutputType | null
    _min: ReflectionNicheTagMinAggregateOutputType | null
    _max: ReflectionNicheTagMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof ReflectionNicheTagGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], ReflectionNicheTagGroupByOutputType[P]>
            : GetScalarType<T[P], ReflectionNicheTagGroupByOutputType[P]>
    reflection_id?: boolean
    niche_tag_id?: boolean
    nicheTag?: boolean | NicheTagDefaultArgs<ExtArgs>
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
  export type ReflectionNicheTagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reflection_id?: boolean
    niche_tag_id?: boolean
    nicheTag?: boolean | NicheTagDefaultArgs<ExtArgs>
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
  export type ReflectionNicheTagSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reflection_id?: boolean
    niche_tag_id?: boolean
    nicheTag?: boolean | NicheTagDefaultArgs<ExtArgs>
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    reflection_id?: boolean
    niche_tag_id?: boolean
    nicheTag?: boolean | NicheTagDefaultArgs<ExtArgs>
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
  export type ReflectionNicheTagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nicheTag?: boolean | NicheTagDefaultArgs<ExtArgs>
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
  export type ReflectionNicheTagIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nicheTag?: boolean | NicheTagDefaultArgs<ExtArgs>
    reflection?: boolean | ReflectionDefaultArgs<ExtArgs>
    name: "ReflectionNicheTag"
    objects: {
      nicheTag: Prisma.$NicheTagPayload<ExtArgs>
      reflection: Prisma.$ReflectionPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      reflection_id: string
      niche_tag_id: string
    composites: {}
    Omit<ReflectionNicheTagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReflectionNicheTagCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReflectionNicheTag'], meta: { name: 'ReflectionNicheTag' } }
     *   where: {
    findUnique<T extends ReflectionNicheTagFindUniqueArgs>(args: SelectSubset<T, ReflectionNicheTagFindUniqueArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends ReflectionNicheTagFindUniqueOrThrowArgs>(args: SelectSubset<T, ReflectionNicheTagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends ReflectionNicheTagFindFirstArgs>(args?: SelectSubset<T, ReflectionNicheTagFindFirstArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends ReflectionNicheTagFindFirstOrThrowArgs>(args?: SelectSubset<T, ReflectionNicheTagFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionNicheTagFindManyArgs} args - Arguments to filter and select certain fields only.
     * const reflectionNicheTags = await prisma.reflectionNicheTag.findMany()
     * const reflectionNicheTags = await prisma.reflectionNicheTag.findMany({ take: 10 })
     * const reflectionNicheTagWithReflection_idOnly = await prisma.reflectionNicheTag.findMany({ select: { reflection_id: true } })
    findMany<T extends ReflectionNicheTagFindManyArgs>(args?: SelectSubset<T, ReflectionNicheTagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends ReflectionNicheTagCreateArgs>(args: SelectSubset<T, ReflectionNicheTagCreateArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many ReflectionNicheTags.
     * @param {ReflectionNicheTagCreateManyArgs} args - Arguments to create many ReflectionNicheTags.
     * // Create many ReflectionNicheTags
     * const reflectionNicheTag = await prisma.reflectionNicheTag.createMany({
     *   data: [
    createMany<T extends ReflectionNicheTagCreateManyArgs>(args?: SelectSubset<T, ReflectionNicheTagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many ReflectionNicheTags and returns the data saved in the database.
     * @param {ReflectionNicheTagCreateManyAndReturnArgs} args - Arguments to create many ReflectionNicheTags.
     * // Create many ReflectionNicheTags
     * const reflectionNicheTag = await prisma.reflectionNicheTag.createManyAndReturn({
     *   data: [
     * // Create many ReflectionNicheTags and only return the `reflection_id`
     * const reflectionNicheTagWithReflection_idOnly = await prisma.reflectionNicheTag.createManyAndReturn({
     *   select: { reflection_id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends ReflectionNicheTagCreateManyAndReturnArgs>(args?: SelectSubset<T, ReflectionNicheTagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends ReflectionNicheTagDeleteArgs>(args: SelectSubset<T, ReflectionNicheTagDeleteArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends ReflectionNicheTagUpdateArgs>(args: SelectSubset<T, ReflectionNicheTagUpdateArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {ReflectionNicheTagDeleteManyArgs} args - Arguments to filter ReflectionNicheTags to delete.
     * const { count } = await prisma.reflectionNicheTag.deleteMany({
     *   where: {
    deleteMany<T extends ReflectionNicheTagDeleteManyArgs>(args?: SelectSubset<T, ReflectionNicheTagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReflectionNicheTagUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many ReflectionNicheTags
     * const reflectionNicheTag = await prisma.reflectionNicheTag.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends ReflectionNicheTagUpdateManyArgs>(args: SelectSubset<T, ReflectionNicheTagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {ReflectionNicheTagUpdateManyAndReturnArgs} args - Arguments to update many ReflectionNicheTags.
     * // Update many ReflectionNicheTags
     * const reflectionNicheTag = await prisma.reflectionNicheTag.updateManyAndReturn({
     *   where: {
     *   data: [
     * const reflectionNicheTagWithReflection_idOnly = await prisma.reflectionNicheTag.updateManyAndReturn({
     *   select: { reflection_id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends ReflectionNicheTagUpdateManyAndReturnArgs>(args: SelectSubset<T, ReflectionNicheTagUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends ReflectionNicheTagUpsertArgs>(args: SelectSubset<T, ReflectionNicheTagUpsertArgs<ExtArgs>>): Prisma__ReflectionNicheTagClient<$Result.GetResult<Prisma.$ReflectionNicheTagPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, ReflectionNicheTagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], ReflectionNicheTagCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends ReflectionNicheTagAggregateArgs>(args: Subset<T, ReflectionNicheTagAggregateArgs>): Prisma.PrismaPromise<GetReflectionNicheTagAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: ReflectionNicheTagGroupByArgs['orderBy'] }
        : { orderBy?: ReflectionNicheTagGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, ReflectionNicheTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReflectionNicheTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: ReflectionNicheTagFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    nicheTag<T extends NicheTagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, NicheTagDefaultArgs<ExtArgs>>): Prisma__NicheTagClient<$Result.GetResult<Prisma.$NicheTagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reflection<T extends ReflectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReflectionDefaultArgs<ExtArgs>>): Prisma__ReflectionClient<$Result.GetResult<Prisma.$ReflectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly reflection_id: FieldRef<"ReflectionNicheTag", 'String'>
    readonly niche_tag_id: FieldRef<"ReflectionNicheTag", 'String'>
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where: ReflectionNicheTagWhereUniqueInput
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where: ReflectionNicheTagWhereUniqueInput
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where?: ReflectionNicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionNicheTagOrderByWithRelationInput | ReflectionNicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionNicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionNicheTagScalarFieldEnum | ReflectionNicheTagScalarFieldEnum[]
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where?: ReflectionNicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionNicheTagOrderByWithRelationInput | ReflectionNicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionNicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: ReflectionNicheTagScalarFieldEnum | ReflectionNicheTagScalarFieldEnum[]
   * ReflectionNicheTag findMany
  export type ReflectionNicheTagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where?: ReflectionNicheTagWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: ReflectionNicheTagOrderByWithRelationInput | ReflectionNicheTagOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: ReflectionNicheTagWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: ReflectionNicheTagScalarFieldEnum | ReflectionNicheTagScalarFieldEnum[]
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    data: XOR<ReflectionNicheTagCreateInput, ReflectionNicheTagUncheckedCreateInput>
   * ReflectionNicheTag createMany
  export type ReflectionNicheTagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many ReflectionNicheTags.
    data: ReflectionNicheTagCreateManyInput | ReflectionNicheTagCreateManyInput[]
    skipDuplicates?: boolean
   * ReflectionNicheTag createManyAndReturn
  export type ReflectionNicheTagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionNicheTagSelectCreateManyAndReturn<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
     * The data used to create many ReflectionNicheTags.
    data: ReflectionNicheTagCreateManyInput | ReflectionNicheTagCreateManyInput[]
    skipDuplicates?: boolean
    include?: ReflectionNicheTagIncludeCreateManyAndReturn<ExtArgs> | null
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    data: XOR<ReflectionNicheTagUpdateInput, ReflectionNicheTagUncheckedUpdateInput>
    where: ReflectionNicheTagWhereUniqueInput
   * ReflectionNicheTag updateMany
  export type ReflectionNicheTagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<ReflectionNicheTagUpdateManyMutationInput, ReflectionNicheTagUncheckedUpdateManyInput>
    where?: ReflectionNicheTagWhereInput
     * Limit how many ReflectionNicheTags to update.
    limit?: number
   * ReflectionNicheTag updateManyAndReturn
  export type ReflectionNicheTagUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: ReflectionNicheTagSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    data: XOR<ReflectionNicheTagUpdateManyMutationInput, ReflectionNicheTagUncheckedUpdateManyInput>
    where?: ReflectionNicheTagWhereInput
     * Limit how many ReflectionNicheTags to update.
    limit?: number
    include?: ReflectionNicheTagIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where: ReflectionNicheTagWhereUniqueInput
    create: XOR<ReflectionNicheTagCreateInput, ReflectionNicheTagUncheckedCreateInput>
    update: XOR<ReflectionNicheTagUpdateInput, ReflectionNicheTagUncheckedUpdateInput>
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    where: ReflectionNicheTagWhereUniqueInput
   * ReflectionNicheTag deleteMany
  export type ReflectionNicheTagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReflectionNicheTagWhereInput
     * Limit how many ReflectionNicheTags to delete.
    limit?: number
    select?: ReflectionNicheTagSelect<ExtArgs> | null
    omit?: ReflectionNicheTagOmit<ExtArgs> | null
    include?: ReflectionNicheTagInclude<ExtArgs> | null
    _count: DailyTaskCountAggregateOutputType | null
    _min: DailyTaskMinAggregateOutputType | null
    _max: DailyTaskMaxAggregateOutputType | null
    id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    is_recurring: boolean | null
    ai_generated: boolean | null
    id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    is_recurring: boolean | null
    ai_generated: boolean | null
    id: number
    user_id: number
    title: number
    description: number
    created_at: number
    updated_at: number
    is_recurring: number
    ai_generated: number
    _all: number
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    is_recurring?: true
    ai_generated?: true
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    is_recurring?: true
    ai_generated?: true
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    is_recurring?: true
    ai_generated?: true
    _all?: true
    where?: DailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskOrderByWithRelationInput | DailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | DailyTaskCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: DailyTaskMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: DailyTaskMaxAggregateInputType
        [P in keyof T & keyof AggregateDailyTask]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateDailyTask[P]>
      : GetScalarType<T[P], AggregateDailyTask[P]>
    where?: DailyTaskWhereInput
    orderBy?: DailyTaskOrderByWithAggregationInput | DailyTaskOrderByWithAggregationInput[]
    by: DailyTaskScalarFieldEnum[] | DailyTaskScalarFieldEnum
    having?: DailyTaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DailyTaskCountAggregateInputType | true
    _min?: DailyTaskMinAggregateInputType
    _max?: DailyTaskMaxAggregateInputType
    id: string
    user_id: string
    title: string
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    is_recurring: boolean | null
    ai_generated: boolean | null
    _count: DailyTaskCountAggregateOutputType | null
    _min: DailyTaskMinAggregateOutputType | null
    _max: DailyTaskMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof DailyTaskGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], DailyTaskGroupByOutputType[P]>
            : GetScalarType<T[P], DailyTaskGroupByOutputType[P]>
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_recurring?: boolean
    ai_generated?: boolean
    completions?: boolean | DailyTask$completionsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | DailyTaskCountOutputTypeDefaultArgs<ExtArgs>
  export type DailyTaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_recurring?: boolean
    ai_generated?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type DailyTaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_recurring?: boolean
    ai_generated?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_recurring?: boolean
    ai_generated?: boolean
    completions?: boolean | DailyTask$completionsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | DailyTaskCountOutputTypeDefaultArgs<ExtArgs>
  export type DailyTaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type DailyTaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "DailyTask"
    objects: {
      completions: Prisma.$DailyTaskCompletionPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      title: string
      description: string | null
      created_at: Date | null
      updated_at: Date | null
      is_recurring: boolean | null
      ai_generated: boolean | null
    composites: {}
    Omit<DailyTaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DailyTaskCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DailyTask'], meta: { name: 'DailyTask' } }
     *   where: {
    findUnique<T extends DailyTaskFindUniqueArgs>(args: SelectSubset<T, DailyTaskFindUniqueArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends DailyTaskFindUniqueOrThrowArgs>(args: SelectSubset<T, DailyTaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends DailyTaskFindFirstArgs>(args?: SelectSubset<T, DailyTaskFindFirstArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends DailyTaskFindFirstOrThrowArgs>(args?: SelectSubset<T, DailyTaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyTaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * const dailyTasks = await prisma.dailyTask.findMany()
     * const dailyTasks = await prisma.dailyTask.findMany({ take: 10 })
     * const dailyTaskWithIdOnly = await prisma.dailyTask.findMany({ select: { id: true } })
    findMany<T extends DailyTaskFindManyArgs>(args?: SelectSubset<T, DailyTaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends DailyTaskCreateArgs>(args: SelectSubset<T, DailyTaskCreateArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many DailyTasks.
     * @param {DailyTaskCreateManyArgs} args - Arguments to create many DailyTasks.
     * // Create many DailyTasks
     * const dailyTask = await prisma.dailyTask.createMany({
     *   data: [
    createMany<T extends DailyTaskCreateManyArgs>(args?: SelectSubset<T, DailyTaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many DailyTasks and returns the data saved in the database.
     * @param {DailyTaskCreateManyAndReturnArgs} args - Arguments to create many DailyTasks.
     * // Create many DailyTasks
     * const dailyTask = await prisma.dailyTask.createManyAndReturn({
     *   data: [
     * // Create many DailyTasks and only return the `id`
     * const dailyTaskWithIdOnly = await prisma.dailyTask.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends DailyTaskCreateManyAndReturnArgs>(args?: SelectSubset<T, DailyTaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends DailyTaskDeleteArgs>(args: SelectSubset<T, DailyTaskDeleteArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends DailyTaskUpdateArgs>(args: SelectSubset<T, DailyTaskUpdateArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {DailyTaskDeleteManyArgs} args - Arguments to filter DailyTasks to delete.
     * const { count } = await prisma.dailyTask.deleteMany({
     *   where: {
    deleteMany<T extends DailyTaskDeleteManyArgs>(args?: SelectSubset<T, DailyTaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyTaskUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many DailyTasks
     * const dailyTask = await prisma.dailyTask.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends DailyTaskUpdateManyArgs>(args: SelectSubset<T, DailyTaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {DailyTaskUpdateManyAndReturnArgs} args - Arguments to update many DailyTasks.
     * // Update many DailyTasks
     * const dailyTask = await prisma.dailyTask.updateManyAndReturn({
     *   where: {
     *   data: [
     * const dailyTaskWithIdOnly = await prisma.dailyTask.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends DailyTaskUpdateManyAndReturnArgs>(args: SelectSubset<T, DailyTaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends DailyTaskUpsertArgs>(args: SelectSubset<T, DailyTaskUpsertArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, DailyTaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], DailyTaskCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends DailyTaskAggregateArgs>(args: Subset<T, DailyTaskAggregateArgs>): Prisma.PrismaPromise<GetDailyTaskAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: DailyTaskGroupByArgs['orderBy'] }
        : { orderBy?: DailyTaskGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, DailyTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDailyTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: DailyTaskFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    completions<T extends DailyTask$completionsArgs<ExtArgs> = {}>(args?: Subset<T, DailyTask$completionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"DailyTask", 'String'>
    readonly user_id: FieldRef<"DailyTask", 'String'>
    readonly title: FieldRef<"DailyTask", 'String'>
    readonly description: FieldRef<"DailyTask", 'String'>
    readonly created_at: FieldRef<"DailyTask", 'DateTime'>
    readonly updated_at: FieldRef<"DailyTask", 'DateTime'>
    readonly is_recurring: FieldRef<"DailyTask", 'Boolean'>
    readonly ai_generated: FieldRef<"DailyTask", 'Boolean'>
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where: DailyTaskWhereUniqueInput
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where: DailyTaskWhereUniqueInput
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where?: DailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskOrderByWithRelationInput | DailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DailyTaskScalarFieldEnum | DailyTaskScalarFieldEnum[]
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where?: DailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskOrderByWithRelationInput | DailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DailyTaskScalarFieldEnum | DailyTaskScalarFieldEnum[]
   * DailyTask findMany
  export type DailyTaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where?: DailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskOrderByWithRelationInput | DailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: DailyTaskScalarFieldEnum | DailyTaskScalarFieldEnum[]
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    data: XOR<DailyTaskCreateInput, DailyTaskUncheckedCreateInput>
   * DailyTask createMany
  export type DailyTaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many DailyTasks.
    data: DailyTaskCreateManyInput | DailyTaskCreateManyInput[]
    skipDuplicates?: boolean
   * DailyTask createManyAndReturn
  export type DailyTaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DailyTaskSelectCreateManyAndReturn<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
     * The data used to create many DailyTasks.
    data: DailyTaskCreateManyInput | DailyTaskCreateManyInput[]
    skipDuplicates?: boolean
    include?: DailyTaskIncludeCreateManyAndReturn<ExtArgs> | null
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    data: XOR<DailyTaskUpdateInput, DailyTaskUncheckedUpdateInput>
    where: DailyTaskWhereUniqueInput
   * DailyTask updateMany
  export type DailyTaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<DailyTaskUpdateManyMutationInput, DailyTaskUncheckedUpdateManyInput>
    where?: DailyTaskWhereInput
     * Limit how many DailyTasks to update.
    limit?: number
   * DailyTask updateManyAndReturn
  export type DailyTaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DailyTaskSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    data: XOR<DailyTaskUpdateManyMutationInput, DailyTaskUncheckedUpdateManyInput>
    where?: DailyTaskWhereInput
     * Limit how many DailyTasks to update.
    limit?: number
    include?: DailyTaskIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where: DailyTaskWhereUniqueInput
    create: XOR<DailyTaskCreateInput, DailyTaskUncheckedCreateInput>
    update: XOR<DailyTaskUpdateInput, DailyTaskUncheckedUpdateInput>
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    where: DailyTaskWhereUniqueInput
   * DailyTask deleteMany
  export type DailyTaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DailyTaskWhereInput
     * Limit how many DailyTasks to delete.
    limit?: number
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where?: DailyTaskCompletionWhereInput
    orderBy?: DailyTaskCompletionOrderByWithRelationInput | DailyTaskCompletionOrderByWithRelationInput[]
    cursor?: DailyTaskCompletionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DailyTaskCompletionScalarFieldEnum | DailyTaskCompletionScalarFieldEnum[]
    select?: DailyTaskSelect<ExtArgs> | null
    omit?: DailyTaskOmit<ExtArgs> | null
    include?: DailyTaskInclude<ExtArgs> | null
    _count: DailyTaskCompletionCountAggregateOutputType | null
    _min: DailyTaskCompletionMinAggregateOutputType | null
    _max: DailyTaskCompletionMaxAggregateOutputType | null
    id: string | null
    task_id: string | null
    user_id: string | null
    completion_date: Date | null
    created_at: Date | null
    id: string | null
    task_id: string | null
    user_id: string | null
    completion_date: Date | null
    created_at: Date | null
    id: number
    task_id: number
    user_id: number
    completion_date: number
    created_at: number
    _all: number
    id?: true
    task_id?: true
    user_id?: true
    completion_date?: true
    created_at?: true
    id?: true
    task_id?: true
    user_id?: true
    completion_date?: true
    created_at?: true
    id?: true
    task_id?: true
    user_id?: true
    completion_date?: true
    created_at?: true
    _all?: true
    where?: DailyTaskCompletionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskCompletionOrderByWithRelationInput | DailyTaskCompletionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskCompletionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | DailyTaskCompletionCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: DailyTaskCompletionMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: DailyTaskCompletionMaxAggregateInputType
        [P in keyof T & keyof AggregateDailyTaskCompletion]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateDailyTaskCompletion[P]>
      : GetScalarType<T[P], AggregateDailyTaskCompletion[P]>
    where?: DailyTaskCompletionWhereInput
    orderBy?: DailyTaskCompletionOrderByWithAggregationInput | DailyTaskCompletionOrderByWithAggregationInput[]
    by: DailyTaskCompletionScalarFieldEnum[] | DailyTaskCompletionScalarFieldEnum
    having?: DailyTaskCompletionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DailyTaskCompletionCountAggregateInputType | true
    _min?: DailyTaskCompletionMinAggregateInputType
    _max?: DailyTaskCompletionMaxAggregateInputType
    id: string
    task_id: string
    user_id: string
    completion_date: Date
    created_at: Date | null
    _count: DailyTaskCompletionCountAggregateOutputType | null
    _min: DailyTaskCompletionMinAggregateOutputType | null
    _max: DailyTaskCompletionMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof DailyTaskCompletionGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], DailyTaskCompletionGroupByOutputType[P]>
            : GetScalarType<T[P], DailyTaskCompletionGroupByOutputType[P]>
    id?: boolean
    task_id?: boolean
    user_id?: boolean
    completion_date?: boolean
    created_at?: boolean
    task?: boolean | DailyTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type DailyTaskCompletionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    task_id?: boolean
    user_id?: boolean
    completion_date?: boolean
    created_at?: boolean
    task?: boolean | DailyTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type DailyTaskCompletionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    task_id?: boolean
    user_id?: boolean
    completion_date?: boolean
    created_at?: boolean
    task?: boolean | DailyTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    task_id?: boolean
    user_id?: boolean
    completion_date?: boolean
    created_at?: boolean
    task?: boolean | DailyTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type DailyTaskCompletionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    task?: boolean | DailyTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type DailyTaskCompletionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    task?: boolean | DailyTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "DailyTaskCompletion"
    objects: {
      task: Prisma.$DailyTaskPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      task_id: string
      user_id: string
      completion_date: Date
      created_at: Date | null
    composites: {}
    Omit<DailyTaskCompletionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DailyTaskCompletionCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DailyTaskCompletion'], meta: { name: 'DailyTaskCompletion' } }
     *   where: {
    findUnique<T extends DailyTaskCompletionFindUniqueArgs>(args: SelectSubset<T, DailyTaskCompletionFindUniqueArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends DailyTaskCompletionFindUniqueOrThrowArgs>(args: SelectSubset<T, DailyTaskCompletionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends DailyTaskCompletionFindFirstArgs>(args?: SelectSubset<T, DailyTaskCompletionFindFirstArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends DailyTaskCompletionFindFirstOrThrowArgs>(args?: SelectSubset<T, DailyTaskCompletionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyTaskCompletionFindManyArgs} args - Arguments to filter and select certain fields only.
     * const dailyTaskCompletions = await prisma.dailyTaskCompletion.findMany()
     * const dailyTaskCompletions = await prisma.dailyTaskCompletion.findMany({ take: 10 })
     * const dailyTaskCompletionWithIdOnly = await prisma.dailyTaskCompletion.findMany({ select: { id: true } })
    findMany<T extends DailyTaskCompletionFindManyArgs>(args?: SelectSubset<T, DailyTaskCompletionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends DailyTaskCompletionCreateArgs>(args: SelectSubset<T, DailyTaskCompletionCreateArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many DailyTaskCompletions.
     * @param {DailyTaskCompletionCreateManyArgs} args - Arguments to create many DailyTaskCompletions.
     * // Create many DailyTaskCompletions
     * const dailyTaskCompletion = await prisma.dailyTaskCompletion.createMany({
     *   data: [
    createMany<T extends DailyTaskCompletionCreateManyArgs>(args?: SelectSubset<T, DailyTaskCompletionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many DailyTaskCompletions and returns the data saved in the database.
     * @param {DailyTaskCompletionCreateManyAndReturnArgs} args - Arguments to create many DailyTaskCompletions.
     * // Create many DailyTaskCompletions
     * const dailyTaskCompletion = await prisma.dailyTaskCompletion.createManyAndReturn({
     *   data: [
     * // Create many DailyTaskCompletions and only return the `id`
     * const dailyTaskCompletionWithIdOnly = await prisma.dailyTaskCompletion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends DailyTaskCompletionCreateManyAndReturnArgs>(args?: SelectSubset<T, DailyTaskCompletionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends DailyTaskCompletionDeleteArgs>(args: SelectSubset<T, DailyTaskCompletionDeleteArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends DailyTaskCompletionUpdateArgs>(args: SelectSubset<T, DailyTaskCompletionUpdateArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {DailyTaskCompletionDeleteManyArgs} args - Arguments to filter DailyTaskCompletions to delete.
     * const { count } = await prisma.dailyTaskCompletion.deleteMany({
     *   where: {
    deleteMany<T extends DailyTaskCompletionDeleteManyArgs>(args?: SelectSubset<T, DailyTaskCompletionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyTaskCompletionUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many DailyTaskCompletions
     * const dailyTaskCompletion = await prisma.dailyTaskCompletion.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends DailyTaskCompletionUpdateManyArgs>(args: SelectSubset<T, DailyTaskCompletionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {DailyTaskCompletionUpdateManyAndReturnArgs} args - Arguments to update many DailyTaskCompletions.
     * // Update many DailyTaskCompletions
     * const dailyTaskCompletion = await prisma.dailyTaskCompletion.updateManyAndReturn({
     *   where: {
     *   data: [
     * const dailyTaskCompletionWithIdOnly = await prisma.dailyTaskCompletion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends DailyTaskCompletionUpdateManyAndReturnArgs>(args: SelectSubset<T, DailyTaskCompletionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends DailyTaskCompletionUpsertArgs>(args: SelectSubset<T, DailyTaskCompletionUpsertArgs<ExtArgs>>): Prisma__DailyTaskCompletionClient<$Result.GetResult<Prisma.$DailyTaskCompletionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, DailyTaskCompletionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], DailyTaskCompletionCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends DailyTaskCompletionAggregateArgs>(args: Subset<T, DailyTaskCompletionAggregateArgs>): Prisma.PrismaPromise<GetDailyTaskCompletionAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: DailyTaskCompletionGroupByArgs['orderBy'] }
        : { orderBy?: DailyTaskCompletionGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, DailyTaskCompletionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDailyTaskCompletionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: DailyTaskCompletionFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    task<T extends DailyTaskDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DailyTaskDefaultArgs<ExtArgs>>): Prisma__DailyTaskClient<$Result.GetResult<Prisma.$DailyTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"DailyTaskCompletion", 'String'>
    readonly task_id: FieldRef<"DailyTaskCompletion", 'String'>
    readonly user_id: FieldRef<"DailyTaskCompletion", 'String'>
    readonly completion_date: FieldRef<"DailyTaskCompletion", 'DateTime'>
    readonly created_at: FieldRef<"DailyTaskCompletion", 'DateTime'>
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where: DailyTaskCompletionWhereUniqueInput
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where: DailyTaskCompletionWhereUniqueInput
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where?: DailyTaskCompletionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskCompletionOrderByWithRelationInput | DailyTaskCompletionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskCompletionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DailyTaskCompletionScalarFieldEnum | DailyTaskCompletionScalarFieldEnum[]
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where?: DailyTaskCompletionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskCompletionOrderByWithRelationInput | DailyTaskCompletionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskCompletionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: DailyTaskCompletionScalarFieldEnum | DailyTaskCompletionScalarFieldEnum[]
   * DailyTaskCompletion findMany
  export type DailyTaskCompletionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where?: DailyTaskCompletionWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: DailyTaskCompletionOrderByWithRelationInput | DailyTaskCompletionOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: DailyTaskCompletionWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: DailyTaskCompletionScalarFieldEnum | DailyTaskCompletionScalarFieldEnum[]
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    data: XOR<DailyTaskCompletionCreateInput, DailyTaskCompletionUncheckedCreateInput>
   * DailyTaskCompletion createMany
  export type DailyTaskCompletionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many DailyTaskCompletions.
    data: DailyTaskCompletionCreateManyInput | DailyTaskCompletionCreateManyInput[]
    skipDuplicates?: boolean
   * DailyTaskCompletion createManyAndReturn
  export type DailyTaskCompletionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DailyTaskCompletionSelectCreateManyAndReturn<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
     * The data used to create many DailyTaskCompletions.
    data: DailyTaskCompletionCreateManyInput | DailyTaskCompletionCreateManyInput[]
    skipDuplicates?: boolean
    include?: DailyTaskCompletionIncludeCreateManyAndReturn<ExtArgs> | null
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    data: XOR<DailyTaskCompletionUpdateInput, DailyTaskCompletionUncheckedUpdateInput>
    where: DailyTaskCompletionWhereUniqueInput
   * DailyTaskCompletion updateMany
  export type DailyTaskCompletionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<DailyTaskCompletionUpdateManyMutationInput, DailyTaskCompletionUncheckedUpdateManyInput>
    where?: DailyTaskCompletionWhereInput
     * Limit how many DailyTaskCompletions to update.
    limit?: number
   * DailyTaskCompletion updateManyAndReturn
  export type DailyTaskCompletionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: DailyTaskCompletionSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    data: XOR<DailyTaskCompletionUpdateManyMutationInput, DailyTaskCompletionUncheckedUpdateManyInput>
    where?: DailyTaskCompletionWhereInput
     * Limit how many DailyTaskCompletions to update.
    limit?: number
    include?: DailyTaskCompletionIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where: DailyTaskCompletionWhereUniqueInput
    create: XOR<DailyTaskCompletionCreateInput, DailyTaskCompletionUncheckedCreateInput>
    update: XOR<DailyTaskCompletionUpdateInput, DailyTaskCompletionUncheckedUpdateInput>
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    where: DailyTaskCompletionWhereUniqueInput
   * DailyTaskCompletion deleteMany
  export type DailyTaskCompletionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DailyTaskCompletionWhereInput
     * Limit how many DailyTaskCompletions to delete.
    limit?: number
    select?: DailyTaskCompletionSelect<ExtArgs> | null
    omit?: DailyTaskCompletionOmit<ExtArgs> | null
    include?: DailyTaskCompletionInclude<ExtArgs> | null
    _count: Devotional_daily_task_templatesCountAggregateOutputType | null
    _min: Devotional_daily_task_templatesMinAggregateOutputType | null
    _max: Devotional_daily_task_templatesMaxAggregateOutputType | null
    id: string | null
    devotional_id: string | null
    title: string | null
    description: string | null
    is_recurring: boolean | null
    created_at: Date | null
    id: string | null
    devotional_id: string | null
    title: string | null
    description: string | null
    is_recurring: boolean | null
    created_at: Date | null
    id: number
    devotional_id: number
    title: number
    description: number
    is_recurring: number
    created_at: number
    _all: number
    id?: true
    devotional_id?: true
    title?: true
    description?: true
    is_recurring?: true
    created_at?: true
    id?: true
    devotional_id?: true
    title?: true
    description?: true
    is_recurring?: true
    created_at?: true
    id?: true
    devotional_id?: true
    title?: true
    description?: true
    is_recurring?: true
    created_at?: true
    _all?: true
    where?: devotional_daily_task_templatesWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: devotional_daily_task_templatesOrderByWithRelationInput | devotional_daily_task_templatesOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: devotional_daily_task_templatesWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | Devotional_daily_task_templatesCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: Devotional_daily_task_templatesMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: Devotional_daily_task_templatesMaxAggregateInputType
        [P in keyof T & keyof AggregateDevotional_daily_task_templates]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateDevotional_daily_task_templates[P]>
      : GetScalarType<T[P], AggregateDevotional_daily_task_templates[P]>
    where?: devotional_daily_task_templatesWhereInput
    orderBy?: devotional_daily_task_templatesOrderByWithAggregationInput | devotional_daily_task_templatesOrderByWithAggregationInput[]
    by: Devotional_daily_task_templatesScalarFieldEnum[] | Devotional_daily_task_templatesScalarFieldEnum
    having?: devotional_daily_task_templatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Devotional_daily_task_templatesCountAggregateInputType | true
    _min?: Devotional_daily_task_templatesMinAggregateInputType
    _max?: Devotional_daily_task_templatesMaxAggregateInputType
    id: string
    devotional_id: string
    title: string
    description: string | null
    is_recurring: boolean | null
    created_at: Date | null
    _count: Devotional_daily_task_templatesCountAggregateOutputType | null
    _min: Devotional_daily_task_templatesMinAggregateOutputType | null
    _max: Devotional_daily_task_templatesMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof Devotional_daily_task_templatesGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], Devotional_daily_task_templatesGroupByOutputType[P]>
            : GetScalarType<T[P], Devotional_daily_task_templatesGroupByOutputType[P]>
    id?: boolean
    devotional_id?: boolean
    title?: boolean
    description?: boolean
    is_recurring?: boolean
    created_at?: boolean
    devotional_goals?: boolean | DevotionalGoalDefaultArgs<ExtArgs>
  export type devotional_daily_task_templatesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devotional_id?: boolean
    title?: boolean
    description?: boolean
    is_recurring?: boolean
    created_at?: boolean
    devotional_goals?: boolean | DevotionalGoalDefaultArgs<ExtArgs>
  export type devotional_daily_task_templatesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devotional_id?: boolean
    title?: boolean
    description?: boolean
    is_recurring?: boolean
    created_at?: boolean
    devotional_goals?: boolean | DevotionalGoalDefaultArgs<ExtArgs>
    id?: boolean
    devotional_id?: boolean
    title?: boolean
    description?: boolean
    is_recurring?: boolean
    created_at?: boolean
    devotional_goals?: boolean | DevotionalGoalDefaultArgs<ExtArgs>
  export type devotional_daily_task_templatesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devotional_goals?: boolean | DevotionalGoalDefaultArgs<ExtArgs>
  export type devotional_daily_task_templatesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devotional_goals?: boolean | DevotionalGoalDefaultArgs<ExtArgs>
    name: "devotional_daily_task_templates"
    objects: {
      devotional_goals: Prisma.$DevotionalGoalPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      devotional_id: string
      title: string
      description: string | null
      is_recurring: boolean | null
      created_at: Date | null
    composites: {}
    Omit<devotional_daily_task_templatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Devotional_daily_task_templatesCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['devotional_daily_task_templates'], meta: { name: 'devotional_daily_task_templates' } }
     *   where: {
    findUnique<T extends devotional_daily_task_templatesFindUniqueArgs>(args: SelectSubset<T, devotional_daily_task_templatesFindUniqueArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends devotional_daily_task_templatesFindUniqueOrThrowArgs>(args: SelectSubset<T, devotional_daily_task_templatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends devotional_daily_task_templatesFindFirstArgs>(args?: SelectSubset<T, devotional_daily_task_templatesFindFirstArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends devotional_daily_task_templatesFindFirstOrThrowArgs>(args?: SelectSubset<T, devotional_daily_task_templatesFindFirstOrThrowArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {devotional_daily_task_templatesFindManyArgs} args - Arguments to filter and select certain fields only.
     * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.findMany()
     * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.findMany({ take: 10 })
     * const devotional_daily_task_templatesWithIdOnly = await prisma.devotional_daily_task_templates.findMany({ select: { id: true } })
    findMany<T extends devotional_daily_task_templatesFindManyArgs>(args?: SelectSubset<T, devotional_daily_task_templatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends devotional_daily_task_templatesCreateArgs>(args: SelectSubset<T, devotional_daily_task_templatesCreateArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many Devotional_daily_task_templates.
     * @param {devotional_daily_task_templatesCreateManyArgs} args - Arguments to create many Devotional_daily_task_templates.
     * // Create many Devotional_daily_task_templates
     * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.createMany({
     *   data: [
    createMany<T extends devotional_daily_task_templatesCreateManyArgs>(args?: SelectSubset<T, devotional_daily_task_templatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many Devotional_daily_task_templates and returns the data saved in the database.
     * @param {devotional_daily_task_templatesCreateManyAndReturnArgs} args - Arguments to create many Devotional_daily_task_templates.
     * // Create many Devotional_daily_task_templates
     * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.createManyAndReturn({
     *   data: [
     * // Create many Devotional_daily_task_templates and only return the `id`
     * const devotional_daily_task_templatesWithIdOnly = await prisma.devotional_daily_task_templates.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends devotional_daily_task_templatesCreateManyAndReturnArgs>(args?: SelectSubset<T, devotional_daily_task_templatesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends devotional_daily_task_templatesDeleteArgs>(args: SelectSubset<T, devotional_daily_task_templatesDeleteArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends devotional_daily_task_templatesUpdateArgs>(args: SelectSubset<T, devotional_daily_task_templatesUpdateArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {devotional_daily_task_templatesDeleteManyArgs} args - Arguments to filter Devotional_daily_task_templates to delete.
     * const { count } = await prisma.devotional_daily_task_templates.deleteMany({
     *   where: {
    deleteMany<T extends devotional_daily_task_templatesDeleteManyArgs>(args?: SelectSubset<T, devotional_daily_task_templatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {devotional_daily_task_templatesUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many Devotional_daily_task_templates
     * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends devotional_daily_task_templatesUpdateManyArgs>(args: SelectSubset<T, devotional_daily_task_templatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {devotional_daily_task_templatesUpdateManyAndReturnArgs} args - Arguments to update many Devotional_daily_task_templates.
     * // Update many Devotional_daily_task_templates
     * const devotional_daily_task_templates = await prisma.devotional_daily_task_templates.updateManyAndReturn({
     *   where: {
     *   data: [
     * const devotional_daily_task_templatesWithIdOnly = await prisma.devotional_daily_task_templates.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends devotional_daily_task_templatesUpdateManyAndReturnArgs>(args: SelectSubset<T, devotional_daily_task_templatesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends devotional_daily_task_templatesUpsertArgs>(args: SelectSubset<T, devotional_daily_task_templatesUpsertArgs<ExtArgs>>): Prisma__devotional_daily_task_templatesClient<$Result.GetResult<Prisma.$devotional_daily_task_templatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, devotional_daily_task_templatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], Devotional_daily_task_templatesCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends Devotional_daily_task_templatesAggregateArgs>(args: Subset<T, Devotional_daily_task_templatesAggregateArgs>): Prisma.PrismaPromise<GetDevotional_daily_task_templatesAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: devotional_daily_task_templatesGroupByArgs['orderBy'] }
        : { orderBy?: devotional_daily_task_templatesGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, devotional_daily_task_templatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevotional_daily_task_templatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: devotional_daily_task_templatesFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    devotional_goals<T extends DevotionalGoalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DevotionalGoalDefaultArgs<ExtArgs>>): Prisma__DevotionalGoalClient<$Result.GetResult<Prisma.$DevotionalGoalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"devotional_daily_task_templates", 'String'>
    readonly devotional_id: FieldRef<"devotional_daily_task_templates", 'String'>
    readonly title: FieldRef<"devotional_daily_task_templates", 'String'>
    readonly description: FieldRef<"devotional_daily_task_templates", 'String'>
    readonly is_recurring: FieldRef<"devotional_daily_task_templates", 'Boolean'>
    readonly created_at: FieldRef<"devotional_daily_task_templates", 'DateTime'>
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where: devotional_daily_task_templatesWhereUniqueInput
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where: devotional_daily_task_templatesWhereUniqueInput
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where?: devotional_daily_task_templatesWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: devotional_daily_task_templatesOrderByWithRelationInput | devotional_daily_task_templatesOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: devotional_daily_task_templatesWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: Devotional_daily_task_templatesScalarFieldEnum | Devotional_daily_task_templatesScalarFieldEnum[]
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where?: devotional_daily_task_templatesWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: devotional_daily_task_templatesOrderByWithRelationInput | devotional_daily_task_templatesOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: devotional_daily_task_templatesWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: Devotional_daily_task_templatesScalarFieldEnum | Devotional_daily_task_templatesScalarFieldEnum[]
   * devotional_daily_task_templates findMany
  export type devotional_daily_task_templatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where?: devotional_daily_task_templatesWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: devotional_daily_task_templatesOrderByWithRelationInput | devotional_daily_task_templatesOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: devotional_daily_task_templatesWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: Devotional_daily_task_templatesScalarFieldEnum | Devotional_daily_task_templatesScalarFieldEnum[]
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    data: XOR<devotional_daily_task_templatesCreateInput, devotional_daily_task_templatesUncheckedCreateInput>
   * devotional_daily_task_templates createMany
  export type devotional_daily_task_templatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many devotional_daily_task_templates.
    data: devotional_daily_task_templatesCreateManyInput | devotional_daily_task_templatesCreateManyInput[]
    skipDuplicates?: boolean
   * devotional_daily_task_templates createManyAndReturn
  export type devotional_daily_task_templatesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: devotional_daily_task_templatesSelectCreateManyAndReturn<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
     * The data used to create many devotional_daily_task_templates.
    data: devotional_daily_task_templatesCreateManyInput | devotional_daily_task_templatesCreateManyInput[]
    skipDuplicates?: boolean
    include?: devotional_daily_task_templatesIncludeCreateManyAndReturn<ExtArgs> | null
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    data: XOR<devotional_daily_task_templatesUpdateInput, devotional_daily_task_templatesUncheckedUpdateInput>
    where: devotional_daily_task_templatesWhereUniqueInput
   * devotional_daily_task_templates updateMany
  export type devotional_daily_task_templatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<devotional_daily_task_templatesUpdateManyMutationInput, devotional_daily_task_templatesUncheckedUpdateManyInput>
    where?: devotional_daily_task_templatesWhereInput
     * Limit how many devotional_daily_task_templates to update.
    limit?: number
   * devotional_daily_task_templates updateManyAndReturn
  export type devotional_daily_task_templatesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: devotional_daily_task_templatesSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    data: XOR<devotional_daily_task_templatesUpdateManyMutationInput, devotional_daily_task_templatesUncheckedUpdateManyInput>
    where?: devotional_daily_task_templatesWhereInput
     * Limit how many devotional_daily_task_templates to update.
    limit?: number
    include?: devotional_daily_task_templatesIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where: devotional_daily_task_templatesWhereUniqueInput
    create: XOR<devotional_daily_task_templatesCreateInput, devotional_daily_task_templatesUncheckedCreateInput>
    update: XOR<devotional_daily_task_templatesUpdateInput, devotional_daily_task_templatesUncheckedUpdateInput>
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    where: devotional_daily_task_templatesWhereUniqueInput
   * devotional_daily_task_templates deleteMany
  export type devotional_daily_task_templatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: devotional_daily_task_templatesWhereInput
     * Limit how many devotional_daily_task_templates to delete.
    limit?: number
    select?: devotional_daily_task_templatesSelect<ExtArgs> | null
    omit?: devotional_daily_task_templatesOmit<ExtArgs> | null
    include?: devotional_daily_task_templatesInclude<ExtArgs> | null
    _count: Good_newsCountAggregateOutputType | null
    _min: Good_newsMinAggregateOutputType | null
    _max: Good_newsMaxAggregateOutputType | null
    id: string | null
    title: string | null
    content: string | null
    image_url: string | null
    date: Date | null
    created_at: Date | null
    updated_at: Date | null
    id: string | null
    title: string | null
    content: string | null
    image_url: string | null
    date: Date | null
    created_at: Date | null
    updated_at: Date | null
    id: number
    title: number
    content: number
    image_url: number
    date: number
    created_at: number
    updated_at: number
    _all: number
    id?: true
    title?: true
    content?: true
    image_url?: true
    date?: true
    created_at?: true
    updated_at?: true
    id?: true
    title?: true
    content?: true
    image_url?: true
    date?: true
    created_at?: true
    updated_at?: true
    id?: true
    title?: true
    content?: true
    image_url?: true
    date?: true
    created_at?: true
    updated_at?: true
    _all?: true
    where?: good_newsWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: good_newsOrderByWithRelationInput | good_newsOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: good_newsWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | Good_newsCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: Good_newsMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: Good_newsMaxAggregateInputType
        [P in keyof T & keyof AggregateGood_news]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateGood_news[P]>
      : GetScalarType<T[P], AggregateGood_news[P]>
    where?: good_newsWhereInput
    orderBy?: good_newsOrderByWithAggregationInput | good_newsOrderByWithAggregationInput[]
    by: Good_newsScalarFieldEnum[] | Good_newsScalarFieldEnum
    having?: good_newsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Good_newsCountAggregateInputType | true
    _min?: Good_newsMinAggregateInputType
    _max?: Good_newsMaxAggregateInputType
    id: string
    title: string
    content: string
    image_url: string | null
    date: Date
    created_at: Date | null
    updated_at: Date | null
    _count: Good_newsCountAggregateOutputType | null
    _min: Good_newsMinAggregateOutputType | null
    _max: Good_newsMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof Good_newsGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], Good_newsGroupByOutputType[P]>
            : GetScalarType<T[P], Good_newsGroupByOutputType[P]>
    id?: boolean
    title?: boolean
    content?: boolean
    image_url?: boolean
    date?: boolean
    created_at?: boolean
    updated_at?: boolean
  export type good_newsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    image_url?: boolean
    date?: boolean
    created_at?: boolean
    updated_at?: boolean
  export type good_newsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    image_url?: boolean
    date?: boolean
    created_at?: boolean
    updated_at?: boolean
    id?: boolean
    title?: boolean
    content?: boolean
    image_url?: boolean
    date?: boolean
    created_at?: boolean
    updated_at?: boolean
    name: "good_news"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      content: string
      image_url: string | null
      date: Date
      created_at: Date | null
      updated_at: Date | null
    composites: {}
    Omit<good_newsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Good_newsCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['good_news'], meta: { name: 'good_news' } }
     *   where: {
    findUnique<T extends good_newsFindUniqueArgs>(args: SelectSubset<T, good_newsFindUniqueArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends good_newsFindUniqueOrThrowArgs>(args: SelectSubset<T, good_newsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends good_newsFindFirstArgs>(args?: SelectSubset<T, good_newsFindFirstArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends good_newsFindFirstOrThrowArgs>(args?: SelectSubset<T, good_newsFindFirstOrThrowArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {good_newsFindManyArgs} args - Arguments to filter and select certain fields only.
     * const good_news = await prisma.good_news.findMany()
     * const good_news = await prisma.good_news.findMany({ take: 10 })
     * const good_newsWithIdOnly = await prisma.good_news.findMany({ select: { id: true } })
    findMany<T extends good_newsFindManyArgs>(args?: SelectSubset<T, good_newsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends good_newsCreateArgs>(args: SelectSubset<T, good_newsCreateArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many Good_news.
     * @param {good_newsCreateManyArgs} args - Arguments to create many Good_news.
     * // Create many Good_news
     * const good_news = await prisma.good_news.createMany({
     *   data: [
    createMany<T extends good_newsCreateManyArgs>(args?: SelectSubset<T, good_newsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many Good_news and returns the data saved in the database.
     * @param {good_newsCreateManyAndReturnArgs} args - Arguments to create many Good_news.
     * // Create many Good_news
     * const good_news = await prisma.good_news.createManyAndReturn({
     *   data: [
     * // Create many Good_news and only return the `id`
     * const good_newsWithIdOnly = await prisma.good_news.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends good_newsCreateManyAndReturnArgs>(args?: SelectSubset<T, good_newsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends good_newsDeleteArgs>(args: SelectSubset<T, good_newsDeleteArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends good_newsUpdateArgs>(args: SelectSubset<T, good_newsUpdateArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {good_newsDeleteManyArgs} args - Arguments to filter Good_news to delete.
     * const { count } = await prisma.good_news.deleteMany({
     *   where: {
    deleteMany<T extends good_newsDeleteManyArgs>(args?: SelectSubset<T, good_newsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {good_newsUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many Good_news
     * const good_news = await prisma.good_news.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends good_newsUpdateManyArgs>(args: SelectSubset<T, good_newsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {good_newsUpdateManyAndReturnArgs} args - Arguments to update many Good_news.
     * // Update many Good_news
     * const good_news = await prisma.good_news.updateManyAndReturn({
     *   where: {
     *   data: [
     * const good_newsWithIdOnly = await prisma.good_news.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends good_newsUpdateManyAndReturnArgs>(args: SelectSubset<T, good_newsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends good_newsUpsertArgs>(args: SelectSubset<T, good_newsUpsertArgs<ExtArgs>>): Prisma__good_newsClient<$Result.GetResult<Prisma.$good_newsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, good_newsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], Good_newsCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends Good_newsAggregateArgs>(args: Subset<T, Good_newsAggregateArgs>): Prisma.PrismaPromise<GetGood_newsAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: good_newsGroupByArgs['orderBy'] }
        : { orderBy?: good_newsGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, good_newsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGood_newsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: good_newsFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"good_news", 'String'>
    readonly title: FieldRef<"good_news", 'String'>
    readonly content: FieldRef<"good_news", 'String'>
    readonly image_url: FieldRef<"good_news", 'String'>
    readonly date: FieldRef<"good_news", 'DateTime'>
    readonly created_at: FieldRef<"good_news", 'DateTime'>
    readonly updated_at: FieldRef<"good_news", 'DateTime'>
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where: good_newsWhereUniqueInput
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where: good_newsWhereUniqueInput
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where?: good_newsWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: good_newsOrderByWithRelationInput | good_newsOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: good_newsWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: Good_newsScalarFieldEnum | Good_newsScalarFieldEnum[]
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where?: good_newsWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: good_newsOrderByWithRelationInput | good_newsOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: good_newsWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: Good_newsScalarFieldEnum | Good_newsScalarFieldEnum[]
   * good_news findMany
  export type good_newsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where?: good_newsWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: good_newsOrderByWithRelationInput | good_newsOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: good_newsWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: Good_newsScalarFieldEnum | Good_newsScalarFieldEnum[]
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    data: XOR<good_newsCreateInput, good_newsUncheckedCreateInput>
   * good_news createMany
  export type good_newsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many good_news.
    data: good_newsCreateManyInput | good_newsCreateManyInput[]
    skipDuplicates?: boolean
   * good_news createManyAndReturn
  export type good_newsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: good_newsSelectCreateManyAndReturn<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
     * The data used to create many good_news.
    data: good_newsCreateManyInput | good_newsCreateManyInput[]
    skipDuplicates?: boolean
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    data: XOR<good_newsUpdateInput, good_newsUncheckedUpdateInput>
    where: good_newsWhereUniqueInput
   * good_news updateMany
  export type good_newsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<good_newsUpdateManyMutationInput, good_newsUncheckedUpdateManyInput>
    where?: good_newsWhereInput
     * Limit how many good_news to update.
    limit?: number
   * good_news updateManyAndReturn
  export type good_newsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: good_newsSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    data: XOR<good_newsUpdateManyMutationInput, good_newsUncheckedUpdateManyInput>
    where?: good_newsWhereInput
     * Limit how many good_news to update.
    limit?: number
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where: good_newsWhereUniqueInput
    create: XOR<good_newsCreateInput, good_newsUncheckedCreateInput>
    update: XOR<good_newsUpdateInput, good_newsUncheckedUpdateInput>
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    where: good_newsWhereUniqueInput
   * good_news deleteMany
  export type good_newsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: good_newsWhereInput
     * Limit how many good_news to delete.
    limit?: number
    select?: good_newsSelect<ExtArgs> | null
    omit?: good_newsOmit<ExtArgs> | null
    _count: AiPlanCountAggregateOutputType | null
    _min: AiPlanMinAggregateOutputType | null
    _max: AiPlanMaxAggregateOutputType | null
    id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    id: number
    user_id: number
    title: number
    description: number
    created_at: number
    _all: number
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    _all?: true
    where?: AiPlanWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanOrderByWithRelationInput | AiPlanOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | AiPlanCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: AiPlanMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: AiPlanMaxAggregateInputType
        [P in keyof T & keyof AggregateAiPlan]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateAiPlan[P]>
      : GetScalarType<T[P], AggregateAiPlan[P]>
    where?: AiPlanWhereInput
    orderBy?: AiPlanOrderByWithAggregationInput | AiPlanOrderByWithAggregationInput[]
    by: AiPlanScalarFieldEnum[] | AiPlanScalarFieldEnum
    having?: AiPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AiPlanCountAggregateInputType | true
    _min?: AiPlanMinAggregateInputType
    _max?: AiPlanMaxAggregateInputType
    id: string
    user_id: string
    title: string
    description: string | null
    created_at: Date | null
    _count: AiPlanCountAggregateOutputType | null
    _min: AiPlanMinAggregateOutputType | null
    _max: AiPlanMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof AiPlanGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], AiPlanGroupByOutputType[P]>
            : GetScalarType<T[P], AiPlanGroupByOutputType[P]>
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    dailyTasks?: boolean | AiPlan$dailyTasksArgs<ExtArgs>
    tasks?: boolean | AiPlan$tasksArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | AiPlanCountOutputTypeDefaultArgs<ExtArgs>
  export type AiPlanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type AiPlanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    dailyTasks?: boolean | AiPlan$dailyTasksArgs<ExtArgs>
    tasks?: boolean | AiPlan$tasksArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | AiPlanCountOutputTypeDefaultArgs<ExtArgs>
  export type AiPlanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type AiPlanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "AiPlan"
    objects: {
      dailyTasks: Prisma.$AiPlanDailyTaskPayload<ExtArgs>[]
      tasks: Prisma.$AiPlanTaskPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      title: string
      description: string | null
      created_at: Date | null
    composites: {}
    Omit<AiPlanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AiPlanCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AiPlan'], meta: { name: 'AiPlan' } }
     *   where: {
    findUnique<T extends AiPlanFindUniqueArgs>(args: SelectSubset<T, AiPlanFindUniqueArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends AiPlanFindUniqueOrThrowArgs>(args: SelectSubset<T, AiPlanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends AiPlanFindFirstArgs>(args?: SelectSubset<T, AiPlanFindFirstArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends AiPlanFindFirstOrThrowArgs>(args?: SelectSubset<T, AiPlanFindFirstOrThrowArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiPlanFindManyArgs} args - Arguments to filter and select certain fields only.
     * const aiPlans = await prisma.aiPlan.findMany()
     * const aiPlans = await prisma.aiPlan.findMany({ take: 10 })
     * const aiPlanWithIdOnly = await prisma.aiPlan.findMany({ select: { id: true } })
    findMany<T extends AiPlanFindManyArgs>(args?: SelectSubset<T, AiPlanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends AiPlanCreateArgs>(args: SelectSubset<T, AiPlanCreateArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many AiPlans.
     * @param {AiPlanCreateManyArgs} args - Arguments to create many AiPlans.
     * // Create many AiPlans
     * const aiPlan = await prisma.aiPlan.createMany({
     *   data: [
    createMany<T extends AiPlanCreateManyArgs>(args?: SelectSubset<T, AiPlanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many AiPlans and returns the data saved in the database.
     * @param {AiPlanCreateManyAndReturnArgs} args - Arguments to create many AiPlans.
     * // Create many AiPlans
     * const aiPlan = await prisma.aiPlan.createManyAndReturn({
     *   data: [
     * // Create many AiPlans and only return the `id`
     * const aiPlanWithIdOnly = await prisma.aiPlan.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends AiPlanCreateManyAndReturnArgs>(args?: SelectSubset<T, AiPlanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends AiPlanDeleteArgs>(args: SelectSubset<T, AiPlanDeleteArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends AiPlanUpdateArgs>(args: SelectSubset<T, AiPlanUpdateArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {AiPlanDeleteManyArgs} args - Arguments to filter AiPlans to delete.
     * const { count } = await prisma.aiPlan.deleteMany({
     *   where: {
    deleteMany<T extends AiPlanDeleteManyArgs>(args?: SelectSubset<T, AiPlanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many AiPlans
     * const aiPlan = await prisma.aiPlan.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends AiPlanUpdateManyArgs>(args: SelectSubset<T, AiPlanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {AiPlanUpdateManyAndReturnArgs} args - Arguments to update many AiPlans.
     * // Update many AiPlans
     * const aiPlan = await prisma.aiPlan.updateManyAndReturn({
     *   where: {
     *   data: [
     * const aiPlanWithIdOnly = await prisma.aiPlan.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends AiPlanUpdateManyAndReturnArgs>(args: SelectSubset<T, AiPlanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends AiPlanUpsertArgs>(args: SelectSubset<T, AiPlanUpsertArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, AiPlanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], AiPlanCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends AiPlanAggregateArgs>(args: Subset<T, AiPlanAggregateArgs>): Prisma.PrismaPromise<GetAiPlanAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: AiPlanGroupByArgs['orderBy'] }
        : { orderBy?: AiPlanGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, AiPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAiPlanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: AiPlanFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dailyTasks<T extends AiPlan$dailyTasksArgs<ExtArgs> = {}>(args?: Subset<T, AiPlan$dailyTasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends AiPlan$tasksArgs<ExtArgs> = {}>(args?: Subset<T, AiPlan$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"AiPlan", 'String'>
    readonly user_id: FieldRef<"AiPlan", 'String'>
    readonly title: FieldRef<"AiPlan", 'String'>
    readonly description: FieldRef<"AiPlan", 'String'>
    readonly created_at: FieldRef<"AiPlan", 'DateTime'>
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where: AiPlanWhereUniqueInput
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where: AiPlanWhereUniqueInput
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where?: AiPlanWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanOrderByWithRelationInput | AiPlanOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: AiPlanScalarFieldEnum | AiPlanScalarFieldEnum[]
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where?: AiPlanWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanOrderByWithRelationInput | AiPlanOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: AiPlanScalarFieldEnum | AiPlanScalarFieldEnum[]
   * AiPlan findMany
  export type AiPlanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where?: AiPlanWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanOrderByWithRelationInput | AiPlanOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: AiPlanScalarFieldEnum | AiPlanScalarFieldEnum[]
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    data: XOR<AiPlanCreateInput, AiPlanUncheckedCreateInput>
   * AiPlan createMany
  export type AiPlanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many AiPlans.
    data: AiPlanCreateManyInput | AiPlanCreateManyInput[]
    skipDuplicates?: boolean
   * AiPlan createManyAndReturn
  export type AiPlanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanSelectCreateManyAndReturn<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
     * The data used to create many AiPlans.
    data: AiPlanCreateManyInput | AiPlanCreateManyInput[]
    skipDuplicates?: boolean
    include?: AiPlanIncludeCreateManyAndReturn<ExtArgs> | null
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    data: XOR<AiPlanUpdateInput, AiPlanUncheckedUpdateInput>
    where: AiPlanWhereUniqueInput
   * AiPlan updateMany
  export type AiPlanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<AiPlanUpdateManyMutationInput, AiPlanUncheckedUpdateManyInput>
    where?: AiPlanWhereInput
     * Limit how many AiPlans to update.
    limit?: number
   * AiPlan updateManyAndReturn
  export type AiPlanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    data: XOR<AiPlanUpdateManyMutationInput, AiPlanUncheckedUpdateManyInput>
    where?: AiPlanWhereInput
     * Limit how many AiPlans to update.
    limit?: number
    include?: AiPlanIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where: AiPlanWhereUniqueInput
    create: XOR<AiPlanCreateInput, AiPlanUncheckedCreateInput>
    update: XOR<AiPlanUpdateInput, AiPlanUncheckedUpdateInput>
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    where: AiPlanWhereUniqueInput
   * AiPlan deleteMany
  export type AiPlanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AiPlanWhereInput
     * Limit how many AiPlans to delete.
    limit?: number
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where?: AiPlanDailyTaskWhereInput
    orderBy?: AiPlanDailyTaskOrderByWithRelationInput | AiPlanDailyTaskOrderByWithRelationInput[]
    cursor?: AiPlanDailyTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AiPlanDailyTaskScalarFieldEnum | AiPlanDailyTaskScalarFieldEnum[]
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where?: AiPlanTaskWhereInput
    orderBy?: AiPlanTaskOrderByWithRelationInput | AiPlanTaskOrderByWithRelationInput[]
    cursor?: AiPlanTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AiPlanTaskScalarFieldEnum | AiPlanTaskScalarFieldEnum[]
    select?: AiPlanSelect<ExtArgs> | null
    omit?: AiPlanOmit<ExtArgs> | null
    include?: AiPlanInclude<ExtArgs> | null
    _count: AiPlanTaskCountAggregateOutputType | null
    _avg: AiPlanTaskAvgAggregateOutputType | null
    _sum: AiPlanTaskSumAggregateOutputType | null
    _min: AiPlanTaskMinAggregateOutputType | null
    _max: AiPlanTaskMaxAggregateOutputType | null
    day_number: number | null
    day_number: number | null
    id: string | null
    ai_plan_id: string | null
    day_number: number | null
    task_text: string | null
    created_at: Date | null
    id: string | null
    ai_plan_id: string | null
    day_number: number | null
    task_text: string | null
    created_at: Date | null
    id: number
    ai_plan_id: number
    day_number: number
    task_text: number
    created_at: number
    _all: number
    day_number?: true
    day_number?: true
    id?: true
    ai_plan_id?: true
    day_number?: true
    task_text?: true
    created_at?: true
    id?: true
    ai_plan_id?: true
    day_number?: true
    task_text?: true
    created_at?: true
    id?: true
    ai_plan_id?: true
    day_number?: true
    task_text?: true
    created_at?: true
    _all?: true
    where?: AiPlanTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanTaskOrderByWithRelationInput | AiPlanTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | AiPlanTaskCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _avg?: AiPlanTaskAvgAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _sum?: AiPlanTaskSumAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: AiPlanTaskMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: AiPlanTaskMaxAggregateInputType
        [P in keyof T & keyof AggregateAiPlanTask]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateAiPlanTask[P]>
      : GetScalarType<T[P], AggregateAiPlanTask[P]>
    where?: AiPlanTaskWhereInput
    orderBy?: AiPlanTaskOrderByWithAggregationInput | AiPlanTaskOrderByWithAggregationInput[]
    by: AiPlanTaskScalarFieldEnum[] | AiPlanTaskScalarFieldEnum
    having?: AiPlanTaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AiPlanTaskCountAggregateInputType | true
    _avg?: AiPlanTaskAvgAggregateInputType
    _sum?: AiPlanTaskSumAggregateInputType
    _min?: AiPlanTaskMinAggregateInputType
    _max?: AiPlanTaskMaxAggregateInputType
    id: string
    ai_plan_id: string
    day_number: number
    task_text: string
    created_at: Date | null
    _count: AiPlanTaskCountAggregateOutputType | null
    _avg: AiPlanTaskAvgAggregateOutputType | null
    _sum: AiPlanTaskSumAggregateOutputType | null
    _min: AiPlanTaskMinAggregateOutputType | null
    _max: AiPlanTaskMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof AiPlanTaskGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], AiPlanTaskGroupByOutputType[P]>
            : GetScalarType<T[P], AiPlanTaskGroupByOutputType[P]>
    id?: boolean
    ai_plan_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    ai_plan?: boolean | AiPlanDefaultArgs<ExtArgs>
    progress?: boolean | AiPlanTask$progressArgs<ExtArgs>
    _count?: boolean | AiPlanTaskCountOutputTypeDefaultArgs<ExtArgs>
  export type AiPlanTaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ai_plan_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    ai_plan?: boolean | AiPlanDefaultArgs<ExtArgs>
  export type AiPlanTaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ai_plan_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    ai_plan?: boolean | AiPlanDefaultArgs<ExtArgs>
    id?: boolean
    ai_plan_id?: boolean
    day_number?: boolean
    task_text?: boolean
    created_at?: boolean
    ai_plan?: boolean | AiPlanDefaultArgs<ExtArgs>
    progress?: boolean | AiPlanTask$progressArgs<ExtArgs>
    _count?: boolean | AiPlanTaskCountOutputTypeDefaultArgs<ExtArgs>
  export type AiPlanTaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ai_plan?: boolean | AiPlanDefaultArgs<ExtArgs>
  export type AiPlanTaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ai_plan?: boolean | AiPlanDefaultArgs<ExtArgs>
    name: "AiPlanTask"
    objects: {
      ai_plan: Prisma.$AiPlanPayload<ExtArgs>
      progress: Prisma.$UserAiTaskProgressPayload<ExtArgs>[]
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ai_plan_id: string
      day_number: number
      task_text: string
      created_at: Date | null
    composites: {}
    Omit<AiPlanTaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AiPlanTaskCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AiPlanTask'], meta: { name: 'AiPlanTask' } }
     *   where: {
    findUnique<T extends AiPlanTaskFindUniqueArgs>(args: SelectSubset<T, AiPlanTaskFindUniqueArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends AiPlanTaskFindUniqueOrThrowArgs>(args: SelectSubset<T, AiPlanTaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends AiPlanTaskFindFirstArgs>(args?: SelectSubset<T, AiPlanTaskFindFirstArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends AiPlanTaskFindFirstOrThrowArgs>(args?: SelectSubset<T, AiPlanTaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiPlanTaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * const aiPlanTasks = await prisma.aiPlanTask.findMany()
     * const aiPlanTasks = await prisma.aiPlanTask.findMany({ take: 10 })
     * const aiPlanTaskWithIdOnly = await prisma.aiPlanTask.findMany({ select: { id: true } })
    findMany<T extends AiPlanTaskFindManyArgs>(args?: SelectSubset<T, AiPlanTaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends AiPlanTaskCreateArgs>(args: SelectSubset<T, AiPlanTaskCreateArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many AiPlanTasks.
     * @param {AiPlanTaskCreateManyArgs} args - Arguments to create many AiPlanTasks.
     * // Create many AiPlanTasks
     * const aiPlanTask = await prisma.aiPlanTask.createMany({
     *   data: [
    createMany<T extends AiPlanTaskCreateManyArgs>(args?: SelectSubset<T, AiPlanTaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many AiPlanTasks and returns the data saved in the database.
     * @param {AiPlanTaskCreateManyAndReturnArgs} args - Arguments to create many AiPlanTasks.
     * // Create many AiPlanTasks
     * const aiPlanTask = await prisma.aiPlanTask.createManyAndReturn({
     *   data: [
     * // Create many AiPlanTasks and only return the `id`
     * const aiPlanTaskWithIdOnly = await prisma.aiPlanTask.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends AiPlanTaskCreateManyAndReturnArgs>(args?: SelectSubset<T, AiPlanTaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends AiPlanTaskDeleteArgs>(args: SelectSubset<T, AiPlanTaskDeleteArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends AiPlanTaskUpdateArgs>(args: SelectSubset<T, AiPlanTaskUpdateArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {AiPlanTaskDeleteManyArgs} args - Arguments to filter AiPlanTasks to delete.
     * const { count } = await prisma.aiPlanTask.deleteMany({
     *   where: {
    deleteMany<T extends AiPlanTaskDeleteManyArgs>(args?: SelectSubset<T, AiPlanTaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiPlanTaskUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many AiPlanTasks
     * const aiPlanTask = await prisma.aiPlanTask.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends AiPlanTaskUpdateManyArgs>(args: SelectSubset<T, AiPlanTaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {AiPlanTaskUpdateManyAndReturnArgs} args - Arguments to update many AiPlanTasks.
     * // Update many AiPlanTasks
     * const aiPlanTask = await prisma.aiPlanTask.updateManyAndReturn({
     *   where: {
     *   data: [
     * const aiPlanTaskWithIdOnly = await prisma.aiPlanTask.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends AiPlanTaskUpdateManyAndReturnArgs>(args: SelectSubset<T, AiPlanTaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends AiPlanTaskUpsertArgs>(args: SelectSubset<T, AiPlanTaskUpsertArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, AiPlanTaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], AiPlanTaskCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends AiPlanTaskAggregateArgs>(args: Subset<T, AiPlanTaskAggregateArgs>): Prisma.PrismaPromise<GetAiPlanTaskAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: AiPlanTaskGroupByArgs['orderBy'] }
        : { orderBy?: AiPlanTaskGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, AiPlanTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAiPlanTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: AiPlanTaskFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ai_plan<T extends AiPlanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AiPlanDefaultArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    progress<T extends AiPlanTask$progressArgs<ExtArgs> = {}>(args?: Subset<T, AiPlanTask$progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"AiPlanTask", 'String'>
    readonly ai_plan_id: FieldRef<"AiPlanTask", 'String'>
    readonly day_number: FieldRef<"AiPlanTask", 'Int'>
    readonly task_text: FieldRef<"AiPlanTask", 'String'>
    readonly created_at: FieldRef<"AiPlanTask", 'DateTime'>
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where: AiPlanTaskWhereUniqueInput
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where: AiPlanTaskWhereUniqueInput
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where?: AiPlanTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanTaskOrderByWithRelationInput | AiPlanTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: AiPlanTaskScalarFieldEnum | AiPlanTaskScalarFieldEnum[]
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where?: AiPlanTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanTaskOrderByWithRelationInput | AiPlanTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: AiPlanTaskScalarFieldEnum | AiPlanTaskScalarFieldEnum[]
   * AiPlanTask findMany
  export type AiPlanTaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where?: AiPlanTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanTaskOrderByWithRelationInput | AiPlanTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: AiPlanTaskScalarFieldEnum | AiPlanTaskScalarFieldEnum[]
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    data: XOR<AiPlanTaskCreateInput, AiPlanTaskUncheckedCreateInput>
   * AiPlanTask createMany
  export type AiPlanTaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many AiPlanTasks.
    data: AiPlanTaskCreateManyInput | AiPlanTaskCreateManyInput[]
    skipDuplicates?: boolean
   * AiPlanTask createManyAndReturn
  export type AiPlanTaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanTaskSelectCreateManyAndReturn<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
     * The data used to create many AiPlanTasks.
    data: AiPlanTaskCreateManyInput | AiPlanTaskCreateManyInput[]
    skipDuplicates?: boolean
    include?: AiPlanTaskIncludeCreateManyAndReturn<ExtArgs> | null
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    data: XOR<AiPlanTaskUpdateInput, AiPlanTaskUncheckedUpdateInput>
    where: AiPlanTaskWhereUniqueInput
   * AiPlanTask updateMany
  export type AiPlanTaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<AiPlanTaskUpdateManyMutationInput, AiPlanTaskUncheckedUpdateManyInput>
    where?: AiPlanTaskWhereInput
     * Limit how many AiPlanTasks to update.
    limit?: number
   * AiPlanTask updateManyAndReturn
  export type AiPlanTaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanTaskSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    data: XOR<AiPlanTaskUpdateManyMutationInput, AiPlanTaskUncheckedUpdateManyInput>
    where?: AiPlanTaskWhereInput
     * Limit how many AiPlanTasks to update.
    limit?: number
    include?: AiPlanTaskIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where: AiPlanTaskWhereUniqueInput
    create: XOR<AiPlanTaskCreateInput, AiPlanTaskUncheckedCreateInput>
    update: XOR<AiPlanTaskUpdateInput, AiPlanTaskUncheckedUpdateInput>
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    where: AiPlanTaskWhereUniqueInput
   * AiPlanTask deleteMany
  export type AiPlanTaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AiPlanTaskWhereInput
     * Limit how many AiPlanTasks to delete.
    limit?: number
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where?: UserAiTaskProgressWhereInput
    orderBy?: UserAiTaskProgressOrderByWithRelationInput | UserAiTaskProgressOrderByWithRelationInput[]
    cursor?: UserAiTaskProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserAiTaskProgressScalarFieldEnum | UserAiTaskProgressScalarFieldEnum[]
    select?: AiPlanTaskSelect<ExtArgs> | null
    omit?: AiPlanTaskOmit<ExtArgs> | null
    include?: AiPlanTaskInclude<ExtArgs> | null
    _count: UserAiTaskProgressCountAggregateOutputType | null
    _min: UserAiTaskProgressMinAggregateOutputType | null
    _max: UserAiTaskProgressMaxAggregateOutputType | null
    id: string | null
    user_id: string | null
    ai_plan_task_id: string | null
    completed_at: Date | null
    id: string | null
    user_id: string | null
    ai_plan_task_id: string | null
    completed_at: Date | null
    id: number
    user_id: number
    ai_plan_task_id: number
    completed_at: number
    _all: number
    id?: true
    user_id?: true
    ai_plan_task_id?: true
    completed_at?: true
    id?: true
    user_id?: true
    ai_plan_task_id?: true
    completed_at?: true
    id?: true
    user_id?: true
    ai_plan_task_id?: true
    completed_at?: true
    _all?: true
    where?: UserAiTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserAiTaskProgressOrderByWithRelationInput | UserAiTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserAiTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | UserAiTaskProgressCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: UserAiTaskProgressMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: UserAiTaskProgressMaxAggregateInputType
        [P in keyof T & keyof AggregateUserAiTaskProgress]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateUserAiTaskProgress[P]>
      : GetScalarType<T[P], AggregateUserAiTaskProgress[P]>
    where?: UserAiTaskProgressWhereInput
    orderBy?: UserAiTaskProgressOrderByWithAggregationInput | UserAiTaskProgressOrderByWithAggregationInput[]
    by: UserAiTaskProgressScalarFieldEnum[] | UserAiTaskProgressScalarFieldEnum
    having?: UserAiTaskProgressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserAiTaskProgressCountAggregateInputType | true
    _min?: UserAiTaskProgressMinAggregateInputType
    _max?: UserAiTaskProgressMaxAggregateInputType
    id: string
    user_id: string
    ai_plan_task_id: string
    completed_at: Date | null
    _count: UserAiTaskProgressCountAggregateOutputType | null
    _min: UserAiTaskProgressMinAggregateOutputType | null
    _max: UserAiTaskProgressMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof UserAiTaskProgressGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], UserAiTaskProgressGroupByOutputType[P]>
            : GetScalarType<T[P], UserAiTaskProgressGroupByOutputType[P]>
    id?: boolean
    user_id?: boolean
    ai_plan_task_id?: boolean
    completed_at?: boolean
    ai_plan_task?: boolean | AiPlanTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type UserAiTaskProgressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    ai_plan_task_id?: boolean
    completed_at?: boolean
    ai_plan_task?: boolean | AiPlanTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type UserAiTaskProgressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    ai_plan_task_id?: boolean
    completed_at?: boolean
    ai_plan_task?: boolean | AiPlanTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    id?: boolean
    user_id?: boolean
    ai_plan_task_id?: boolean
    completed_at?: boolean
    ai_plan_task?: boolean | AiPlanTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type UserAiTaskProgressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ai_plan_task?: boolean | AiPlanTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  export type UserAiTaskProgressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ai_plan_task?: boolean | AiPlanTaskDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    name: "UserAiTaskProgress"
    objects: {
      ai_plan_task: Prisma.$AiPlanTaskPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      ai_plan_task_id: string
      completed_at: Date | null
    composites: {}
    Omit<UserAiTaskProgressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserAiTaskProgressCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserAiTaskProgress'], meta: { name: 'UserAiTaskProgress' } }
     *   where: {
    findUnique<T extends UserAiTaskProgressFindUniqueArgs>(args: SelectSubset<T, UserAiTaskProgressFindUniqueArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends UserAiTaskProgressFindUniqueOrThrowArgs>(args: SelectSubset<T, UserAiTaskProgressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends UserAiTaskProgressFindFirstArgs>(args?: SelectSubset<T, UserAiTaskProgressFindFirstArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends UserAiTaskProgressFindFirstOrThrowArgs>(args?: SelectSubset<T, UserAiTaskProgressFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAiTaskProgressFindManyArgs} args - Arguments to filter and select certain fields only.
     * const userAiTaskProgresses = await prisma.userAiTaskProgress.findMany()
     * const userAiTaskProgresses = await prisma.userAiTaskProgress.findMany({ take: 10 })
     * const userAiTaskProgressWithIdOnly = await prisma.userAiTaskProgress.findMany({ select: { id: true } })
    findMany<T extends UserAiTaskProgressFindManyArgs>(args?: SelectSubset<T, UserAiTaskProgressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends UserAiTaskProgressCreateArgs>(args: SelectSubset<T, UserAiTaskProgressCreateArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many UserAiTaskProgresses.
     * @param {UserAiTaskProgressCreateManyArgs} args - Arguments to create many UserAiTaskProgresses.
     * // Create many UserAiTaskProgresses
     * const userAiTaskProgress = await prisma.userAiTaskProgress.createMany({
     *   data: [
    createMany<T extends UserAiTaskProgressCreateManyArgs>(args?: SelectSubset<T, UserAiTaskProgressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many UserAiTaskProgresses and returns the data saved in the database.
     * @param {UserAiTaskProgressCreateManyAndReturnArgs} args - Arguments to create many UserAiTaskProgresses.
     * // Create many UserAiTaskProgresses
     * const userAiTaskProgress = await prisma.userAiTaskProgress.createManyAndReturn({
     *   data: [
     * // Create many UserAiTaskProgresses and only return the `id`
     * const userAiTaskProgressWithIdOnly = await prisma.userAiTaskProgress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends UserAiTaskProgressCreateManyAndReturnArgs>(args?: SelectSubset<T, UserAiTaskProgressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends UserAiTaskProgressDeleteArgs>(args: SelectSubset<T, UserAiTaskProgressDeleteArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends UserAiTaskProgressUpdateArgs>(args: SelectSubset<T, UserAiTaskProgressUpdateArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {UserAiTaskProgressDeleteManyArgs} args - Arguments to filter UserAiTaskProgresses to delete.
     * const { count } = await prisma.userAiTaskProgress.deleteMany({
     *   where: {
    deleteMany<T extends UserAiTaskProgressDeleteManyArgs>(args?: SelectSubset<T, UserAiTaskProgressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAiTaskProgressUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many UserAiTaskProgresses
     * const userAiTaskProgress = await prisma.userAiTaskProgress.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends UserAiTaskProgressUpdateManyArgs>(args: SelectSubset<T, UserAiTaskProgressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {UserAiTaskProgressUpdateManyAndReturnArgs} args - Arguments to update many UserAiTaskProgresses.
     * // Update many UserAiTaskProgresses
     * const userAiTaskProgress = await prisma.userAiTaskProgress.updateManyAndReturn({
     *   where: {
     *   data: [
     * const userAiTaskProgressWithIdOnly = await prisma.userAiTaskProgress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends UserAiTaskProgressUpdateManyAndReturnArgs>(args: SelectSubset<T, UserAiTaskProgressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends UserAiTaskProgressUpsertArgs>(args: SelectSubset<T, UserAiTaskProgressUpsertArgs<ExtArgs>>): Prisma__UserAiTaskProgressClient<$Result.GetResult<Prisma.$UserAiTaskProgressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, UserAiTaskProgressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], UserAiTaskProgressCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends UserAiTaskProgressAggregateArgs>(args: Subset<T, UserAiTaskProgressAggregateArgs>): Prisma.PrismaPromise<GetUserAiTaskProgressAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: UserAiTaskProgressGroupByArgs['orderBy'] }
        : { orderBy?: UserAiTaskProgressGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, UserAiTaskProgressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserAiTaskProgressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: UserAiTaskProgressFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ai_plan_task<T extends AiPlanTaskDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AiPlanTaskDefaultArgs<ExtArgs>>): Prisma__AiPlanTaskClient<$Result.GetResult<Prisma.$AiPlanTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"UserAiTaskProgress", 'String'>
    readonly user_id: FieldRef<"UserAiTaskProgress", 'String'>
    readonly ai_plan_task_id: FieldRef<"UserAiTaskProgress", 'String'>
    readonly completed_at: FieldRef<"UserAiTaskProgress", 'DateTime'>
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where: UserAiTaskProgressWhereUniqueInput
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where: UserAiTaskProgressWhereUniqueInput
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where?: UserAiTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserAiTaskProgressOrderByWithRelationInput | UserAiTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserAiTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: UserAiTaskProgressScalarFieldEnum | UserAiTaskProgressScalarFieldEnum[]
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where?: UserAiTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserAiTaskProgressOrderByWithRelationInput | UserAiTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserAiTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: UserAiTaskProgressScalarFieldEnum | UserAiTaskProgressScalarFieldEnum[]
   * UserAiTaskProgress findMany
  export type UserAiTaskProgressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where?: UserAiTaskProgressWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: UserAiTaskProgressOrderByWithRelationInput | UserAiTaskProgressOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: UserAiTaskProgressWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: UserAiTaskProgressScalarFieldEnum | UserAiTaskProgressScalarFieldEnum[]
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    data: XOR<UserAiTaskProgressCreateInput, UserAiTaskProgressUncheckedCreateInput>
   * UserAiTaskProgress createMany
  export type UserAiTaskProgressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many UserAiTaskProgresses.
    data: UserAiTaskProgressCreateManyInput | UserAiTaskProgressCreateManyInput[]
    skipDuplicates?: boolean
   * UserAiTaskProgress createManyAndReturn
  export type UserAiTaskProgressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserAiTaskProgressSelectCreateManyAndReturn<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
     * The data used to create many UserAiTaskProgresses.
    data: UserAiTaskProgressCreateManyInput | UserAiTaskProgressCreateManyInput[]
    skipDuplicates?: boolean
    include?: UserAiTaskProgressIncludeCreateManyAndReturn<ExtArgs> | null
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    data: XOR<UserAiTaskProgressUpdateInput, UserAiTaskProgressUncheckedUpdateInput>
    where: UserAiTaskProgressWhereUniqueInput
   * UserAiTaskProgress updateMany
  export type UserAiTaskProgressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<UserAiTaskProgressUpdateManyMutationInput, UserAiTaskProgressUncheckedUpdateManyInput>
    where?: UserAiTaskProgressWhereInput
     * Limit how many UserAiTaskProgresses to update.
    limit?: number
   * UserAiTaskProgress updateManyAndReturn
  export type UserAiTaskProgressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: UserAiTaskProgressSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    data: XOR<UserAiTaskProgressUpdateManyMutationInput, UserAiTaskProgressUncheckedUpdateManyInput>
    where?: UserAiTaskProgressWhereInput
     * Limit how many UserAiTaskProgresses to update.
    limit?: number
    include?: UserAiTaskProgressIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where: UserAiTaskProgressWhereUniqueInput
    create: XOR<UserAiTaskProgressCreateInput, UserAiTaskProgressUncheckedCreateInput>
    update: XOR<UserAiTaskProgressUpdateInput, UserAiTaskProgressUncheckedUpdateInput>
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    where: UserAiTaskProgressWhereUniqueInput
   * UserAiTaskProgress deleteMany
  export type UserAiTaskProgressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserAiTaskProgressWhereInput
     * Limit how many UserAiTaskProgresses to delete.
    limit?: number
    select?: UserAiTaskProgressSelect<ExtArgs> | null
    omit?: UserAiTaskProgressOmit<ExtArgs> | null
    include?: UserAiTaskProgressInclude<ExtArgs> | null
    _count: AiPlanDailyTaskCountAggregateOutputType | null
    _min: AiPlanDailyTaskMinAggregateOutputType | null
    _max: AiPlanDailyTaskMaxAggregateOutputType | null
    id: string | null
    text: string | null
    completed: boolean | null
    planId: string | null
    id: string | null
    text: string | null
    completed: boolean | null
    planId: string | null
    id: number
    text: number
    completed: number
    planId: number
    _all: number
    id?: true
    text?: true
    completed?: true
    planId?: true
    id?: true
    text?: true
    completed?: true
    planId?: true
    id?: true
    text?: true
    completed?: true
    planId?: true
    _all?: true
    where?: AiPlanDailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanDailyTaskOrderByWithRelationInput | AiPlanDailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanDailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _count?: true | AiPlanDailyTaskCountAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _min?: AiPlanDailyTaskMinAggregateInputType
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
    _max?: AiPlanDailyTaskMaxAggregateInputType
        [P in keyof T & keyof AggregateAiPlanDailyTask]: P extends '_count' | 'count'
        : GetScalarType<T[P], AggregateAiPlanDailyTask[P]>
      : GetScalarType<T[P], AggregateAiPlanDailyTask[P]>
    where?: AiPlanDailyTaskWhereInput
    orderBy?: AiPlanDailyTaskOrderByWithAggregationInput | AiPlanDailyTaskOrderByWithAggregationInput[]
    by: AiPlanDailyTaskScalarFieldEnum[] | AiPlanDailyTaskScalarFieldEnum
    having?: AiPlanDailyTaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AiPlanDailyTaskCountAggregateInputType | true
    _min?: AiPlanDailyTaskMinAggregateInputType
    _max?: AiPlanDailyTaskMaxAggregateInputType
    id: string
    text: string
    completed: boolean
    planId: string
    _count: AiPlanDailyTaskCountAggregateOutputType | null
    _min: AiPlanDailyTaskMinAggregateOutputType | null
    _max: AiPlanDailyTaskMaxAggregateOutputType | null
          [P in ((keyof T) & (keyof AiPlanDailyTaskGroupByOutputType))]: P extends '_count'
              : GetScalarType<T[P], AiPlanDailyTaskGroupByOutputType[P]>
            : GetScalarType<T[P], AiPlanDailyTaskGroupByOutputType[P]>
    id?: boolean
    text?: boolean
    completed?: boolean
    planId?: boolean
    aiPlan?: boolean | AiPlanDefaultArgs<ExtArgs>
  export type AiPlanDailyTaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    text?: boolean
    completed?: boolean
    planId?: boolean
    aiPlan?: boolean | AiPlanDefaultArgs<ExtArgs>
  export type AiPlanDailyTaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    text?: boolean
    completed?: boolean
    planId?: boolean
    aiPlan?: boolean | AiPlanDefaultArgs<ExtArgs>
    id?: boolean
    text?: boolean
    completed?: boolean
    planId?: boolean
    aiPlan?: boolean | AiPlanDefaultArgs<ExtArgs>
  export type AiPlanDailyTaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aiPlan?: boolean | AiPlanDefaultArgs<ExtArgs>
  export type AiPlanDailyTaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aiPlan?: boolean | AiPlanDefaultArgs<ExtArgs>
    name: "AiPlanDailyTask"
    objects: {
      aiPlan: Prisma.$AiPlanPayload<ExtArgs>
    scalars: $Extensions.GetPayloadResult<{
      id: string
      text: string
      completed: boolean
      planId: string
    composites: {}
    Omit<AiPlanDailyTaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AiPlanDailyTaskCountAggregateInputType | true
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AiPlanDailyTask'], meta: { name: 'AiPlanDailyTask' } }
     *   where: {
    findUnique<T extends AiPlanDailyTaskFindUniqueArgs>(args: SelectSubset<T, AiPlanDailyTaskFindUniqueArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     *   where: {
    findUniqueOrThrow<T extends AiPlanDailyTaskFindUniqueOrThrowArgs>(args: SelectSubset<T, AiPlanDailyTaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirst<T extends AiPlanDailyTaskFindFirstArgs>(args?: SelectSubset<T, AiPlanDailyTaskFindFirstArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
    findFirstOrThrow<T extends AiPlanDailyTaskFindFirstOrThrowArgs>(args?: SelectSubset<T, AiPlanDailyTaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiPlanDailyTaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * const aiPlanDailyTasks = await prisma.aiPlanDailyTask.findMany()
     * const aiPlanDailyTasks = await prisma.aiPlanDailyTask.findMany({ take: 10 })
     * const aiPlanDailyTaskWithIdOnly = await prisma.aiPlanDailyTask.findMany({ select: { id: true } })
    findMany<T extends AiPlanDailyTaskFindManyArgs>(args?: SelectSubset<T, AiPlanDailyTaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>
     *   data: {
    create<T extends AiPlanDailyTaskCreateArgs>(args: SelectSubset<T, AiPlanDailyTaskCreateArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Create many AiPlanDailyTasks.
     * @param {AiPlanDailyTaskCreateManyArgs} args - Arguments to create many AiPlanDailyTasks.
     * // Create many AiPlanDailyTasks
     * const aiPlanDailyTask = await prisma.aiPlanDailyTask.createMany({
     *   data: [
    createMany<T extends AiPlanDailyTaskCreateManyArgs>(args?: SelectSubset<T, AiPlanDailyTaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Create many AiPlanDailyTasks and returns the data saved in the database.
     * @param {AiPlanDailyTaskCreateManyAndReturnArgs} args - Arguments to create many AiPlanDailyTasks.
     * // Create many AiPlanDailyTasks
     * const aiPlanDailyTask = await prisma.aiPlanDailyTask.createManyAndReturn({
     *   data: [
     * // Create many AiPlanDailyTasks and only return the `id`
     * const aiPlanDailyTaskWithIdOnly = await prisma.aiPlanDailyTask.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    createManyAndReturn<T extends AiPlanDailyTaskCreateManyAndReturnArgs>(args?: SelectSubset<T, AiPlanDailyTaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>
     *   where: {
    delete<T extends AiPlanDailyTaskDeleteArgs>(args: SelectSubset<T, AiPlanDailyTaskDeleteArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     *   where: {
     *   data: {
    update<T extends AiPlanDailyTaskUpdateArgs>(args: SelectSubset<T, AiPlanDailyTaskUpdateArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * @param {AiPlanDailyTaskDeleteManyArgs} args - Arguments to filter AiPlanDailyTasks to delete.
     * const { count } = await prisma.aiPlanDailyTask.deleteMany({
     *   where: {
    deleteMany<T extends AiPlanDailyTaskDeleteManyArgs>(args?: SelectSubset<T, AiPlanDailyTaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiPlanDailyTaskUpdateManyArgs} args - Arguments to update one or more rows.
     * // Update many AiPlanDailyTasks
     * const aiPlanDailyTask = await prisma.aiPlanDailyTask.updateMany({
     *   where: {
     *   data: {
    updateMany<T extends AiPlanDailyTaskUpdateManyArgs>(args: SelectSubset<T, AiPlanDailyTaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>
     * @param {AiPlanDailyTaskUpdateManyAndReturnArgs} args - Arguments to update many AiPlanDailyTasks.
     * // Update many AiPlanDailyTasks
     * const aiPlanDailyTask = await prisma.aiPlanDailyTask.updateManyAndReturn({
     *   where: {
     *   data: [
     * const aiPlanDailyTaskWithIdOnly = await prisma.aiPlanDailyTask.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *   data: [
     * Read more here: https://pris.ly/d/null-undefined
    updateManyAndReturn<T extends AiPlanDailyTaskUpdateManyAndReturnArgs>(args: SelectSubset<T, AiPlanDailyTaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>
     *   create: {
     *   update: {
     *   where: {
    upsert<T extends AiPlanDailyTaskUpsertArgs>(args: SelectSubset<T, AiPlanDailyTaskUpsertArgs<ExtArgs>>): Prisma__AiPlanDailyTaskClient<$Result.GetResult<Prisma.$AiPlanDailyTaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>
     * Read more here: https://pris.ly/d/null-undefined
     *   where: {
      args?: Subset<T, AiPlanDailyTaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
          : GetScalarType<T['select'], AiPlanDailyTaskCountAggregateOutputType>
        : number
     * Read more here: https://pris.ly/d/null-undefined
     *   _avg: {
     *     age: true,
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *   orderBy: {
     *     age: "asc",
     *   take: 10,
    aggregate<T extends AiPlanDailyTaskAggregateArgs>(args: Subset<T, AiPlanDailyTaskAggregateArgs>): Prisma.PrismaPromise<GetAiPlanDailyTaskAggregateType<T>>
     * Read more here: https://pris.ly/d/null-undefined
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   _count: {
     *     _all: true
        ? { orderBy: AiPlanDailyTaskGroupByArgs['orderBy'] }
        : { orderBy?: AiPlanDailyTaskGroupByArgs['orderBy'] },
      ByEmpty extends T['by'] extends never[] ? True : False,
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
          [P in HavingFields]: P extends ByFields
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
      : 'take' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
          : {
              [P in OrderFields]: P extends ByFields
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      : {
          [P in OrderFields]: P extends ByFields
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
    >(args: SubsetIntersection<T, AiPlanDailyTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAiPlanDailyTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  readonly fields: AiPlanDailyTaskFieldRefs;
   * https://github.com/prisma/prisma-client-js/issues/707
    readonly [Symbol.toStringTag]: "PrismaPromise"
    aiPlan<T extends AiPlanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AiPlanDefaultArgs<ExtArgs>>): Prisma__AiPlanClient<$Result.GetResult<Prisma.$AiPlanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
    readonly id: FieldRef<"AiPlanDailyTask", 'String'>
    readonly text: FieldRef<"AiPlanDailyTask", 'String'>
    readonly completed: FieldRef<"AiPlanDailyTask", 'Boolean'>
    readonly planId: FieldRef<"AiPlanDailyTask", 'String'>
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where: AiPlanDailyTaskWhereUniqueInput
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where: AiPlanDailyTaskWhereUniqueInput
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where?: AiPlanDailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanDailyTaskOrderByWithRelationInput | AiPlanDailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanDailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: AiPlanDailyTaskScalarFieldEnum | AiPlanDailyTaskScalarFieldEnum[]
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where?: AiPlanDailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanDailyTaskOrderByWithRelationInput | AiPlanDailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanDailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
    distinct?: AiPlanDailyTaskScalarFieldEnum | AiPlanDailyTaskScalarFieldEnum[]
   * AiPlanDailyTask findMany
  export type AiPlanDailyTaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where?: AiPlanDailyTaskWhereInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
    orderBy?: AiPlanDailyTaskOrderByWithRelationInput | AiPlanDailyTaskOrderByWithRelationInput[]
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
    cursor?: AiPlanDailyTaskWhereUniqueInput
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    take?: number
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
    skip?: number
    distinct?: AiPlanDailyTaskScalarFieldEnum | AiPlanDailyTaskScalarFieldEnum[]
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    data: XOR<AiPlanDailyTaskCreateInput, AiPlanDailyTaskUncheckedCreateInput>
   * AiPlanDailyTask createMany
  export type AiPlanDailyTaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
     * The data used to create many AiPlanDailyTasks.
    data: AiPlanDailyTaskCreateManyInput | AiPlanDailyTaskCreateManyInput[]
    skipDuplicates?: boolean
   * AiPlanDailyTask createManyAndReturn
  export type AiPlanDailyTaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanDailyTaskSelectCreateManyAndReturn<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
     * The data used to create many AiPlanDailyTasks.
    data: AiPlanDailyTaskCreateManyInput | AiPlanDailyTaskCreateManyInput[]
    skipDuplicates?: boolean
    include?: AiPlanDailyTaskIncludeCreateManyAndReturn<ExtArgs> | null
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    data: XOR<AiPlanDailyTaskUpdateInput, AiPlanDailyTaskUncheckedUpdateInput>
    where: AiPlanDailyTaskWhereUniqueInput
   * AiPlanDailyTask updateMany
  export type AiPlanDailyTaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    data: XOR<AiPlanDailyTaskUpdateManyMutationInput, AiPlanDailyTaskUncheckedUpdateManyInput>
    where?: AiPlanDailyTaskWhereInput
     * Limit how many AiPlanDailyTasks to update.
    limit?: number
   * AiPlanDailyTask updateManyAndReturn
  export type AiPlanDailyTaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    select?: AiPlanDailyTaskSelectUpdateManyAndReturn<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    data: XOR<AiPlanDailyTaskUpdateManyMutationInput, AiPlanDailyTaskUncheckedUpdateManyInput>
    where?: AiPlanDailyTaskWhereInput
     * Limit how many AiPlanDailyTasks to update.
    limit?: number
    include?: AiPlanDailyTaskIncludeUpdateManyAndReturn<ExtArgs> | null
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where: AiPlanDailyTaskWhereUniqueInput
    create: XOR<AiPlanDailyTaskCreateInput, AiPlanDailyTaskUncheckedCreateInput>
    update: XOR<AiPlanDailyTaskUpdateInput, AiPlanDailyTaskUncheckedUpdateInput>
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
    where: AiPlanDailyTaskWhereUniqueInput
   * AiPlanDailyTask deleteMany
  export type AiPlanDailyTaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AiPlanDailyTaskWhereInput
     * Limit how many AiPlanDailyTasks to delete.
    limit?: number
    select?: AiPlanDailyTaskSelect<ExtArgs> | null
    omit?: AiPlanDailyTaskOmit<ExtArgs> | null
    include?: AiPlanDailyTaskInclude<ExtArgs> | null
  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    password: 'password',
    emailOptIn: 'emailOptIn',
    streak: 'streak',
    streak_last_date: 'streak_last_date',
    avatar: 'avatar',
    devotional_goal_id: 'devotional_goal_id',
    is_admin: 'is_admin'
  export const ReflectionScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    text: 'text',
    mood: 'mood',
    created_at: 'created_at',
    status: 'status'
  export const LikeScalarFieldEnum: {
    id: 'id',
    reflection_id: 'reflection_id',
    user_id: 'user_id',
    created_at: 'created_at'
  export const ReflectionCommentScalarFieldEnum: {
    id: 'id',
    reflection_id: 'reflection_id',
    user_id: 'user_id',
    comment: 'comment',
    created_at: 'created_at',
    status: 'status'
  export const ReflectionLikeScalarFieldEnum: {
    id: 'id',
    reflection_id: 'reflection_id',
    user_id: 'user_id',
    created_at: 'created_at'
  export const JournalScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    content: 'content',
    mood: 'mood',
    created_at: 'created_at',
    updated_at: 'updated_at'
  export const DevotionalGoalScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    created_at: 'created_at'
  export const DevotionalTaskScalarFieldEnum: {
    id: 'id',
    goal_id: 'goal_id',
    day_number: 'day_number',
    task_text: 'task_text',
    created_at: 'created_at'
  export const UserTaskProgressScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    devotional_task_id: 'devotional_task_id',
    completion_date: 'completion_date',
    completedAt: 'completedAt',
    createdAt: 'createdAt'
  export const NicheTagScalarFieldEnum: {
    id: 'id',
    name: 'name'
  export const ReflectionNicheTagScalarFieldEnum: {
    reflection_id: 'reflection_id',
    niche_tag_id: 'niche_tag_id'
  export const DailyTaskScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    is_recurring: 'is_recurring',
    ai_generated: 'ai_generated'
  export const DailyTaskCompletionScalarFieldEnum: {
    id: 'id',
    task_id: 'task_id',
    user_id: 'user_id',
    completion_date: 'completion_date',
    created_at: 'created_at'
  export const Devotional_daily_task_templatesScalarFieldEnum: {
    id: 'id',
    devotional_id: 'devotional_id',
    title: 'title',
    description: 'description',
    is_recurring: 'is_recurring',
    created_at: 'created_at'
  export const Good_newsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    image_url: 'image_url',
    date: 'date',
    created_at: 'created_at',
    updated_at: 'updated_at'
  export const AiPlanScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    description: 'description',
    created_at: 'created_at'
  export const AiPlanTaskScalarFieldEnum: {
    id: 'id',
    ai_plan_id: 'ai_plan_id',
    day_number: 'day_number',
    task_text: 'task_text',
    created_at: 'created_at'
  export const UserAiTaskProgressScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    ai_plan_task_id: 'ai_plan_task_id',
    completed_at: 'completed_at'
  export const AiPlanDailyTaskScalarFieldEnum: {
    id: 'id',
    text: 'text',
    completed: 'completed',
    planId: 'planId'
  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  export const NullsOrder: {
    first: 'first',
    last: 'last'
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: UuidFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    password?: StringFilter<"User"> | string
    emailOptIn?: BoolNullableFilter<"User"> | boolean | null
    streak?: IntFilter<"User"> | number
    streak_last_date?: DateTimeNullableFilter<"User"> | Date | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    devotional_goal_id?: UuidNullableFilter<"User"> | string | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    AiPlan?: AiPlanListRelationFilter
    dailyTaskCompletions?: DailyTaskCompletionListRelationFilter
    dailyTasks?: DailyTaskListRelationFilter
    journals?: JournalListRelationFilter
    likes?: LikeListRelationFilter
    reflectionComments?: ReflectionCommentListRelationFilter
    reflectionLikes?: ReflectionLikeListRelationFilter
    reflections?: ReflectionListRelationFilter
    UserAiTaskProgress?: UserAiTaskProgressListRelationFilter
    user_task_progress?: UserTaskProgressListRelationFilter
    devotionalGoal?: XOR<DevotionalGoalNullableScalarRelationFilter, DevotionalGoalWhereInput> | null
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    password?: SortOrder
    emailOptIn?: SortOrderInput | SortOrder
    streak?: SortOrder
    streak_last_date?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    devotional_goal_id?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    AiPlan?: AiPlanOrderByRelationAggregateInput
    dailyTaskCompletions?: DailyTaskCompletionOrderByRelationAggregateInput
    dailyTasks?: DailyTaskOrderByRelationAggregateInput
    journals?: JournalOrderByRelationAggregateInput
    likes?: LikeOrderByRelationAggregateInput
    reflectionComments?: ReflectionCommentOrderByRelationAggregateInput
    reflectionLikes?: ReflectionLikeOrderByRelationAggregateInput
    reflections?: ReflectionOrderByRelationAggregateInput
    UserAiTaskProgress?: UserAiTaskProgressOrderByRelationAggregateInput
    user_task_progress?: UserTaskProgressOrderByRelationAggregateInput
    devotionalGoal?: DevotionalGoalOrderByWithRelationInput
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    password?: StringFilter<"User"> | string
    emailOptIn?: BoolNullableFilter<"User"> | boolean | null
    streak?: IntFilter<"User"> | number
    streak_last_date?: DateTimeNullableFilter<"User"> | Date | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    devotional_goal_id?: UuidNullableFilter<"User"> | string | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    AiPlan?: AiPlanListRelationFilter
    dailyTaskCompletions?: DailyTaskCompletionListRelationFilter
    dailyTasks?: DailyTaskListRelationFilter
    journals?: JournalListRelationFilter
    likes?: LikeListRelationFilter
    reflectionComments?: ReflectionCommentListRelationFilter
    reflectionLikes?: ReflectionLikeListRelationFilter
    reflections?: ReflectionListRelationFilter
    UserAiTaskProgress?: UserAiTaskProgressListRelationFilter
    user_task_progress?: UserTaskProgressListRelationFilter
    devotionalGoal?: XOR<DevotionalGoalNullableScalarRelationFilter, DevotionalGoalWhereInput> | null
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    password?: SortOrder
    emailOptIn?: SortOrderInput | SortOrder
    streak?: SortOrder
    streak_last_date?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    devotional_goal_id?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    password?: StringWithAggregatesFilter<"User"> | string
    emailOptIn?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    streak?: IntWithAggregatesFilter<"User"> | number
    streak_last_date?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    devotional_goal_id?: UuidNullableWithAggregatesFilter<"User"> | string | null
    is_admin?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    AND?: ReflectionWhereInput | ReflectionWhereInput[]
    OR?: ReflectionWhereInput[]
    NOT?: ReflectionWhereInput | ReflectionWhereInput[]
    id?: UuidFilter<"Reflection"> | string
    user_id?: UuidFilter<"Reflection"> | string
    text?: StringFilter<"Reflection"> | string
    mood?: StringNullableFilter<"Reflection"> | string | null
    created_at?: DateTimeNullableFilter<"Reflection"> | Date | string | null
    status?: StringNullableFilter<"Reflection"> | string | null
    likes?: LikeListRelationFilter
    reflectionComments?: ReflectionCommentListRelationFilter
    reflectionLikes?: ReflectionLikeListRelationFilter
    reflectionNicheTags?: ReflectionNicheTagListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    mood?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    likes?: LikeOrderByRelationAggregateInput
    reflectionComments?: ReflectionCommentOrderByRelationAggregateInput
    reflectionLikes?: ReflectionLikeOrderByRelationAggregateInput
    reflectionNicheTags?: ReflectionNicheTagOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    id?: string
    AND?: ReflectionWhereInput | ReflectionWhereInput[]
    OR?: ReflectionWhereInput[]
    NOT?: ReflectionWhereInput | ReflectionWhereInput[]
    user_id?: UuidFilter<"Reflection"> | string
    text?: StringFilter<"Reflection"> | string
    mood?: StringNullableFilter<"Reflection"> | string | null
    created_at?: DateTimeNullableFilter<"Reflection"> | Date | string | null
    status?: StringNullableFilter<"Reflection"> | string | null
    likes?: LikeListRelationFilter
    reflectionComments?: ReflectionCommentListRelationFilter
    reflectionLikes?: ReflectionLikeListRelationFilter
    reflectionNicheTags?: ReflectionNicheTagListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    mood?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: ReflectionCountOrderByAggregateInput
    _max?: ReflectionMaxOrderByAggregateInput
    _min?: ReflectionMinOrderByAggregateInput
    AND?: ReflectionScalarWhereWithAggregatesInput | ReflectionScalarWhereWithAggregatesInput[]
    OR?: ReflectionScalarWhereWithAggregatesInput[]
    NOT?: ReflectionScalarWhereWithAggregatesInput | ReflectionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Reflection"> | string
    user_id?: UuidWithAggregatesFilter<"Reflection"> | string
    text?: StringWithAggregatesFilter<"Reflection"> | string
    mood?: StringNullableWithAggregatesFilter<"Reflection"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"Reflection"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"Reflection"> | string | null
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    id?: UuidFilter<"Like"> | string
    reflection_id?: UuidFilter<"Like"> | string
    user_id?: UuidFilter<"Like"> | string
    created_at?: DateTimeNullableFilter<"Like"> | Date | string | null
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    reflection?: ReflectionOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    id?: string
    reflection_id_user_id?: LikeReflection_idUser_idCompoundUniqueInput
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    reflection_id?: UuidFilter<"Like"> | string
    user_id?: UuidFilter<"Like"> | string
    created_at?: DateTimeNullableFilter<"Like"> | Date | string | null
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: LikeCountOrderByAggregateInput
    _max?: LikeMaxOrderByAggregateInput
    _min?: LikeMinOrderByAggregateInput
    AND?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    OR?: LikeScalarWhereWithAggregatesInput[]
    NOT?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Like"> | string
    reflection_id?: UuidWithAggregatesFilter<"Like"> | string
    user_id?: UuidWithAggregatesFilter<"Like"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"Like"> | Date | string | null
    AND?: ReflectionCommentWhereInput | ReflectionCommentWhereInput[]
    OR?: ReflectionCommentWhereInput[]
    NOT?: ReflectionCommentWhereInput | ReflectionCommentWhereInput[]
    id?: UuidFilter<"ReflectionComment"> | string
    reflection_id?: UuidFilter<"ReflectionComment"> | string
    user_id?: UuidFilter<"ReflectionComment"> | string
    comment?: StringFilter<"ReflectionComment"> | string
    created_at?: DateTimeNullableFilter<"ReflectionComment"> | Date | string | null
    status?: StringNullableFilter<"ReflectionComment"> | string | null
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    reflection?: ReflectionOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    id?: string
    AND?: ReflectionCommentWhereInput | ReflectionCommentWhereInput[]
    OR?: ReflectionCommentWhereInput[]
    NOT?: ReflectionCommentWhereInput | ReflectionCommentWhereInput[]
    reflection_id?: UuidFilter<"ReflectionComment"> | string
    user_id?: UuidFilter<"ReflectionComment"> | string
    comment?: StringFilter<"ReflectionComment"> | string
    created_at?: DateTimeNullableFilter<"ReflectionComment"> | Date | string | null
    status?: StringNullableFilter<"ReflectionComment"> | string | null
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: ReflectionCommentCountOrderByAggregateInput
    _max?: ReflectionCommentMaxOrderByAggregateInput
    _min?: ReflectionCommentMinOrderByAggregateInput
    AND?: ReflectionCommentScalarWhereWithAggregatesInput | ReflectionCommentScalarWhereWithAggregatesInput[]
    OR?: ReflectionCommentScalarWhereWithAggregatesInput[]
    NOT?: ReflectionCommentScalarWhereWithAggregatesInput | ReflectionCommentScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ReflectionComment"> | string
    reflection_id?: UuidWithAggregatesFilter<"ReflectionComment"> | string
    user_id?: UuidWithAggregatesFilter<"ReflectionComment"> | string
    comment?: StringWithAggregatesFilter<"ReflectionComment"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"ReflectionComment"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"ReflectionComment"> | string | null
    AND?: ReflectionLikeWhereInput | ReflectionLikeWhereInput[]
    OR?: ReflectionLikeWhereInput[]
    NOT?: ReflectionLikeWhereInput | ReflectionLikeWhereInput[]
    id?: UuidFilter<"ReflectionLike"> | string
    reflection_id?: UuidFilter<"ReflectionLike"> | string
    user_id?: UuidFilter<"ReflectionLike"> | string
    created_at?: DateTimeNullableFilter<"ReflectionLike"> | Date | string | null
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    reflection?: ReflectionOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    id?: string
    reflection_id_user_id?: ReflectionLikeReflection_idUser_idCompoundUniqueInput
    AND?: ReflectionLikeWhereInput | ReflectionLikeWhereInput[]
    OR?: ReflectionLikeWhereInput[]
    NOT?: ReflectionLikeWhereInput | ReflectionLikeWhereInput[]
    reflection_id?: UuidFilter<"ReflectionLike"> | string
    user_id?: UuidFilter<"ReflectionLike"> | string
    created_at?: DateTimeNullableFilter<"ReflectionLike"> | Date | string | null
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: ReflectionLikeCountOrderByAggregateInput
    _max?: ReflectionLikeMaxOrderByAggregateInput
    _min?: ReflectionLikeMinOrderByAggregateInput
    AND?: ReflectionLikeScalarWhereWithAggregatesInput | ReflectionLikeScalarWhereWithAggregatesInput[]
    OR?: ReflectionLikeScalarWhereWithAggregatesInput[]
    NOT?: ReflectionLikeScalarWhereWithAggregatesInput | ReflectionLikeScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ReflectionLike"> | string
    reflection_id?: UuidWithAggregatesFilter<"ReflectionLike"> | string
    user_id?: UuidWithAggregatesFilter<"ReflectionLike"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"ReflectionLike"> | Date | string | null
    AND?: JournalWhereInput | JournalWhereInput[]
    OR?: JournalWhereInput[]
    NOT?: JournalWhereInput | JournalWhereInput[]
    id?: UuidFilter<"Journal"> | string
    user_id?: UuidFilter<"Journal"> | string
    title?: StringFilter<"Journal"> | string
    content?: StringFilter<"Journal"> | string
    mood?: StringNullableFilter<"Journal"> | string | null
    created_at?: DateTimeNullableFilter<"Journal"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Journal"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    mood?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    id?: string
    AND?: JournalWhereInput | JournalWhereInput[]
    OR?: JournalWhereInput[]
    NOT?: JournalWhereInput | JournalWhereInput[]
    user_id?: UuidFilter<"Journal"> | string
    title?: StringFilter<"Journal"> | string
    content?: StringFilter<"Journal"> | string
    mood?: StringNullableFilter<"Journal"> | string | null
    created_at?: DateTimeNullableFilter<"Journal"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Journal"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    mood?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: JournalCountOrderByAggregateInput
    _max?: JournalMaxOrderByAggregateInput
    _min?: JournalMinOrderByAggregateInput
    AND?: JournalScalarWhereWithAggregatesInput | JournalScalarWhereWithAggregatesInput[]
    OR?: JournalScalarWhereWithAggregatesInput[]
    NOT?: JournalScalarWhereWithAggregatesInput | JournalScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Journal"> | string
    user_id?: UuidWithAggregatesFilter<"Journal"> | string
    title?: StringWithAggregatesFilter<"Journal"> | string
    content?: StringWithAggregatesFilter<"Journal"> | string
    mood?: StringNullableWithAggregatesFilter<"Journal"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"Journal"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"Journal"> | Date | string | null
    AND?: DevotionalGoalWhereInput | DevotionalGoalWhereInput[]
    OR?: DevotionalGoalWhereInput[]
    NOT?: DevotionalGoalWhereInput | DevotionalGoalWhereInput[]
    id?: UuidFilter<"DevotionalGoal"> | string
    title?: StringFilter<"DevotionalGoal"> | string
    description?: StringNullableFilter<"DevotionalGoal"> | string | null
    created_at?: DateTimeNullableFilter<"DevotionalGoal"> | Date | string | null
    devotional_daily_task_templates?: Devotional_daily_task_templatesListRelationFilter
    tasks?: DevotionalTaskListRelationFilter
    users?: UserListRelationFilter
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    devotional_daily_task_templates?: devotional_daily_task_templatesOrderByRelationAggregateInput
    tasks?: DevotionalTaskOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
    id?: string
    AND?: DevotionalGoalWhereInput | DevotionalGoalWhereInput[]
    OR?: DevotionalGoalWhereInput[]
    NOT?: DevotionalGoalWhereInput | DevotionalGoalWhereInput[]
    title?: StringFilter<"DevotionalGoal"> | string
    description?: StringNullableFilter<"DevotionalGoal"> | string | null
    created_at?: DateTimeNullableFilter<"DevotionalGoal"> | Date | string | null
    devotional_daily_task_templates?: Devotional_daily_task_templatesListRelationFilter
    tasks?: DevotionalTaskListRelationFilter
    users?: UserListRelationFilter
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: DevotionalGoalCountOrderByAggregateInput
    _max?: DevotionalGoalMaxOrderByAggregateInput
    _min?: DevotionalGoalMinOrderByAggregateInput
    AND?: DevotionalGoalScalarWhereWithAggregatesInput | DevotionalGoalScalarWhereWithAggregatesInput[]
    OR?: DevotionalGoalScalarWhereWithAggregatesInput[]
    NOT?: DevotionalGoalScalarWhereWithAggregatesInput | DevotionalGoalScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"DevotionalGoal"> | string
    title?: StringWithAggregatesFilter<"DevotionalGoal"> | string
    description?: StringNullableWithAggregatesFilter<"DevotionalGoal"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"DevotionalGoal"> | Date | string | null
    AND?: DevotionalTaskWhereInput | DevotionalTaskWhereInput[]
    OR?: DevotionalTaskWhereInput[]
    NOT?: DevotionalTaskWhereInput | DevotionalTaskWhereInput[]
    id?: UuidFilter<"DevotionalTask"> | string
    goal_id?: UuidNullableFilter<"DevotionalTask"> | string | null
    day_number?: IntFilter<"DevotionalTask"> | number
    task_text?: StringFilter<"DevotionalTask"> | string
    created_at?: DateTimeNullableFilter<"DevotionalTask"> | Date | string | null
    goal?: XOR<DevotionalGoalNullableScalarRelationFilter, DevotionalGoalWhereInput> | null
    user_task_progress?: UserTaskProgressListRelationFilter
    id?: SortOrder
    goal_id?: SortOrderInput | SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrderInput | SortOrder
    goal?: DevotionalGoalOrderByWithRelationInput
    user_task_progress?: UserTaskProgressOrderByRelationAggregateInput
    id?: string
    AND?: DevotionalTaskWhereInput | DevotionalTaskWhereInput[]
    OR?: DevotionalTaskWhereInput[]
    NOT?: DevotionalTaskWhereInput | DevotionalTaskWhereInput[]
    goal_id?: UuidNullableFilter<"DevotionalTask"> | string | null
    day_number?: IntFilter<"DevotionalTask"> | number
    task_text?: StringFilter<"DevotionalTask"> | string
    created_at?: DateTimeNullableFilter<"DevotionalTask"> | Date | string | null
    goal?: XOR<DevotionalGoalNullableScalarRelationFilter, DevotionalGoalWhereInput> | null
    user_task_progress?: UserTaskProgressListRelationFilter
    id?: SortOrder
    goal_id?: SortOrderInput | SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: DevotionalTaskCountOrderByAggregateInput
    _avg?: DevotionalTaskAvgOrderByAggregateInput
    _max?: DevotionalTaskMaxOrderByAggregateInput
    _min?: DevotionalTaskMinOrderByAggregateInput
    _sum?: DevotionalTaskSumOrderByAggregateInput
    AND?: DevotionalTaskScalarWhereWithAggregatesInput | DevotionalTaskScalarWhereWithAggregatesInput[]
    OR?: DevotionalTaskScalarWhereWithAggregatesInput[]
    NOT?: DevotionalTaskScalarWhereWithAggregatesInput | DevotionalTaskScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"DevotionalTask"> | string
    goal_id?: UuidNullableWithAggregatesFilter<"DevotionalTask"> | string | null
    day_number?: IntWithAggregatesFilter<"DevotionalTask"> | number
    task_text?: StringWithAggregatesFilter<"DevotionalTask"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"DevotionalTask"> | Date | string | null
    AND?: UserTaskProgressWhereInput | UserTaskProgressWhereInput[]
    OR?: UserTaskProgressWhereInput[]
    NOT?: UserTaskProgressWhereInput | UserTaskProgressWhereInput[]
    id?: UuidFilter<"UserTaskProgress"> | string
    user_id?: UuidNullableFilter<"UserTaskProgress"> | string | null
    devotional_task_id?: UuidNullableFilter<"UserTaskProgress"> | string | null
    completion_date?: DateTimeFilter<"UserTaskProgress"> | Date | string
    completedAt?: DateTimeNullableFilter<"UserTaskProgress"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"UserTaskProgress"> | Date | string | null
    devotional_task?: XOR<DevotionalTaskNullableScalarRelationFilter, DevotionalTaskWhereInput> | null
    users?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    devotional_task_id?: SortOrderInput | SortOrder
    completion_date?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    devotional_task?: DevotionalTaskOrderByWithRelationInput
    users?: UserOrderByWithRelationInput
    id?: string
    user_id_completion_date?: UserTaskProgressUser_idCompletion_dateCompoundUniqueInput
    AND?: UserTaskProgressWhereInput | UserTaskProgressWhereInput[]
    OR?: UserTaskProgressWhereInput[]
    NOT?: UserTaskProgressWhereInput | UserTaskProgressWhereInput[]
    user_id?: UuidNullableFilter<"UserTaskProgress"> | string | null
    devotional_task_id?: UuidNullableFilter<"UserTaskProgress"> | string | null
    completion_date?: DateTimeFilter<"UserTaskProgress"> | Date | string
    completedAt?: DateTimeNullableFilter<"UserTaskProgress"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"UserTaskProgress"> | Date | string | null
    devotional_task?: XOR<DevotionalTaskNullableScalarRelationFilter, DevotionalTaskWhereInput> | null
    users?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    devotional_task_id?: SortOrderInput | SortOrder
    completion_date?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    _count?: UserTaskProgressCountOrderByAggregateInput
    _max?: UserTaskProgressMaxOrderByAggregateInput
    _min?: UserTaskProgressMinOrderByAggregateInput
    AND?: UserTaskProgressScalarWhereWithAggregatesInput | UserTaskProgressScalarWhereWithAggregatesInput[]
    OR?: UserTaskProgressScalarWhereWithAggregatesInput[]
    NOT?: UserTaskProgressScalarWhereWithAggregatesInput | UserTaskProgressScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"UserTaskProgress"> | string
    user_id?: UuidNullableWithAggregatesFilter<"UserTaskProgress"> | string | null
    devotional_task_id?: UuidNullableWithAggregatesFilter<"UserTaskProgress"> | string | null
    completion_date?: DateTimeWithAggregatesFilter<"UserTaskProgress"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"UserTaskProgress"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"UserTaskProgress"> | Date | string | null
    AND?: NicheTagWhereInput | NicheTagWhereInput[]
    OR?: NicheTagWhereInput[]
    NOT?: NicheTagWhereInput | NicheTagWhereInput[]
    id?: UuidFilter<"NicheTag"> | string
    name?: StringFilter<"NicheTag"> | string
    reflectionNicheTags?: ReflectionNicheTagListRelationFilter
    id?: SortOrder
    name?: SortOrder
    reflectionNicheTags?: ReflectionNicheTagOrderByRelationAggregateInput
    id?: string
    name?: string
    AND?: NicheTagWhereInput | NicheTagWhereInput[]
    OR?: NicheTagWhereInput[]
    NOT?: NicheTagWhereInput | NicheTagWhereInput[]
    reflectionNicheTags?: ReflectionNicheTagListRelationFilter
    id?: SortOrder
    name?: SortOrder
    _count?: NicheTagCountOrderByAggregateInput
    _max?: NicheTagMaxOrderByAggregateInput
    _min?: NicheTagMinOrderByAggregateInput
    AND?: NicheTagScalarWhereWithAggregatesInput | NicheTagScalarWhereWithAggregatesInput[]
    OR?: NicheTagScalarWhereWithAggregatesInput[]
    NOT?: NicheTagScalarWhereWithAggregatesInput | NicheTagScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"NicheTag"> | string
    name?: StringWithAggregatesFilter<"NicheTag"> | string
    AND?: ReflectionNicheTagWhereInput | ReflectionNicheTagWhereInput[]
    OR?: ReflectionNicheTagWhereInput[]
    NOT?: ReflectionNicheTagWhereInput | ReflectionNicheTagWhereInput[]
    reflection_id?: UuidFilter<"ReflectionNicheTag"> | string
    niche_tag_id?: UuidFilter<"ReflectionNicheTag"> | string
    nicheTag?: XOR<NicheTagScalarRelationFilter, NicheTagWhereInput>
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    reflection_id?: SortOrder
    niche_tag_id?: SortOrder
    nicheTag?: NicheTagOrderByWithRelationInput
    reflection?: ReflectionOrderByWithRelationInput
    niche_tag_id_reflection_id?: ReflectionNicheTagNiche_tag_idReflection_idCompoundUniqueInput
    reflection_id_niche_tag_id?: ReflectionNicheTagReflection_idNiche_tag_idCompoundUniqueInput
    AND?: ReflectionNicheTagWhereInput | ReflectionNicheTagWhereInput[]
    OR?: ReflectionNicheTagWhereInput[]
    NOT?: ReflectionNicheTagWhereInput | ReflectionNicheTagWhereInput[]
    reflection_id?: UuidFilter<"ReflectionNicheTag"> | string
    niche_tag_id?: UuidFilter<"ReflectionNicheTag"> | string
    nicheTag?: XOR<NicheTagScalarRelationFilter, NicheTagWhereInput>
    reflection?: XOR<ReflectionScalarRelationFilter, ReflectionWhereInput>
    reflection_id?: SortOrder
    niche_tag_id?: SortOrder
    _count?: ReflectionNicheTagCountOrderByAggregateInput
    _max?: ReflectionNicheTagMaxOrderByAggregateInput
    _min?: ReflectionNicheTagMinOrderByAggregateInput
    AND?: ReflectionNicheTagScalarWhereWithAggregatesInput | ReflectionNicheTagScalarWhereWithAggregatesInput[]
    OR?: ReflectionNicheTagScalarWhereWithAggregatesInput[]
    NOT?: ReflectionNicheTagScalarWhereWithAggregatesInput | ReflectionNicheTagScalarWhereWithAggregatesInput[]
    reflection_id?: UuidWithAggregatesFilter<"ReflectionNicheTag"> | string
    niche_tag_id?: UuidWithAggregatesFilter<"ReflectionNicheTag"> | string
    AND?: DailyTaskWhereInput | DailyTaskWhereInput[]
    OR?: DailyTaskWhereInput[]
    NOT?: DailyTaskWhereInput | DailyTaskWhereInput[]
    id?: UuidFilter<"DailyTask"> | string
    user_id?: UuidFilter<"DailyTask"> | string
    title?: StringFilter<"DailyTask"> | string
    description?: StringNullableFilter<"DailyTask"> | string | null
    created_at?: DateTimeNullableFilter<"DailyTask"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"DailyTask"> | Date | string | null
    is_recurring?: BoolNullableFilter<"DailyTask"> | boolean | null
    ai_generated?: BoolNullableFilter<"DailyTask"> | boolean | null
    completions?: DailyTaskCompletionListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    is_recurring?: SortOrderInput | SortOrder
    ai_generated?: SortOrderInput | SortOrder
    completions?: DailyTaskCompletionOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    id?: string
    AND?: DailyTaskWhereInput | DailyTaskWhereInput[]
    OR?: DailyTaskWhereInput[]
    NOT?: DailyTaskWhereInput | DailyTaskWhereInput[]
    user_id?: UuidFilter<"DailyTask"> | string
    title?: StringFilter<"DailyTask"> | string
    description?: StringNullableFilter<"DailyTask"> | string | null
    created_at?: DateTimeNullableFilter<"DailyTask"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"DailyTask"> | Date | string | null
    is_recurring?: BoolNullableFilter<"DailyTask"> | boolean | null
    ai_generated?: BoolNullableFilter<"DailyTask"> | boolean | null
    completions?: DailyTaskCompletionListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    is_recurring?: SortOrderInput | SortOrder
    ai_generated?: SortOrderInput | SortOrder
    _count?: DailyTaskCountOrderByAggregateInput
    _max?: DailyTaskMaxOrderByAggregateInput
    _min?: DailyTaskMinOrderByAggregateInput
    AND?: DailyTaskScalarWhereWithAggregatesInput | DailyTaskScalarWhereWithAggregatesInput[]
    OR?: DailyTaskScalarWhereWithAggregatesInput[]
    NOT?: DailyTaskScalarWhereWithAggregatesInput | DailyTaskScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"DailyTask"> | string
    user_id?: UuidWithAggregatesFilter<"DailyTask"> | string
    title?: StringWithAggregatesFilter<"DailyTask"> | string
    description?: StringNullableWithAggregatesFilter<"DailyTask"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"DailyTask"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"DailyTask"> | Date | string | null
    is_recurring?: BoolNullableWithAggregatesFilter<"DailyTask"> | boolean | null
    ai_generated?: BoolNullableWithAggregatesFilter<"DailyTask"> | boolean | null
    AND?: DailyTaskCompletionWhereInput | DailyTaskCompletionWhereInput[]
    OR?: DailyTaskCompletionWhereInput[]
    NOT?: DailyTaskCompletionWhereInput | DailyTaskCompletionWhereInput[]
    id?: UuidFilter<"DailyTaskCompletion"> | string
    task_id?: UuidFilter<"DailyTaskCompletion"> | string
    user_id?: UuidFilter<"DailyTaskCompletion"> | string
    completion_date?: DateTimeFilter<"DailyTaskCompletion"> | Date | string
    created_at?: DateTimeNullableFilter<"DailyTaskCompletion"> | Date | string | null
    task?: XOR<DailyTaskScalarRelationFilter, DailyTaskWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    task_id?: SortOrder
    user_id?: SortOrder
    completion_date?: SortOrder
    created_at?: SortOrderInput | SortOrder
    task?: DailyTaskOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    id?: string
    task_id_completion_date?: DailyTaskCompletionTask_idCompletion_dateCompoundUniqueInput
    AND?: DailyTaskCompletionWhereInput | DailyTaskCompletionWhereInput[]
    OR?: DailyTaskCompletionWhereInput[]
    NOT?: DailyTaskCompletionWhereInput | DailyTaskCompletionWhereInput[]
    task_id?: UuidFilter<"DailyTaskCompletion"> | string
    user_id?: UuidFilter<"DailyTaskCompletion"> | string
    completion_date?: DateTimeFilter<"DailyTaskCompletion"> | Date | string
    created_at?: DateTimeNullableFilter<"DailyTaskCompletion"> | Date | string | null
    task?: XOR<DailyTaskScalarRelationFilter, DailyTaskWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    task_id?: SortOrder
    user_id?: SortOrder
    completion_date?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: DailyTaskCompletionCountOrderByAggregateInput
    _max?: DailyTaskCompletionMaxOrderByAggregateInput
    _min?: DailyTaskCompletionMinOrderByAggregateInput
    AND?: DailyTaskCompletionScalarWhereWithAggregatesInput | DailyTaskCompletionScalarWhereWithAggregatesInput[]
    OR?: DailyTaskCompletionScalarWhereWithAggregatesInput[]
    NOT?: DailyTaskCompletionScalarWhereWithAggregatesInput | DailyTaskCompletionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"DailyTaskCompletion"> | string
    task_id?: UuidWithAggregatesFilter<"DailyTaskCompletion"> | string
    user_id?: UuidWithAggregatesFilter<"DailyTaskCompletion"> | string
    completion_date?: DateTimeWithAggregatesFilter<"DailyTaskCompletion"> | Date | string
    created_at?: DateTimeNullableWithAggregatesFilter<"DailyTaskCompletion"> | Date | string | null
    AND?: devotional_daily_task_templatesWhereInput | devotional_daily_task_templatesWhereInput[]
    OR?: devotional_daily_task_templatesWhereInput[]
    NOT?: devotional_daily_task_templatesWhereInput | devotional_daily_task_templatesWhereInput[]
    id?: UuidFilter<"devotional_daily_task_templates"> | string
    devotional_id?: UuidFilter<"devotional_daily_task_templates"> | string
    title?: StringFilter<"devotional_daily_task_templates"> | string
    description?: StringNullableFilter<"devotional_daily_task_templates"> | string | null
    is_recurring?: BoolNullableFilter<"devotional_daily_task_templates"> | boolean | null
    created_at?: DateTimeNullableFilter<"devotional_daily_task_templates"> | Date | string | null
    devotional_goals?: XOR<DevotionalGoalScalarRelationFilter, DevotionalGoalWhereInput>
    id?: SortOrder
    devotional_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    is_recurring?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    devotional_goals?: DevotionalGoalOrderByWithRelationInput
    id?: string
    AND?: devotional_daily_task_templatesWhereInput | devotional_daily_task_templatesWhereInput[]
    OR?: devotional_daily_task_templatesWhereInput[]
    NOT?: devotional_daily_task_templatesWhereInput | devotional_daily_task_templatesWhereInput[]
    devotional_id?: UuidFilter<"devotional_daily_task_templates"> | string
    title?: StringFilter<"devotional_daily_task_templates"> | string
    description?: StringNullableFilter<"devotional_daily_task_templates"> | string | null
    is_recurring?: BoolNullableFilter<"devotional_daily_task_templates"> | boolean | null
    created_at?: DateTimeNullableFilter<"devotional_daily_task_templates"> | Date | string | null
    devotional_goals?: XOR<DevotionalGoalScalarRelationFilter, DevotionalGoalWhereInput>
    id?: SortOrder
    devotional_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    is_recurring?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: devotional_daily_task_templatesCountOrderByAggregateInput
    _max?: devotional_daily_task_templatesMaxOrderByAggregateInput
    _min?: devotional_daily_task_templatesMinOrderByAggregateInput
    AND?: devotional_daily_task_templatesScalarWhereWithAggregatesInput | devotional_daily_task_templatesScalarWhereWithAggregatesInput[]
    OR?: devotional_daily_task_templatesScalarWhereWithAggregatesInput[]
    NOT?: devotional_daily_task_templatesScalarWhereWithAggregatesInput | devotional_daily_task_templatesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"devotional_daily_task_templates"> | string
    devotional_id?: UuidWithAggregatesFilter<"devotional_daily_task_templates"> | string
    title?: StringWithAggregatesFilter<"devotional_daily_task_templates"> | string
    description?: StringNullableWithAggregatesFilter<"devotional_daily_task_templates"> | string | null
    is_recurring?: BoolNullableWithAggregatesFilter<"devotional_daily_task_templates"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"devotional_daily_task_templates"> | Date | string | null
    AND?: good_newsWhereInput | good_newsWhereInput[]
    OR?: good_newsWhereInput[]
    NOT?: good_newsWhereInput | good_newsWhereInput[]
    id?: UuidFilter<"good_news"> | string
    title?: StringFilter<"good_news"> | string
    content?: StringFilter<"good_news"> | string
    image_url?: StringNullableFilter<"good_news"> | string | null
    date?: DateTimeFilter<"good_news"> | Date | string
    created_at?: DateTimeNullableFilter<"good_news"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"good_news"> | Date | string | null
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image_url?: SortOrderInput | SortOrder
    date?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    id?: string
    AND?: good_newsWhereInput | good_newsWhereInput[]
    OR?: good_newsWhereInput[]
    NOT?: good_newsWhereInput | good_newsWhereInput[]
    title?: StringFilter<"good_news"> | string
    content?: StringFilter<"good_news"> | string
    image_url?: StringNullableFilter<"good_news"> | string | null
    date?: DateTimeFilter<"good_news"> | Date | string
    created_at?: DateTimeNullableFilter<"good_news"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"good_news"> | Date | string | null
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image_url?: SortOrderInput | SortOrder
    date?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: good_newsCountOrderByAggregateInput
    _max?: good_newsMaxOrderByAggregateInput
    _min?: good_newsMinOrderByAggregateInput
    AND?: good_newsScalarWhereWithAggregatesInput | good_newsScalarWhereWithAggregatesInput[]
    OR?: good_newsScalarWhereWithAggregatesInput[]
    NOT?: good_newsScalarWhereWithAggregatesInput | good_newsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"good_news"> | string
    title?: StringWithAggregatesFilter<"good_news"> | string
    content?: StringWithAggregatesFilter<"good_news"> | string
    image_url?: StringNullableWithAggregatesFilter<"good_news"> | string | null
    date?: DateTimeWithAggregatesFilter<"good_news"> | Date | string
    created_at?: DateTimeNullableWithAggregatesFilter<"good_news"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"good_news"> | Date | string | null
    AND?: AiPlanWhereInput | AiPlanWhereInput[]
    OR?: AiPlanWhereInput[]
    NOT?: AiPlanWhereInput | AiPlanWhereInput[]
    id?: UuidFilter<"AiPlan"> | string
    user_id?: UuidFilter<"AiPlan"> | string
    title?: StringFilter<"AiPlan"> | string
    description?: StringNullableFilter<"AiPlan"> | string | null
    created_at?: DateTimeNullableFilter<"AiPlan"> | Date | string | null
    dailyTasks?: AiPlanDailyTaskListRelationFilter
    tasks?: AiPlanTaskListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    dailyTasks?: AiPlanDailyTaskOrderByRelationAggregateInput
    tasks?: AiPlanTaskOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    id?: string
    AND?: AiPlanWhereInput | AiPlanWhereInput[]
    OR?: AiPlanWhereInput[]
    NOT?: AiPlanWhereInput | AiPlanWhereInput[]
    user_id?: UuidFilter<"AiPlan"> | string
    title?: StringFilter<"AiPlan"> | string
    description?: StringNullableFilter<"AiPlan"> | string | null
    created_at?: DateTimeNullableFilter<"AiPlan"> | Date | string | null
    dailyTasks?: AiPlanDailyTaskListRelationFilter
    tasks?: AiPlanTaskListRelationFilter
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: AiPlanCountOrderByAggregateInput
    _max?: AiPlanMaxOrderByAggregateInput
    _min?: AiPlanMinOrderByAggregateInput
    AND?: AiPlanScalarWhereWithAggregatesInput | AiPlanScalarWhereWithAggregatesInput[]
    OR?: AiPlanScalarWhereWithAggregatesInput[]
    NOT?: AiPlanScalarWhereWithAggregatesInput | AiPlanScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"AiPlan"> | string
    user_id?: UuidWithAggregatesFilter<"AiPlan"> | string
    title?: StringWithAggregatesFilter<"AiPlan"> | string
    description?: StringNullableWithAggregatesFilter<"AiPlan"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"AiPlan"> | Date | string | null
    AND?: AiPlanTaskWhereInput | AiPlanTaskWhereInput[]
    OR?: AiPlanTaskWhereInput[]
    NOT?: AiPlanTaskWhereInput | AiPlanTaskWhereInput[]
    id?: UuidFilter<"AiPlanTask"> | string
    ai_plan_id?: UuidFilter<"AiPlanTask"> | string
    day_number?: IntFilter<"AiPlanTask"> | number
    task_text?: StringFilter<"AiPlanTask"> | string
    created_at?: DateTimeNullableFilter<"AiPlanTask"> | Date | string | null
    ai_plan?: XOR<AiPlanScalarRelationFilter, AiPlanWhereInput>
    progress?: UserAiTaskProgressListRelationFilter
    id?: SortOrder
    ai_plan_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrderInput | SortOrder
    ai_plan?: AiPlanOrderByWithRelationInput
    progress?: UserAiTaskProgressOrderByRelationAggregateInput
    id?: string
    AND?: AiPlanTaskWhereInput | AiPlanTaskWhereInput[]
    OR?: AiPlanTaskWhereInput[]
    NOT?: AiPlanTaskWhereInput | AiPlanTaskWhereInput[]
    ai_plan_id?: UuidFilter<"AiPlanTask"> | string
    day_number?: IntFilter<"AiPlanTask"> | number
    task_text?: StringFilter<"AiPlanTask"> | string
    created_at?: DateTimeNullableFilter<"AiPlanTask"> | Date | string | null
    ai_plan?: XOR<AiPlanScalarRelationFilter, AiPlanWhereInput>
    progress?: UserAiTaskProgressListRelationFilter
    id?: SortOrder
    ai_plan_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: AiPlanTaskCountOrderByAggregateInput
    _avg?: AiPlanTaskAvgOrderByAggregateInput
    _max?: AiPlanTaskMaxOrderByAggregateInput
    _min?: AiPlanTaskMinOrderByAggregateInput
    _sum?: AiPlanTaskSumOrderByAggregateInput
    AND?: AiPlanTaskScalarWhereWithAggregatesInput | AiPlanTaskScalarWhereWithAggregatesInput[]
    OR?: AiPlanTaskScalarWhereWithAggregatesInput[]
    NOT?: AiPlanTaskScalarWhereWithAggregatesInput | AiPlanTaskScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"AiPlanTask"> | string
    ai_plan_id?: UuidWithAggregatesFilter<"AiPlanTask"> | string
    day_number?: IntWithAggregatesFilter<"AiPlanTask"> | number
    task_text?: StringWithAggregatesFilter<"AiPlanTask"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"AiPlanTask"> | Date | string | null
    AND?: UserAiTaskProgressWhereInput | UserAiTaskProgressWhereInput[]
    OR?: UserAiTaskProgressWhereInput[]
    NOT?: UserAiTaskProgressWhereInput | UserAiTaskProgressWhereInput[]
    id?: UuidFilter<"UserAiTaskProgress"> | string
    user_id?: UuidFilter<"UserAiTaskProgress"> | string
    ai_plan_task_id?: UuidFilter<"UserAiTaskProgress"> | string
    completed_at?: DateTimeNullableFilter<"UserAiTaskProgress"> | Date | string | null
    ai_plan_task?: XOR<AiPlanTaskScalarRelationFilter, AiPlanTaskWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    ai_plan_task_id?: SortOrder
    completed_at?: SortOrderInput | SortOrder
    ai_plan_task?: AiPlanTaskOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    id?: string
    user_id_ai_plan_task_id?: UserAiTaskProgressUser_idAi_plan_task_idCompoundUniqueInput
    AND?: UserAiTaskProgressWhereInput | UserAiTaskProgressWhereInput[]
    OR?: UserAiTaskProgressWhereInput[]
    NOT?: UserAiTaskProgressWhereInput | UserAiTaskProgressWhereInput[]
    user_id?: UuidFilter<"UserAiTaskProgress"> | string
    ai_plan_task_id?: UuidFilter<"UserAiTaskProgress"> | string
    completed_at?: DateTimeNullableFilter<"UserAiTaskProgress"> | Date | string | null
    ai_plan_task?: XOR<AiPlanTaskScalarRelationFilter, AiPlanTaskWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    id?: SortOrder
    user_id?: SortOrder
    ai_plan_task_id?: SortOrder
    completed_at?: SortOrderInput | SortOrder
    _count?: UserAiTaskProgressCountOrderByAggregateInput
    _max?: UserAiTaskProgressMaxOrderByAggregateInput
    _min?: UserAiTaskProgressMinOrderByAggregateInput
    AND?: UserAiTaskProgressScalarWhereWithAggregatesInput | UserAiTaskProgressScalarWhereWithAggregatesInput[]
    OR?: UserAiTaskProgressScalarWhereWithAggregatesInput[]
    NOT?: UserAiTaskProgressScalarWhereWithAggregatesInput | UserAiTaskProgressScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"UserAiTaskProgress"> | string
    user_id?: UuidWithAggregatesFilter<"UserAiTaskProgress"> | string
    ai_plan_task_id?: UuidWithAggregatesFilter<"UserAiTaskProgress"> | string
    completed_at?: DateTimeNullableWithAggregatesFilter<"UserAiTaskProgress"> | Date | string | null
    AND?: AiPlanDailyTaskWhereInput | AiPlanDailyTaskWhereInput[]
    OR?: AiPlanDailyTaskWhereInput[]
    NOT?: AiPlanDailyTaskWhereInput | AiPlanDailyTaskWhereInput[]
    id?: UuidFilter<"AiPlanDailyTask"> | string
    text?: StringFilter<"AiPlanDailyTask"> | string
    completed?: BoolFilter<"AiPlanDailyTask"> | boolean
    planId?: UuidFilter<"AiPlanDailyTask"> | string
    aiPlan?: XOR<AiPlanScalarRelationFilter, AiPlanWhereInput>
    id?: SortOrder
    text?: SortOrder
    completed?: SortOrder
    planId?: SortOrder
    aiPlan?: AiPlanOrderByWithRelationInput
    id?: string
    AND?: AiPlanDailyTaskWhereInput | AiPlanDailyTaskWhereInput[]
    OR?: AiPlanDailyTaskWhereInput[]
    NOT?: AiPlanDailyTaskWhereInput | AiPlanDailyTaskWhereInput[]
    text?: StringFilter<"AiPlanDailyTask"> | string
    completed?: BoolFilter<"AiPlanDailyTask"> | boolean
    planId?: UuidFilter<"AiPlanDailyTask"> | string
    aiPlan?: XOR<AiPlanScalarRelationFilter, AiPlanWhereInput>
    id?: SortOrder
    text?: SortOrder
    completed?: SortOrder
    planId?: SortOrder
    _count?: AiPlanDailyTaskCountOrderByAggregateInput
    _max?: AiPlanDailyTaskMaxOrderByAggregateInput
    _min?: AiPlanDailyTaskMinOrderByAggregateInput
    AND?: AiPlanDailyTaskScalarWhereWithAggregatesInput | AiPlanDailyTaskScalarWhereWithAggregatesInput[]
    OR?: AiPlanDailyTaskScalarWhereWithAggregatesInput[]
    NOT?: AiPlanDailyTaskScalarWhereWithAggregatesInput | AiPlanDailyTaskScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"AiPlanDailyTask"> | string
    text?: StringWithAggregatesFilter<"AiPlanDailyTask"> | string
    completed?: BoolWithAggregatesFilter<"AiPlanDailyTask"> | boolean
    planId?: UuidWithAggregatesFilter<"AiPlanDailyTask"> | string
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
  export type UserCreateManyInput = {
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagCreateNestedManyWithoutReflectionInput
    user: UserCreateNestedOneWithoutReflectionsInput
    id?: string
    user_id: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedCreateNestedManyWithoutReflectionInput
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUpdateManyWithoutReflectionNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedUpdateManyWithoutReflectionNestedInput
  export type ReflectionCreateManyInput = {
    id?: string
    user_id: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
  export type ReflectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  export type ReflectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    id?: string
    created_at?: Date | string | null
    reflection: ReflectionCreateNestedOneWithoutLikesInput
    user: UserCreateNestedOneWithoutLikesInput
    id?: string
    reflection_id: string
    user_id: string
    created_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reflection?: ReflectionUpdateOneRequiredWithoutLikesNestedInput
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type LikeCreateManyInput = {
    id?: string
    reflection_id: string
    user_id: string
    created_at?: Date | string | null
  export type LikeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type LikeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
    reflection: ReflectionCreateNestedOneWithoutReflectionCommentsInput
    user: UserCreateNestedOneWithoutReflectionCommentsInput
    id?: string
    reflection_id: string
    user_id: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
    id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reflection?: ReflectionUpdateOneRequiredWithoutReflectionCommentsNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionCommentsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  export type ReflectionCommentCreateManyInput = {
    id?: string
    reflection_id: string
    user_id: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
  export type ReflectionCommentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  export type ReflectionCommentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    id?: string
    created_at?: Date | string | null
    reflection: ReflectionCreateNestedOneWithoutReflectionLikesInput
    user: UserCreateNestedOneWithoutReflectionLikesInput
    id?: string
    reflection_id: string
    user_id: string
    created_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reflection?: ReflectionUpdateOneRequiredWithoutReflectionLikesNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionLikesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type ReflectionLikeCreateManyInput = {
    id?: string
    reflection_id: string
    user_id: string
    created_at?: Date | string | null
  export type ReflectionLikeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type ReflectionLikeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    title: string
    content: string
    mood?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    user: UserCreateNestedOneWithoutJournalsInput
    id?: string
    user_id: string
    title: string
    content: string
    mood?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutJournalsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type JournalCreateManyInput = {
    id?: string
    user_id: string
    title: string
    content: string
    mood?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  export type JournalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type JournalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesCreateNestedManyWithoutDevotional_goalsInput
    tasks?: DevotionalTaskCreateNestedManyWithoutGoalInput
    users?: UserCreateNestedManyWithoutDevotionalGoalInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUncheckedCreateNestedManyWithoutDevotional_goalsInput
    tasks?: DevotionalTaskUncheckedCreateNestedManyWithoutGoalInput
    users?: UserUncheckedCreateNestedManyWithoutDevotionalGoalInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUpdateManyWithoutDevotional_goalsNestedInput
    tasks?: DevotionalTaskUpdateManyWithoutGoalNestedInput
    users?: UserUpdateManyWithoutDevotionalGoalNestedInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUncheckedUpdateManyWithoutDevotional_goalsNestedInput
    tasks?: DevotionalTaskUncheckedUpdateManyWithoutGoalNestedInput
    users?: UserUncheckedUpdateManyWithoutDevotionalGoalNestedInput
  export type DevotionalGoalCreateManyInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
  export type DevotionalGoalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type DevotionalGoalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    goal?: DevotionalGoalCreateNestedOneWithoutTasksInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutDevotional_taskInput
    id?: string
    goal_id?: string | null
    day_number: number
    task_text: string
    created_at?: Date | string | null
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutDevotional_taskInput
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    goal?: DevotionalGoalUpdateOneWithoutTasksNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutDevotional_taskNestedInput
    id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutDevotional_taskNestedInput
  export type DevotionalTaskCreateManyInput = {
    id?: string
    goal_id?: string | null
    day_number: number
    task_text: string
    created_at?: Date | string | null
  export type DevotionalTaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type DevotionalTaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    devotional_task?: DevotionalTaskCreateNestedOneWithoutUser_task_progressInput
    users?: UserCreateNestedOneWithoutUser_task_progressInput
    id?: string
    user_id?: string | null
    devotional_task_id?: string | null
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_task?: DevotionalTaskUpdateOneWithoutUser_task_progressNestedInput
    users?: UserUpdateOneWithoutUser_task_progressNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_task_id?: NullableStringFieldUpdateOperationsInput | string | null
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserTaskProgressCreateManyInput = {
    id?: string
    user_id?: string | null
    devotional_task_id?: string | null
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
  export type UserTaskProgressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserTaskProgressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_task_id?: NullableStringFieldUpdateOperationsInput | string | null
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    name: string
    reflectionNicheTags?: ReflectionNicheTagCreateNestedManyWithoutNicheTagInput
    id?: string
    name: string
    reflectionNicheTags?: ReflectionNicheTagUncheckedCreateNestedManyWithoutNicheTagInput
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    reflectionNicheTags?: ReflectionNicheTagUpdateManyWithoutNicheTagNestedInput
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    reflectionNicheTags?: ReflectionNicheTagUncheckedUpdateManyWithoutNicheTagNestedInput
  export type NicheTagCreateManyInput = {
    id?: string
    name: string
  export type NicheTagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  export type NicheTagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    nicheTag: NicheTagCreateNestedOneWithoutReflectionNicheTagsInput
    reflection: ReflectionCreateNestedOneWithoutReflectionNicheTagsInput
    reflection_id: string
    niche_tag_id: string
    nicheTag?: NicheTagUpdateOneRequiredWithoutReflectionNicheTagsNestedInput
    reflection?: ReflectionUpdateOneRequiredWithoutReflectionNicheTagsNestedInput
    reflection_id?: StringFieldUpdateOperationsInput | string
    niche_tag_id?: StringFieldUpdateOperationsInput | string
  export type ReflectionNicheTagCreateManyInput = {
    reflection_id: string
    niche_tag_id: string
  export type ReflectionNicheTagUpdateManyMutationInput = {
  export type ReflectionNicheTagUncheckedUpdateManyInput = {
    reflection_id?: StringFieldUpdateOperationsInput | string
    niche_tag_id?: StringFieldUpdateOperationsInput | string
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
    completions?: DailyTaskCompletionCreateNestedManyWithoutTaskInput
    user: UserCreateNestedOneWithoutDailyTasksInput
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
    completions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutTaskInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completions?: DailyTaskCompletionUpdateManyWithoutTaskNestedInput
    user?: UserUpdateOneRequiredWithoutDailyTasksNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completions?: DailyTaskCompletionUncheckedUpdateManyWithoutTaskNestedInput
  export type DailyTaskCreateManyInput = {
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
  export type DailyTaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
  export type DailyTaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id?: string
    completion_date: Date | string
    created_at?: Date | string | null
    task: DailyTaskCreateNestedOneWithoutCompletionsInput
    user: UserCreateNestedOneWithoutDailyTaskCompletionsInput
    id?: string
    task_id: string
    user_id: string
    completion_date: Date | string
    created_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    task?: DailyTaskUpdateOneRequiredWithoutCompletionsNestedInput
    user?: UserUpdateOneRequiredWithoutDailyTaskCompletionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    task_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type DailyTaskCompletionCreateManyInput = {
    id?: string
    task_id: string
    user_id: string
    completion_date: Date | string
    created_at?: Date | string | null
  export type DailyTaskCompletionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type DailyTaskCompletionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    task_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    title: string
    description?: string | null
    is_recurring?: boolean | null
    created_at?: Date | string | null
    devotional_goals: DevotionalGoalCreateNestedOneWithoutDevotional_daily_task_templatesInput
    id?: string
    devotional_id: string
    title: string
    description?: string | null
    is_recurring?: boolean | null
    created_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_goals?: DevotionalGoalUpdateOneRequiredWithoutDevotional_daily_task_templatesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    devotional_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type devotional_daily_task_templatesCreateManyInput = {
    id?: string
    devotional_id: string
    title: string
    description?: string | null
    is_recurring?: boolean | null
    created_at?: Date | string | null
  export type devotional_daily_task_templatesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type devotional_daily_task_templatesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    devotional_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    title: string
    content: string
    image_url?: string | null
    date?: Date | string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    id?: string
    title: string
    content: string
    image_url?: string | null
    date?: Date | string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type good_newsCreateManyInput = {
    id?: string
    title: string
    content: string
    image_url?: string | null
    date?: Date | string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  export type good_newsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type good_newsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    dailyTasks?: AiPlanDailyTaskCreateNestedManyWithoutAiPlanInput
    tasks?: AiPlanTaskCreateNestedManyWithoutAi_planInput
    user: UserCreateNestedOneWithoutAiPlanInput
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    dailyTasks?: AiPlanDailyTaskUncheckedCreateNestedManyWithoutAiPlanInput
    tasks?: AiPlanTaskUncheckedCreateNestedManyWithoutAi_planInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyTasks?: AiPlanDailyTaskUpdateManyWithoutAiPlanNestedInput
    tasks?: AiPlanTaskUpdateManyWithoutAi_planNestedInput
    user?: UserUpdateOneRequiredWithoutAiPlanNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyTasks?: AiPlanDailyTaskUncheckedUpdateManyWithoutAiPlanNestedInput
    tasks?: AiPlanTaskUncheckedUpdateManyWithoutAi_planNestedInput
  export type AiPlanCreateManyInput = {
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
  export type AiPlanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type AiPlanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    ai_plan: AiPlanCreateNestedOneWithoutTasksInput
    progress?: UserAiTaskProgressCreateNestedManyWithoutAi_plan_taskInput
    id?: string
    ai_plan_id: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    progress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutAi_plan_taskInput
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ai_plan?: AiPlanUpdateOneRequiredWithoutTasksNestedInput
    progress?: UserAiTaskProgressUpdateManyWithoutAi_plan_taskNestedInput
    id?: StringFieldUpdateOperationsInput | string
    ai_plan_id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: UserAiTaskProgressUncheckedUpdateManyWithoutAi_plan_taskNestedInput
  export type AiPlanTaskCreateManyInput = {
    id?: string
    ai_plan_id: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
  export type AiPlanTaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type AiPlanTaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ai_plan_id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    completed_at?: Date | string | null
    ai_plan_task: AiPlanTaskCreateNestedOneWithoutProgressInput
    user: UserCreateNestedOneWithoutUserAiTaskProgressInput
    id?: string
    user_id: string
    ai_plan_task_id: string
    completed_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ai_plan_task?: AiPlanTaskUpdateOneRequiredWithoutProgressNestedInput
    user?: UserUpdateOneRequiredWithoutUserAiTaskProgressNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    ai_plan_task_id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserAiTaskProgressCreateManyInput = {
    id?: string
    user_id: string
    ai_plan_task_id: string
    completed_at?: Date | string | null
  export type UserAiTaskProgressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserAiTaskProgressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    ai_plan_task_id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: string
    text: string
    completed?: boolean
    aiPlan: AiPlanCreateNestedOneWithoutDailyTasksInput
    id?: string
    text: string
    completed?: boolean
    planId: string
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    aiPlan?: AiPlanUpdateOneRequiredWithoutDailyTasksNestedInput
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    planId?: StringFieldUpdateOperationsInput | string
  export type AiPlanDailyTaskCreateManyInput = {
    id?: string
    text: string
    completed?: boolean
    planId: string
  export type AiPlanDailyTaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
  export type AiPlanDailyTaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    planId?: StringFieldUpdateOperationsInput | string
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
    every?: AiPlanWhereInput
    some?: AiPlanWhereInput
    none?: AiPlanWhereInput
    every?: DailyTaskCompletionWhereInput
    some?: DailyTaskCompletionWhereInput
    none?: DailyTaskCompletionWhereInput
    every?: DailyTaskWhereInput
    some?: DailyTaskWhereInput
    none?: DailyTaskWhereInput
    every?: JournalWhereInput
    some?: JournalWhereInput
    none?: JournalWhereInput
    every?: LikeWhereInput
    some?: LikeWhereInput
    none?: LikeWhereInput
    every?: ReflectionCommentWhereInput
    some?: ReflectionCommentWhereInput
    none?: ReflectionCommentWhereInput
    every?: ReflectionLikeWhereInput
    some?: ReflectionLikeWhereInput
    none?: ReflectionLikeWhereInput
    every?: ReflectionWhereInput
    some?: ReflectionWhereInput
    none?: ReflectionWhereInput
    every?: UserAiTaskProgressWhereInput
    some?: UserAiTaskProgressWhereInput
    none?: UserAiTaskProgressWhereInput
    every?: UserTaskProgressWhereInput
    some?: UserTaskProgressWhereInput
    none?: UserTaskProgressWhereInput
    is?: DevotionalGoalWhereInput | null
    isNot?: DevotionalGoalWhereInput | null
    sort: SortOrder
    nulls?: NullsOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    emailOptIn?: SortOrder
    streak?: SortOrder
    streak_last_date?: SortOrder
    avatar?: SortOrder
    devotional_goal_id?: SortOrder
    is_admin?: SortOrder
    streak?: SortOrder
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    emailOptIn?: SortOrder
    streak?: SortOrder
    streak_last_date?: SortOrder
    avatar?: SortOrder
    devotional_goal_id?: SortOrder
    is_admin?: SortOrder
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    emailOptIn?: SortOrder
    streak?: SortOrder
    streak_last_date?: SortOrder
    avatar?: SortOrder
    devotional_goal_id?: SortOrder
    is_admin?: SortOrder
    streak?: SortOrder
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    every?: ReflectionNicheTagWhereInput
    some?: ReflectionNicheTagWhereInput
    none?: ReflectionNicheTagWhereInput
    is?: UserWhereInput
    isNot?: UserWhereInput
    _count?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    mood?: SortOrder
    created_at?: SortOrder
    status?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    mood?: SortOrder
    created_at?: SortOrder
    status?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    mood?: SortOrder
    created_at?: SortOrder
    status?: SortOrder
    is?: ReflectionWhereInput
    isNot?: ReflectionWhereInput
    reflection_id: string
    user_id: string
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrder
    status?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrder
    status?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrder
    status?: SortOrder
    reflection_id: string
    user_id: string
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    reflection_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    mood?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    mood?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    mood?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    every?: devotional_daily_task_templatesWhereInput
    some?: devotional_daily_task_templatesWhereInput
    none?: devotional_daily_task_templatesWhereInput
    every?: DevotionalTaskWhereInput
    some?: DevotionalTaskWhereInput
    none?: DevotionalTaskWhereInput
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
    _count?: SortOrder
    _count?: SortOrder
    _count?: SortOrder
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    goal_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrder
    day_number?: SortOrder
    id?: SortOrder
    goal_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    goal_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrder
    day_number?: SortOrder
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
    is?: DevotionalTaskWhereInput | null
    isNot?: DevotionalTaskWhereInput | null
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
    user_id: string
    completion_date: Date | string
    id?: SortOrder
    user_id?: SortOrder
    devotional_task_id?: SortOrder
    completion_date?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    devotional_task_id?: SortOrder
    completion_date?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    devotional_task_id?: SortOrder
    completion_date?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
    id?: SortOrder
    name?: SortOrder
    id?: SortOrder
    name?: SortOrder
    id?: SortOrder
    name?: SortOrder
    is?: NicheTagWhereInput
    isNot?: NicheTagWhereInput
    niche_tag_id: string
    reflection_id: string
    reflection_id: string
    niche_tag_id: string
    reflection_id?: SortOrder
    niche_tag_id?: SortOrder
    reflection_id?: SortOrder
    niche_tag_id?: SortOrder
    reflection_id?: SortOrder
    niche_tag_id?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_recurring?: SortOrder
    ai_generated?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_recurring?: SortOrder
    ai_generated?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_recurring?: SortOrder
    ai_generated?: SortOrder
    is?: DailyTaskWhereInput
    isNot?: DailyTaskWhereInput
    task_id: string
    completion_date: Date | string
    id?: SortOrder
    task_id?: SortOrder
    user_id?: SortOrder
    completion_date?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    task_id?: SortOrder
    user_id?: SortOrder
    completion_date?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    task_id?: SortOrder
    user_id?: SortOrder
    completion_date?: SortOrder
    created_at?: SortOrder
    is?: DevotionalGoalWhereInput
    isNot?: DevotionalGoalWhereInput
    id?: SortOrder
    devotional_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    is_recurring?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    devotional_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    is_recurring?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    devotional_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    is_recurring?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image_url?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image_url?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image_url?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    every?: AiPlanDailyTaskWhereInput
    some?: AiPlanDailyTaskWhereInput
    none?: AiPlanDailyTaskWhereInput
    every?: AiPlanTaskWhereInput
    some?: AiPlanTaskWhereInput
    none?: AiPlanTaskWhereInput
    _count?: SortOrder
    _count?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    is?: AiPlanWhereInput
    isNot?: AiPlanWhereInput
    id?: SortOrder
    ai_plan_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrder
    day_number?: SortOrder
    id?: SortOrder
    ai_plan_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrder
    id?: SortOrder
    ai_plan_id?: SortOrder
    day_number?: SortOrder
    task_text?: SortOrder
    created_at?: SortOrder
    day_number?: SortOrder
    is?: AiPlanTaskWhereInput
    isNot?: AiPlanTaskWhereInput
    user_id: string
    ai_plan_task_id: string
    id?: SortOrder
    user_id?: SortOrder
    ai_plan_task_id?: SortOrder
    completed_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    ai_plan_task_id?: SortOrder
    completed_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    ai_plan_task_id?: SortOrder
    completed_at?: SortOrder
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
    id?: SortOrder
    text?: SortOrder
    completed?: SortOrder
    planId?: SortOrder
    id?: SortOrder
    text?: SortOrder
    completed?: SortOrder
    planId?: SortOrder
    id?: SortOrder
    text?: SortOrder
    completed?: SortOrder
    planId?: SortOrder
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  export type AiPlanCreateNestedManyWithoutUserInput = {
    create?: XOR<AiPlanCreateWithoutUserInput, AiPlanUncheckedCreateWithoutUserInput> | AiPlanCreateWithoutUserInput[] | AiPlanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AiPlanCreateOrConnectWithoutUserInput | AiPlanCreateOrConnectWithoutUserInput[]
    createMany?: AiPlanCreateManyUserInputEnvelope
    connect?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
  export type DailyTaskCompletionCreateNestedManyWithoutUserInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutUserInput, DailyTaskCompletionUncheckedCreateWithoutUserInput> | DailyTaskCompletionCreateWithoutUserInput[] | DailyTaskCompletionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutUserInput | DailyTaskCompletionCreateOrConnectWithoutUserInput[]
    createMany?: DailyTaskCompletionCreateManyUserInputEnvelope
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
  export type DailyTaskCreateNestedManyWithoutUserInput = {
    create?: XOR<DailyTaskCreateWithoutUserInput, DailyTaskUncheckedCreateWithoutUserInput> | DailyTaskCreateWithoutUserInput[] | DailyTaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCreateOrConnectWithoutUserInput | DailyTaskCreateOrConnectWithoutUserInput[]
    createMany?: DailyTaskCreateManyUserInputEnvelope
    connect?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
  export type JournalCreateNestedManyWithoutUserInput = {
    create?: XOR<JournalCreateWithoutUserInput, JournalUncheckedCreateWithoutUserInput> | JournalCreateWithoutUserInput[] | JournalUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalCreateOrConnectWithoutUserInput | JournalCreateOrConnectWithoutUserInput[]
    createMany?: JournalCreateManyUserInputEnvelope
    connect?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
  export type LikeCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  export type ReflectionCommentCreateNestedManyWithoutUserInput = {
    create?: XOR<ReflectionCommentCreateWithoutUserInput, ReflectionCommentUncheckedCreateWithoutUserInput> | ReflectionCommentCreateWithoutUserInput[] | ReflectionCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutUserInput | ReflectionCommentCreateOrConnectWithoutUserInput[]
    createMany?: ReflectionCommentCreateManyUserInputEnvelope
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
  export type ReflectionLikeCreateNestedManyWithoutUserInput = {
    create?: XOR<ReflectionLikeCreateWithoutUserInput, ReflectionLikeUncheckedCreateWithoutUserInput> | ReflectionLikeCreateWithoutUserInput[] | ReflectionLikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutUserInput | ReflectionLikeCreateOrConnectWithoutUserInput[]
    createMany?: ReflectionLikeCreateManyUserInputEnvelope
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
  export type ReflectionCreateNestedManyWithoutUserInput = {
    create?: XOR<ReflectionCreateWithoutUserInput, ReflectionUncheckedCreateWithoutUserInput> | ReflectionCreateWithoutUserInput[] | ReflectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCreateOrConnectWithoutUserInput | ReflectionCreateOrConnectWithoutUserInput[]
    createMany?: ReflectionCreateManyUserInputEnvelope
    connect?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
  export type UserAiTaskProgressCreateNestedManyWithoutUserInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutUserInput, UserAiTaskProgressUncheckedCreateWithoutUserInput> | UserAiTaskProgressCreateWithoutUserInput[] | UserAiTaskProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutUserInput | UserAiTaskProgressCreateOrConnectWithoutUserInput[]
    createMany?: UserAiTaskProgressCreateManyUserInputEnvelope
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
  export type UserTaskProgressCreateNestedManyWithoutUsersInput = {
    create?: XOR<UserTaskProgressCreateWithoutUsersInput, UserTaskProgressUncheckedCreateWithoutUsersInput> | UserTaskProgressCreateWithoutUsersInput[] | UserTaskProgressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutUsersInput | UserTaskProgressCreateOrConnectWithoutUsersInput[]
    createMany?: UserTaskProgressCreateManyUsersInputEnvelope
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    create?: XOR<DevotionalGoalCreateWithoutUsersInput, DevotionalGoalUncheckedCreateWithoutUsersInput>
    connectOrCreate?: DevotionalGoalCreateOrConnectWithoutUsersInput
    connect?: DevotionalGoalWhereUniqueInput
  export type AiPlanUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AiPlanCreateWithoutUserInput, AiPlanUncheckedCreateWithoutUserInput> | AiPlanCreateWithoutUserInput[] | AiPlanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AiPlanCreateOrConnectWithoutUserInput | AiPlanCreateOrConnectWithoutUserInput[]
    createMany?: AiPlanCreateManyUserInputEnvelope
    connect?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
  export type DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutUserInput, DailyTaskCompletionUncheckedCreateWithoutUserInput> | DailyTaskCompletionCreateWithoutUserInput[] | DailyTaskCompletionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutUserInput | DailyTaskCompletionCreateOrConnectWithoutUserInput[]
    createMany?: DailyTaskCompletionCreateManyUserInputEnvelope
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
  export type DailyTaskUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DailyTaskCreateWithoutUserInput, DailyTaskUncheckedCreateWithoutUserInput> | DailyTaskCreateWithoutUserInput[] | DailyTaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCreateOrConnectWithoutUserInput | DailyTaskCreateOrConnectWithoutUserInput[]
    createMany?: DailyTaskCreateManyUserInputEnvelope
    connect?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
  export type JournalUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<JournalCreateWithoutUserInput, JournalUncheckedCreateWithoutUserInput> | JournalCreateWithoutUserInput[] | JournalUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalCreateOrConnectWithoutUserInput | JournalCreateOrConnectWithoutUserInput[]
    createMany?: JournalCreateManyUserInputEnvelope
    connect?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
  export type LikeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  export type ReflectionCommentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReflectionCommentCreateWithoutUserInput, ReflectionCommentUncheckedCreateWithoutUserInput> | ReflectionCommentCreateWithoutUserInput[] | ReflectionCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutUserInput | ReflectionCommentCreateOrConnectWithoutUserInput[]
    createMany?: ReflectionCommentCreateManyUserInputEnvelope
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
  export type ReflectionLikeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReflectionLikeCreateWithoutUserInput, ReflectionLikeUncheckedCreateWithoutUserInput> | ReflectionLikeCreateWithoutUserInput[] | ReflectionLikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutUserInput | ReflectionLikeCreateOrConnectWithoutUserInput[]
    createMany?: ReflectionLikeCreateManyUserInputEnvelope
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
  export type ReflectionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReflectionCreateWithoutUserInput, ReflectionUncheckedCreateWithoutUserInput> | ReflectionCreateWithoutUserInput[] | ReflectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCreateOrConnectWithoutUserInput | ReflectionCreateOrConnectWithoutUserInput[]
    createMany?: ReflectionCreateManyUserInputEnvelope
    connect?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
  export type UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutUserInput, UserAiTaskProgressUncheckedCreateWithoutUserInput> | UserAiTaskProgressCreateWithoutUserInput[] | UserAiTaskProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutUserInput | UserAiTaskProgressCreateOrConnectWithoutUserInput[]
    createMany?: UserAiTaskProgressCreateManyUserInputEnvelope
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
  export type UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<UserTaskProgressCreateWithoutUsersInput, UserTaskProgressUncheckedCreateWithoutUsersInput> | UserTaskProgressCreateWithoutUsersInput[] | UserTaskProgressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutUsersInput | UserTaskProgressCreateOrConnectWithoutUsersInput[]
    createMany?: UserTaskProgressCreateManyUsersInputEnvelope
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    set?: string
    set?: string | null
    set?: boolean | null
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
    set?: Date | string | null
  export type AiPlanUpdateManyWithoutUserNestedInput = {
    create?: XOR<AiPlanCreateWithoutUserInput, AiPlanUncheckedCreateWithoutUserInput> | AiPlanCreateWithoutUserInput[] | AiPlanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AiPlanCreateOrConnectWithoutUserInput | AiPlanCreateOrConnectWithoutUserInput[]
    upsert?: AiPlanUpsertWithWhereUniqueWithoutUserInput | AiPlanUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AiPlanCreateManyUserInputEnvelope
    set?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    disconnect?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    delete?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    connect?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    update?: AiPlanUpdateWithWhereUniqueWithoutUserInput | AiPlanUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AiPlanUpdateManyWithWhereWithoutUserInput | AiPlanUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AiPlanScalarWhereInput | AiPlanScalarWhereInput[]
  export type DailyTaskCompletionUpdateManyWithoutUserNestedInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutUserInput, DailyTaskCompletionUncheckedCreateWithoutUserInput> | DailyTaskCompletionCreateWithoutUserInput[] | DailyTaskCompletionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutUserInput | DailyTaskCompletionCreateOrConnectWithoutUserInput[]
    upsert?: DailyTaskCompletionUpsertWithWhereUniqueWithoutUserInput | DailyTaskCompletionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DailyTaskCompletionCreateManyUserInputEnvelope
    set?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    disconnect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    delete?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    update?: DailyTaskCompletionUpdateWithWhereUniqueWithoutUserInput | DailyTaskCompletionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DailyTaskCompletionUpdateManyWithWhereWithoutUserInput | DailyTaskCompletionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DailyTaskCompletionScalarWhereInput | DailyTaskCompletionScalarWhereInput[]
  export type DailyTaskUpdateManyWithoutUserNestedInput = {
    create?: XOR<DailyTaskCreateWithoutUserInput, DailyTaskUncheckedCreateWithoutUserInput> | DailyTaskCreateWithoutUserInput[] | DailyTaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCreateOrConnectWithoutUserInput | DailyTaskCreateOrConnectWithoutUserInput[]
    upsert?: DailyTaskUpsertWithWhereUniqueWithoutUserInput | DailyTaskUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DailyTaskCreateManyUserInputEnvelope
    set?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    disconnect?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    delete?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    connect?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    update?: DailyTaskUpdateWithWhereUniqueWithoutUserInput | DailyTaskUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DailyTaskUpdateManyWithWhereWithoutUserInput | DailyTaskUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DailyTaskScalarWhereInput | DailyTaskScalarWhereInput[]
  export type JournalUpdateManyWithoutUserNestedInput = {
    create?: XOR<JournalCreateWithoutUserInput, JournalUncheckedCreateWithoutUserInput> | JournalCreateWithoutUserInput[] | JournalUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalCreateOrConnectWithoutUserInput | JournalCreateOrConnectWithoutUserInput[]
    upsert?: JournalUpsertWithWhereUniqueWithoutUserInput | JournalUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: JournalCreateManyUserInputEnvelope
    set?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    disconnect?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    delete?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    connect?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    update?: JournalUpdateWithWhereUniqueWithoutUserInput | JournalUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: JournalUpdateManyWithWhereWithoutUserInput | JournalUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: JournalScalarWhereInput | JournalScalarWhereInput[]
  export type LikeUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  export type ReflectionCommentUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReflectionCommentCreateWithoutUserInput, ReflectionCommentUncheckedCreateWithoutUserInput> | ReflectionCommentCreateWithoutUserInput[] | ReflectionCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutUserInput | ReflectionCommentCreateOrConnectWithoutUserInput[]
    upsert?: ReflectionCommentUpsertWithWhereUniqueWithoutUserInput | ReflectionCommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReflectionCommentCreateManyUserInputEnvelope
    set?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    disconnect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    delete?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    update?: ReflectionCommentUpdateWithWhereUniqueWithoutUserInput | ReflectionCommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReflectionCommentUpdateManyWithWhereWithoutUserInput | ReflectionCommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReflectionCommentScalarWhereInput | ReflectionCommentScalarWhereInput[]
  export type ReflectionLikeUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReflectionLikeCreateWithoutUserInput, ReflectionLikeUncheckedCreateWithoutUserInput> | ReflectionLikeCreateWithoutUserInput[] | ReflectionLikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutUserInput | ReflectionLikeCreateOrConnectWithoutUserInput[]
    upsert?: ReflectionLikeUpsertWithWhereUniqueWithoutUserInput | ReflectionLikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReflectionLikeCreateManyUserInputEnvelope
    set?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    disconnect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    delete?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    update?: ReflectionLikeUpdateWithWhereUniqueWithoutUserInput | ReflectionLikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReflectionLikeUpdateManyWithWhereWithoutUserInput | ReflectionLikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReflectionLikeScalarWhereInput | ReflectionLikeScalarWhereInput[]
  export type ReflectionUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReflectionCreateWithoutUserInput, ReflectionUncheckedCreateWithoutUserInput> | ReflectionCreateWithoutUserInput[] | ReflectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCreateOrConnectWithoutUserInput | ReflectionCreateOrConnectWithoutUserInput[]
    upsert?: ReflectionUpsertWithWhereUniqueWithoutUserInput | ReflectionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReflectionCreateManyUserInputEnvelope
    set?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    disconnect?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    delete?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    connect?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    update?: ReflectionUpdateWithWhereUniqueWithoutUserInput | ReflectionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReflectionUpdateManyWithWhereWithoutUserInput | ReflectionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReflectionScalarWhereInput | ReflectionScalarWhereInput[]
  export type UserAiTaskProgressUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutUserInput, UserAiTaskProgressUncheckedCreateWithoutUserInput> | UserAiTaskProgressCreateWithoutUserInput[] | UserAiTaskProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutUserInput | UserAiTaskProgressCreateOrConnectWithoutUserInput[]
    upsert?: UserAiTaskProgressUpsertWithWhereUniqueWithoutUserInput | UserAiTaskProgressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserAiTaskProgressCreateManyUserInputEnvelope
    set?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    disconnect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    delete?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    update?: UserAiTaskProgressUpdateWithWhereUniqueWithoutUserInput | UserAiTaskProgressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserAiTaskProgressUpdateManyWithWhereWithoutUserInput | UserAiTaskProgressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserAiTaskProgressScalarWhereInput | UserAiTaskProgressScalarWhereInput[]
  export type UserTaskProgressUpdateManyWithoutUsersNestedInput = {
    create?: XOR<UserTaskProgressCreateWithoutUsersInput, UserTaskProgressUncheckedCreateWithoutUsersInput> | UserTaskProgressCreateWithoutUsersInput[] | UserTaskProgressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutUsersInput | UserTaskProgressCreateOrConnectWithoutUsersInput[]
    upsert?: UserTaskProgressUpsertWithWhereUniqueWithoutUsersInput | UserTaskProgressUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: UserTaskProgressCreateManyUsersInputEnvelope
    set?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    disconnect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    delete?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    update?: UserTaskProgressUpdateWithWhereUniqueWithoutUsersInput | UserTaskProgressUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: UserTaskProgressUpdateManyWithWhereWithoutUsersInput | UserTaskProgressUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: UserTaskProgressScalarWhereInput | UserTaskProgressScalarWhereInput[]
    create?: XOR<DevotionalGoalCreateWithoutUsersInput, DevotionalGoalUncheckedCreateWithoutUsersInput>
    connectOrCreate?: DevotionalGoalCreateOrConnectWithoutUsersInput
    upsert?: DevotionalGoalUpsertWithoutUsersInput
    disconnect?: DevotionalGoalWhereInput | boolean
    delete?: DevotionalGoalWhereInput | boolean
    connect?: DevotionalGoalWhereUniqueInput
    update?: XOR<XOR<DevotionalGoalUpdateToOneWithWhereWithoutUsersInput, DevotionalGoalUpdateWithoutUsersInput>, DevotionalGoalUncheckedUpdateWithoutUsersInput>
  export type AiPlanUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AiPlanCreateWithoutUserInput, AiPlanUncheckedCreateWithoutUserInput> | AiPlanCreateWithoutUserInput[] | AiPlanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AiPlanCreateOrConnectWithoutUserInput | AiPlanCreateOrConnectWithoutUserInput[]
    upsert?: AiPlanUpsertWithWhereUniqueWithoutUserInput | AiPlanUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AiPlanCreateManyUserInputEnvelope
    set?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    disconnect?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    delete?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    connect?: AiPlanWhereUniqueInput | AiPlanWhereUniqueInput[]
    update?: AiPlanUpdateWithWhereUniqueWithoutUserInput | AiPlanUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AiPlanUpdateManyWithWhereWithoutUserInput | AiPlanUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AiPlanScalarWhereInput | AiPlanScalarWhereInput[]
  export type DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutUserInput, DailyTaskCompletionUncheckedCreateWithoutUserInput> | DailyTaskCompletionCreateWithoutUserInput[] | DailyTaskCompletionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutUserInput | DailyTaskCompletionCreateOrConnectWithoutUserInput[]
    upsert?: DailyTaskCompletionUpsertWithWhereUniqueWithoutUserInput | DailyTaskCompletionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DailyTaskCompletionCreateManyUserInputEnvelope
    set?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    disconnect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    delete?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    update?: DailyTaskCompletionUpdateWithWhereUniqueWithoutUserInput | DailyTaskCompletionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DailyTaskCompletionUpdateManyWithWhereWithoutUserInput | DailyTaskCompletionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DailyTaskCompletionScalarWhereInput | DailyTaskCompletionScalarWhereInput[]
  export type DailyTaskUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DailyTaskCreateWithoutUserInput, DailyTaskUncheckedCreateWithoutUserInput> | DailyTaskCreateWithoutUserInput[] | DailyTaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DailyTaskCreateOrConnectWithoutUserInput | DailyTaskCreateOrConnectWithoutUserInput[]
    upsert?: DailyTaskUpsertWithWhereUniqueWithoutUserInput | DailyTaskUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DailyTaskCreateManyUserInputEnvelope
    set?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    disconnect?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    delete?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    connect?: DailyTaskWhereUniqueInput | DailyTaskWhereUniqueInput[]
    update?: DailyTaskUpdateWithWhereUniqueWithoutUserInput | DailyTaskUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DailyTaskUpdateManyWithWhereWithoutUserInput | DailyTaskUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DailyTaskScalarWhereInput | DailyTaskScalarWhereInput[]
  export type JournalUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<JournalCreateWithoutUserInput, JournalUncheckedCreateWithoutUserInput> | JournalCreateWithoutUserInput[] | JournalUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalCreateOrConnectWithoutUserInput | JournalCreateOrConnectWithoutUserInput[]
    upsert?: JournalUpsertWithWhereUniqueWithoutUserInput | JournalUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: JournalCreateManyUserInputEnvelope
    set?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    disconnect?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    delete?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    connect?: JournalWhereUniqueInput | JournalWhereUniqueInput[]
    update?: JournalUpdateWithWhereUniqueWithoutUserInput | JournalUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: JournalUpdateManyWithWhereWithoutUserInput | JournalUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: JournalScalarWhereInput | JournalScalarWhereInput[]
  export type LikeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  export type ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReflectionCommentCreateWithoutUserInput, ReflectionCommentUncheckedCreateWithoutUserInput> | ReflectionCommentCreateWithoutUserInput[] | ReflectionCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutUserInput | ReflectionCommentCreateOrConnectWithoutUserInput[]
    upsert?: ReflectionCommentUpsertWithWhereUniqueWithoutUserInput | ReflectionCommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReflectionCommentCreateManyUserInputEnvelope
    set?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    disconnect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    delete?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    update?: ReflectionCommentUpdateWithWhereUniqueWithoutUserInput | ReflectionCommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReflectionCommentUpdateManyWithWhereWithoutUserInput | ReflectionCommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReflectionCommentScalarWhereInput | ReflectionCommentScalarWhereInput[]
  export type ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReflectionLikeCreateWithoutUserInput, ReflectionLikeUncheckedCreateWithoutUserInput> | ReflectionLikeCreateWithoutUserInput[] | ReflectionLikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutUserInput | ReflectionLikeCreateOrConnectWithoutUserInput[]
    upsert?: ReflectionLikeUpsertWithWhereUniqueWithoutUserInput | ReflectionLikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReflectionLikeCreateManyUserInputEnvelope
    set?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    disconnect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    delete?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    update?: ReflectionLikeUpdateWithWhereUniqueWithoutUserInput | ReflectionLikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReflectionLikeUpdateManyWithWhereWithoutUserInput | ReflectionLikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReflectionLikeScalarWhereInput | ReflectionLikeScalarWhereInput[]
  export type ReflectionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReflectionCreateWithoutUserInput, ReflectionUncheckedCreateWithoutUserInput> | ReflectionCreateWithoutUserInput[] | ReflectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReflectionCreateOrConnectWithoutUserInput | ReflectionCreateOrConnectWithoutUserInput[]
    upsert?: ReflectionUpsertWithWhereUniqueWithoutUserInput | ReflectionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReflectionCreateManyUserInputEnvelope
    set?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    disconnect?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    delete?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    connect?: ReflectionWhereUniqueInput | ReflectionWhereUniqueInput[]
    update?: ReflectionUpdateWithWhereUniqueWithoutUserInput | ReflectionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReflectionUpdateManyWithWhereWithoutUserInput | ReflectionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReflectionScalarWhereInput | ReflectionScalarWhereInput[]
  export type UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutUserInput, UserAiTaskProgressUncheckedCreateWithoutUserInput> | UserAiTaskProgressCreateWithoutUserInput[] | UserAiTaskProgressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutUserInput | UserAiTaskProgressCreateOrConnectWithoutUserInput[]
    upsert?: UserAiTaskProgressUpsertWithWhereUniqueWithoutUserInput | UserAiTaskProgressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserAiTaskProgressCreateManyUserInputEnvelope
    set?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    disconnect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    delete?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    update?: UserAiTaskProgressUpdateWithWhereUniqueWithoutUserInput | UserAiTaskProgressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserAiTaskProgressUpdateManyWithWhereWithoutUserInput | UserAiTaskProgressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserAiTaskProgressScalarWhereInput | UserAiTaskProgressScalarWhereInput[]
  export type UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<UserTaskProgressCreateWithoutUsersInput, UserTaskProgressUncheckedCreateWithoutUsersInput> | UserTaskProgressCreateWithoutUsersInput[] | UserTaskProgressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutUsersInput | UserTaskProgressCreateOrConnectWithoutUsersInput[]
    upsert?: UserTaskProgressUpsertWithWhereUniqueWithoutUsersInput | UserTaskProgressUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: UserTaskProgressCreateManyUsersInputEnvelope
    set?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    disconnect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    delete?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    update?: UserTaskProgressUpdateWithWhereUniqueWithoutUsersInput | UserTaskProgressUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: UserTaskProgressUpdateManyWithWhereWithoutUsersInput | UserTaskProgressUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: UserTaskProgressScalarWhereInput | UserTaskProgressScalarWhereInput[]
  export type LikeCreateNestedManyWithoutReflectionInput = {
    create?: XOR<LikeCreateWithoutReflectionInput, LikeUncheckedCreateWithoutReflectionInput> | LikeCreateWithoutReflectionInput[] | LikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutReflectionInput | LikeCreateOrConnectWithoutReflectionInput[]
    createMany?: LikeCreateManyReflectionInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  export type ReflectionCommentCreateNestedManyWithoutReflectionInput = {
    create?: XOR<ReflectionCommentCreateWithoutReflectionInput, ReflectionCommentUncheckedCreateWithoutReflectionInput> | ReflectionCommentCreateWithoutReflectionInput[] | ReflectionCommentUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutReflectionInput | ReflectionCommentCreateOrConnectWithoutReflectionInput[]
    createMany?: ReflectionCommentCreateManyReflectionInputEnvelope
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
  export type ReflectionLikeCreateNestedManyWithoutReflectionInput = {
    create?: XOR<ReflectionLikeCreateWithoutReflectionInput, ReflectionLikeUncheckedCreateWithoutReflectionInput> | ReflectionLikeCreateWithoutReflectionInput[] | ReflectionLikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutReflectionInput | ReflectionLikeCreateOrConnectWithoutReflectionInput[]
    createMany?: ReflectionLikeCreateManyReflectionInputEnvelope
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
  export type ReflectionNicheTagCreateNestedManyWithoutReflectionInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutReflectionInput, ReflectionNicheTagUncheckedCreateWithoutReflectionInput> | ReflectionNicheTagCreateWithoutReflectionInput[] | ReflectionNicheTagUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutReflectionInput | ReflectionNicheTagCreateOrConnectWithoutReflectionInput[]
    createMany?: ReflectionNicheTagCreateManyReflectionInputEnvelope
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    create?: XOR<UserCreateWithoutReflectionsInput, UserUncheckedCreateWithoutReflectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReflectionsInput
    connect?: UserWhereUniqueInput
  export type LikeUncheckedCreateNestedManyWithoutReflectionInput = {
    create?: XOR<LikeCreateWithoutReflectionInput, LikeUncheckedCreateWithoutReflectionInput> | LikeCreateWithoutReflectionInput[] | LikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutReflectionInput | LikeCreateOrConnectWithoutReflectionInput[]
    createMany?: LikeCreateManyReflectionInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  export type ReflectionCommentUncheckedCreateNestedManyWithoutReflectionInput = {
    create?: XOR<ReflectionCommentCreateWithoutReflectionInput, ReflectionCommentUncheckedCreateWithoutReflectionInput> | ReflectionCommentCreateWithoutReflectionInput[] | ReflectionCommentUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutReflectionInput | ReflectionCommentCreateOrConnectWithoutReflectionInput[]
    createMany?: ReflectionCommentCreateManyReflectionInputEnvelope
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
  export type ReflectionLikeUncheckedCreateNestedManyWithoutReflectionInput = {
    create?: XOR<ReflectionLikeCreateWithoutReflectionInput, ReflectionLikeUncheckedCreateWithoutReflectionInput> | ReflectionLikeCreateWithoutReflectionInput[] | ReflectionLikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutReflectionInput | ReflectionLikeCreateOrConnectWithoutReflectionInput[]
    createMany?: ReflectionLikeCreateManyReflectionInputEnvelope
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
  export type ReflectionNicheTagUncheckedCreateNestedManyWithoutReflectionInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutReflectionInput, ReflectionNicheTagUncheckedCreateWithoutReflectionInput> | ReflectionNicheTagCreateWithoutReflectionInput[] | ReflectionNicheTagUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutReflectionInput | ReflectionNicheTagCreateOrConnectWithoutReflectionInput[]
    createMany?: ReflectionNicheTagCreateManyReflectionInputEnvelope
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
  export type LikeUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<LikeCreateWithoutReflectionInput, LikeUncheckedCreateWithoutReflectionInput> | LikeCreateWithoutReflectionInput[] | LikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutReflectionInput | LikeCreateOrConnectWithoutReflectionInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutReflectionInput | LikeUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: LikeCreateManyReflectionInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutReflectionInput | LikeUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutReflectionInput | LikeUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  export type ReflectionCommentUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<ReflectionCommentCreateWithoutReflectionInput, ReflectionCommentUncheckedCreateWithoutReflectionInput> | ReflectionCommentCreateWithoutReflectionInput[] | ReflectionCommentUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutReflectionInput | ReflectionCommentCreateOrConnectWithoutReflectionInput[]
    upsert?: ReflectionCommentUpsertWithWhereUniqueWithoutReflectionInput | ReflectionCommentUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: ReflectionCommentCreateManyReflectionInputEnvelope
    set?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    disconnect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    delete?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    update?: ReflectionCommentUpdateWithWhereUniqueWithoutReflectionInput | ReflectionCommentUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: ReflectionCommentUpdateManyWithWhereWithoutReflectionInput | ReflectionCommentUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: ReflectionCommentScalarWhereInput | ReflectionCommentScalarWhereInput[]
  export type ReflectionLikeUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<ReflectionLikeCreateWithoutReflectionInput, ReflectionLikeUncheckedCreateWithoutReflectionInput> | ReflectionLikeCreateWithoutReflectionInput[] | ReflectionLikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutReflectionInput | ReflectionLikeCreateOrConnectWithoutReflectionInput[]
    upsert?: ReflectionLikeUpsertWithWhereUniqueWithoutReflectionInput | ReflectionLikeUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: ReflectionLikeCreateManyReflectionInputEnvelope
    set?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    disconnect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    delete?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    update?: ReflectionLikeUpdateWithWhereUniqueWithoutReflectionInput | ReflectionLikeUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: ReflectionLikeUpdateManyWithWhereWithoutReflectionInput | ReflectionLikeUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: ReflectionLikeScalarWhereInput | ReflectionLikeScalarWhereInput[]
  export type ReflectionNicheTagUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutReflectionInput, ReflectionNicheTagUncheckedCreateWithoutReflectionInput> | ReflectionNicheTagCreateWithoutReflectionInput[] | ReflectionNicheTagUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutReflectionInput | ReflectionNicheTagCreateOrConnectWithoutReflectionInput[]
    upsert?: ReflectionNicheTagUpsertWithWhereUniqueWithoutReflectionInput | ReflectionNicheTagUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: ReflectionNicheTagCreateManyReflectionInputEnvelope
    set?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    disconnect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    delete?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    update?: ReflectionNicheTagUpdateWithWhereUniqueWithoutReflectionInput | ReflectionNicheTagUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: ReflectionNicheTagUpdateManyWithWhereWithoutReflectionInput | ReflectionNicheTagUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: ReflectionNicheTagScalarWhereInput | ReflectionNicheTagScalarWhereInput[]
    create?: XOR<UserCreateWithoutReflectionsInput, UserUncheckedCreateWithoutReflectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReflectionsInput
    upsert?: UserUpsertWithoutReflectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReflectionsInput, UserUpdateWithoutReflectionsInput>, UserUncheckedUpdateWithoutReflectionsInput>
  export type LikeUncheckedUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<LikeCreateWithoutReflectionInput, LikeUncheckedCreateWithoutReflectionInput> | LikeCreateWithoutReflectionInput[] | LikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutReflectionInput | LikeCreateOrConnectWithoutReflectionInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutReflectionInput | LikeUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: LikeCreateManyReflectionInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutReflectionInput | LikeUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutReflectionInput | LikeUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  export type ReflectionCommentUncheckedUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<ReflectionCommentCreateWithoutReflectionInput, ReflectionCommentUncheckedCreateWithoutReflectionInput> | ReflectionCommentCreateWithoutReflectionInput[] | ReflectionCommentUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionCommentCreateOrConnectWithoutReflectionInput | ReflectionCommentCreateOrConnectWithoutReflectionInput[]
    upsert?: ReflectionCommentUpsertWithWhereUniqueWithoutReflectionInput | ReflectionCommentUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: ReflectionCommentCreateManyReflectionInputEnvelope
    set?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    disconnect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    delete?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    connect?: ReflectionCommentWhereUniqueInput | ReflectionCommentWhereUniqueInput[]
    update?: ReflectionCommentUpdateWithWhereUniqueWithoutReflectionInput | ReflectionCommentUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: ReflectionCommentUpdateManyWithWhereWithoutReflectionInput | ReflectionCommentUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: ReflectionCommentScalarWhereInput | ReflectionCommentScalarWhereInput[]
  export type ReflectionLikeUncheckedUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<ReflectionLikeCreateWithoutReflectionInput, ReflectionLikeUncheckedCreateWithoutReflectionInput> | ReflectionLikeCreateWithoutReflectionInput[] | ReflectionLikeUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionLikeCreateOrConnectWithoutReflectionInput | ReflectionLikeCreateOrConnectWithoutReflectionInput[]
    upsert?: ReflectionLikeUpsertWithWhereUniqueWithoutReflectionInput | ReflectionLikeUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: ReflectionLikeCreateManyReflectionInputEnvelope
    set?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    disconnect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    delete?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    connect?: ReflectionLikeWhereUniqueInput | ReflectionLikeWhereUniqueInput[]
    update?: ReflectionLikeUpdateWithWhereUniqueWithoutReflectionInput | ReflectionLikeUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: ReflectionLikeUpdateManyWithWhereWithoutReflectionInput | ReflectionLikeUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: ReflectionLikeScalarWhereInput | ReflectionLikeScalarWhereInput[]
  export type ReflectionNicheTagUncheckedUpdateManyWithoutReflectionNestedInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutReflectionInput, ReflectionNicheTagUncheckedCreateWithoutReflectionInput> | ReflectionNicheTagCreateWithoutReflectionInput[] | ReflectionNicheTagUncheckedCreateWithoutReflectionInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutReflectionInput | ReflectionNicheTagCreateOrConnectWithoutReflectionInput[]
    upsert?: ReflectionNicheTagUpsertWithWhereUniqueWithoutReflectionInput | ReflectionNicheTagUpsertWithWhereUniqueWithoutReflectionInput[]
    createMany?: ReflectionNicheTagCreateManyReflectionInputEnvelope
    set?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    disconnect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    delete?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    update?: ReflectionNicheTagUpdateWithWhereUniqueWithoutReflectionInput | ReflectionNicheTagUpdateWithWhereUniqueWithoutReflectionInput[]
    updateMany?: ReflectionNicheTagUpdateManyWithWhereWithoutReflectionInput | ReflectionNicheTagUpdateManyWithWhereWithoutReflectionInput[]
    deleteMany?: ReflectionNicheTagScalarWhereInput | ReflectionNicheTagScalarWhereInput[]
    create?: XOR<ReflectionCreateWithoutLikesInput, ReflectionUncheckedCreateWithoutLikesInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutLikesInput
    connect?: ReflectionWhereUniqueInput
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    connect?: UserWhereUniqueInput
    create?: XOR<ReflectionCreateWithoutLikesInput, ReflectionUncheckedCreateWithoutLikesInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutLikesInput
    upsert?: ReflectionUpsertWithoutLikesInput
    connect?: ReflectionWhereUniqueInput
    update?: XOR<XOR<ReflectionUpdateToOneWithWhereWithoutLikesInput, ReflectionUpdateWithoutLikesInput>, ReflectionUncheckedUpdateWithoutLikesInput>
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    upsert?: UserUpsertWithoutLikesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLikesInput, UserUpdateWithoutLikesInput>, UserUncheckedUpdateWithoutLikesInput>
    create?: XOR<ReflectionCreateWithoutReflectionCommentsInput, ReflectionUncheckedCreateWithoutReflectionCommentsInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutReflectionCommentsInput
    connect?: ReflectionWhereUniqueInput
    create?: XOR<UserCreateWithoutReflectionCommentsInput, UserUncheckedCreateWithoutReflectionCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReflectionCommentsInput
    connect?: UserWhereUniqueInput
    create?: XOR<ReflectionCreateWithoutReflectionCommentsInput, ReflectionUncheckedCreateWithoutReflectionCommentsInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutReflectionCommentsInput
    upsert?: ReflectionUpsertWithoutReflectionCommentsInput
    connect?: ReflectionWhereUniqueInput
    update?: XOR<XOR<ReflectionUpdateToOneWithWhereWithoutReflectionCommentsInput, ReflectionUpdateWithoutReflectionCommentsInput>, ReflectionUncheckedUpdateWithoutReflectionCommentsInput>
    create?: XOR<UserCreateWithoutReflectionCommentsInput, UserUncheckedCreateWithoutReflectionCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReflectionCommentsInput
    upsert?: UserUpsertWithoutReflectionCommentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReflectionCommentsInput, UserUpdateWithoutReflectionCommentsInput>, UserUncheckedUpdateWithoutReflectionCommentsInput>
    create?: XOR<ReflectionCreateWithoutReflectionLikesInput, ReflectionUncheckedCreateWithoutReflectionLikesInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutReflectionLikesInput
    connect?: ReflectionWhereUniqueInput
    create?: XOR<UserCreateWithoutReflectionLikesInput, UserUncheckedCreateWithoutReflectionLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReflectionLikesInput
    connect?: UserWhereUniqueInput
    create?: XOR<ReflectionCreateWithoutReflectionLikesInput, ReflectionUncheckedCreateWithoutReflectionLikesInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutReflectionLikesInput
    upsert?: ReflectionUpsertWithoutReflectionLikesInput
    connect?: ReflectionWhereUniqueInput
    update?: XOR<XOR<ReflectionUpdateToOneWithWhereWithoutReflectionLikesInput, ReflectionUpdateWithoutReflectionLikesInput>, ReflectionUncheckedUpdateWithoutReflectionLikesInput>
    create?: XOR<UserCreateWithoutReflectionLikesInput, UserUncheckedCreateWithoutReflectionLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReflectionLikesInput
    upsert?: UserUpsertWithoutReflectionLikesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReflectionLikesInput, UserUpdateWithoutReflectionLikesInput>, UserUncheckedUpdateWithoutReflectionLikesInput>
    create?: XOR<UserCreateWithoutJournalsInput, UserUncheckedCreateWithoutJournalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutJournalsInput
    connect?: UserWhereUniqueInput
    create?: XOR<UserCreateWithoutJournalsInput, UserUncheckedCreateWithoutJournalsInput>
    connectOrCreate?: UserCreateOrConnectWithoutJournalsInput
    upsert?: UserUpsertWithoutJournalsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutJournalsInput, UserUpdateWithoutJournalsInput>, UserUncheckedUpdateWithoutJournalsInput>
  export type devotional_daily_task_templatesCreateNestedManyWithoutDevotional_goalsInput = {
    create?: XOR<devotional_daily_task_templatesCreateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput> | devotional_daily_task_templatesCreateWithoutDevotional_goalsInput[] | devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput[]
    connectOrCreate?: devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput | devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput[]
    createMany?: devotional_daily_task_templatesCreateManyDevotional_goalsInputEnvelope
    connect?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
  export type DevotionalTaskCreateNestedManyWithoutGoalInput = {
    create?: XOR<DevotionalTaskCreateWithoutGoalInput, DevotionalTaskUncheckedCreateWithoutGoalInput> | DevotionalTaskCreateWithoutGoalInput[] | DevotionalTaskUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: DevotionalTaskCreateOrConnectWithoutGoalInput | DevotionalTaskCreateOrConnectWithoutGoalInput[]
    createMany?: DevotionalTaskCreateManyGoalInputEnvelope
    connect?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
  export type UserCreateNestedManyWithoutDevotionalGoalInput = {
    create?: XOR<UserCreateWithoutDevotionalGoalInput, UserUncheckedCreateWithoutDevotionalGoalInput> | UserCreateWithoutDevotionalGoalInput[] | UserUncheckedCreateWithoutDevotionalGoalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDevotionalGoalInput | UserCreateOrConnectWithoutDevotionalGoalInput[]
    createMany?: UserCreateManyDevotionalGoalInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  export type devotional_daily_task_templatesUncheckedCreateNestedManyWithoutDevotional_goalsInput = {
    create?: XOR<devotional_daily_task_templatesCreateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput> | devotional_daily_task_templatesCreateWithoutDevotional_goalsInput[] | devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput[]
    connectOrCreate?: devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput | devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput[]
    createMany?: devotional_daily_task_templatesCreateManyDevotional_goalsInputEnvelope
    connect?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
  export type DevotionalTaskUncheckedCreateNestedManyWithoutGoalInput = {
    create?: XOR<DevotionalTaskCreateWithoutGoalInput, DevotionalTaskUncheckedCreateWithoutGoalInput> | DevotionalTaskCreateWithoutGoalInput[] | DevotionalTaskUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: DevotionalTaskCreateOrConnectWithoutGoalInput | DevotionalTaskCreateOrConnectWithoutGoalInput[]
    createMany?: DevotionalTaskCreateManyGoalInputEnvelope
    connect?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
  export type UserUncheckedCreateNestedManyWithoutDevotionalGoalInput = {
    create?: XOR<UserCreateWithoutDevotionalGoalInput, UserUncheckedCreateWithoutDevotionalGoalInput> | UserCreateWithoutDevotionalGoalInput[] | UserUncheckedCreateWithoutDevotionalGoalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDevotionalGoalInput | UserCreateOrConnectWithoutDevotionalGoalInput[]
    createMany?: UserCreateManyDevotionalGoalInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  export type devotional_daily_task_templatesUpdateManyWithoutDevotional_goalsNestedInput = {
    create?: XOR<devotional_daily_task_templatesCreateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput> | devotional_daily_task_templatesCreateWithoutDevotional_goalsInput[] | devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput[]
    connectOrCreate?: devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput | devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput[]
    upsert?: devotional_daily_task_templatesUpsertWithWhereUniqueWithoutDevotional_goalsInput | devotional_daily_task_templatesUpsertWithWhereUniqueWithoutDevotional_goalsInput[]
    createMany?: devotional_daily_task_templatesCreateManyDevotional_goalsInputEnvelope
    set?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    disconnect?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    delete?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    connect?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    update?: devotional_daily_task_templatesUpdateWithWhereUniqueWithoutDevotional_goalsInput | devotional_daily_task_templatesUpdateWithWhereUniqueWithoutDevotional_goalsInput[]
    updateMany?: devotional_daily_task_templatesUpdateManyWithWhereWithoutDevotional_goalsInput | devotional_daily_task_templatesUpdateManyWithWhereWithoutDevotional_goalsInput[]
    deleteMany?: devotional_daily_task_templatesScalarWhereInput | devotional_daily_task_templatesScalarWhereInput[]
  export type DevotionalTaskUpdateManyWithoutGoalNestedInput = {
    create?: XOR<DevotionalTaskCreateWithoutGoalInput, DevotionalTaskUncheckedCreateWithoutGoalInput> | DevotionalTaskCreateWithoutGoalInput[] | DevotionalTaskUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: DevotionalTaskCreateOrConnectWithoutGoalInput | DevotionalTaskCreateOrConnectWithoutGoalInput[]
    upsert?: DevotionalTaskUpsertWithWhereUniqueWithoutGoalInput | DevotionalTaskUpsertWithWhereUniqueWithoutGoalInput[]
    createMany?: DevotionalTaskCreateManyGoalInputEnvelope
    set?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    disconnect?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    delete?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    connect?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    update?: DevotionalTaskUpdateWithWhereUniqueWithoutGoalInput | DevotionalTaskUpdateWithWhereUniqueWithoutGoalInput[]
    updateMany?: DevotionalTaskUpdateManyWithWhereWithoutGoalInput | DevotionalTaskUpdateManyWithWhereWithoutGoalInput[]
    deleteMany?: DevotionalTaskScalarWhereInput | DevotionalTaskScalarWhereInput[]
  export type UserUpdateManyWithoutDevotionalGoalNestedInput = {
    create?: XOR<UserCreateWithoutDevotionalGoalInput, UserUncheckedCreateWithoutDevotionalGoalInput> | UserCreateWithoutDevotionalGoalInput[] | UserUncheckedCreateWithoutDevotionalGoalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDevotionalGoalInput | UserCreateOrConnectWithoutDevotionalGoalInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDevotionalGoalInput | UserUpsertWithWhereUniqueWithoutDevotionalGoalInput[]
    createMany?: UserCreateManyDevotionalGoalInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDevotionalGoalInput | UserUpdateWithWhereUniqueWithoutDevotionalGoalInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDevotionalGoalInput | UserUpdateManyWithWhereWithoutDevotionalGoalInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  export type devotional_daily_task_templatesUncheckedUpdateManyWithoutDevotional_goalsNestedInput = {
    create?: XOR<devotional_daily_task_templatesCreateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput> | devotional_daily_task_templatesCreateWithoutDevotional_goalsInput[] | devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput[]
    connectOrCreate?: devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput | devotional_daily_task_templatesCreateOrConnectWithoutDevotional_goalsInput[]
    upsert?: devotional_daily_task_templatesUpsertWithWhereUniqueWithoutDevotional_goalsInput | devotional_daily_task_templatesUpsertWithWhereUniqueWithoutDevotional_goalsInput[]
    createMany?: devotional_daily_task_templatesCreateManyDevotional_goalsInputEnvelope
    set?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    disconnect?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    delete?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    connect?: devotional_daily_task_templatesWhereUniqueInput | devotional_daily_task_templatesWhereUniqueInput[]
    update?: devotional_daily_task_templatesUpdateWithWhereUniqueWithoutDevotional_goalsInput | devotional_daily_task_templatesUpdateWithWhereUniqueWithoutDevotional_goalsInput[]
    updateMany?: devotional_daily_task_templatesUpdateManyWithWhereWithoutDevotional_goalsInput | devotional_daily_task_templatesUpdateManyWithWhereWithoutDevotional_goalsInput[]
    deleteMany?: devotional_daily_task_templatesScalarWhereInput | devotional_daily_task_templatesScalarWhereInput[]
  export type DevotionalTaskUncheckedUpdateManyWithoutGoalNestedInput = {
    create?: XOR<DevotionalTaskCreateWithoutGoalInput, DevotionalTaskUncheckedCreateWithoutGoalInput> | DevotionalTaskCreateWithoutGoalInput[] | DevotionalTaskUncheckedCreateWithoutGoalInput[]
    connectOrCreate?: DevotionalTaskCreateOrConnectWithoutGoalInput | DevotionalTaskCreateOrConnectWithoutGoalInput[]
    upsert?: DevotionalTaskUpsertWithWhereUniqueWithoutGoalInput | DevotionalTaskUpsertWithWhereUniqueWithoutGoalInput[]
    createMany?: DevotionalTaskCreateManyGoalInputEnvelope
    set?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    disconnect?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    delete?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    connect?: DevotionalTaskWhereUniqueInput | DevotionalTaskWhereUniqueInput[]
    update?: DevotionalTaskUpdateWithWhereUniqueWithoutGoalInput | DevotionalTaskUpdateWithWhereUniqueWithoutGoalInput[]
    updateMany?: DevotionalTaskUpdateManyWithWhereWithoutGoalInput | DevotionalTaskUpdateManyWithWhereWithoutGoalInput[]
    deleteMany?: DevotionalTaskScalarWhereInput | DevotionalTaskScalarWhereInput[]
  export type UserUncheckedUpdateManyWithoutDevotionalGoalNestedInput = {
    create?: XOR<UserCreateWithoutDevotionalGoalInput, UserUncheckedCreateWithoutDevotionalGoalInput> | UserCreateWithoutDevotionalGoalInput[] | UserUncheckedCreateWithoutDevotionalGoalInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDevotionalGoalInput | UserCreateOrConnectWithoutDevotionalGoalInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDevotionalGoalInput | UserUpsertWithWhereUniqueWithoutDevotionalGoalInput[]
    createMany?: UserCreateManyDevotionalGoalInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDevotionalGoalInput | UserUpdateWithWhereUniqueWithoutDevotionalGoalInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDevotionalGoalInput | UserUpdateManyWithWhereWithoutDevotionalGoalInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
    create?: XOR<DevotionalGoalCreateWithoutTasksInput, DevotionalGoalUncheckedCreateWithoutTasksInput>
    connectOrCreate?: DevotionalGoalCreateOrConnectWithoutTasksInput
    connect?: DevotionalGoalWhereUniqueInput
  export type UserTaskProgressCreateNestedManyWithoutDevotional_taskInput = {
    create?: XOR<UserTaskProgressCreateWithoutDevotional_taskInput, UserTaskProgressUncheckedCreateWithoutDevotional_taskInput> | UserTaskProgressCreateWithoutDevotional_taskInput[] | UserTaskProgressUncheckedCreateWithoutDevotional_taskInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutDevotional_taskInput | UserTaskProgressCreateOrConnectWithoutDevotional_taskInput[]
    createMany?: UserTaskProgressCreateManyDevotional_taskInputEnvelope
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
  export type UserTaskProgressUncheckedCreateNestedManyWithoutDevotional_taskInput = {
    create?: XOR<UserTaskProgressCreateWithoutDevotional_taskInput, UserTaskProgressUncheckedCreateWithoutDevotional_taskInput> | UserTaskProgressCreateWithoutDevotional_taskInput[] | UserTaskProgressUncheckedCreateWithoutDevotional_taskInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutDevotional_taskInput | UserTaskProgressCreateOrConnectWithoutDevotional_taskInput[]
    createMany?: UserTaskProgressCreateManyDevotional_taskInputEnvelope
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    create?: XOR<DevotionalGoalCreateWithoutTasksInput, DevotionalGoalUncheckedCreateWithoutTasksInput>
    connectOrCreate?: DevotionalGoalCreateOrConnectWithoutTasksInput
    upsert?: DevotionalGoalUpsertWithoutTasksInput
    disconnect?: DevotionalGoalWhereInput | boolean
    delete?: DevotionalGoalWhereInput | boolean
    connect?: DevotionalGoalWhereUniqueInput
    update?: XOR<XOR<DevotionalGoalUpdateToOneWithWhereWithoutTasksInput, DevotionalGoalUpdateWithoutTasksInput>, DevotionalGoalUncheckedUpdateWithoutTasksInput>
  export type UserTaskProgressUpdateManyWithoutDevotional_taskNestedInput = {
    create?: XOR<UserTaskProgressCreateWithoutDevotional_taskInput, UserTaskProgressUncheckedCreateWithoutDevotional_taskInput> | UserTaskProgressCreateWithoutDevotional_taskInput[] | UserTaskProgressUncheckedCreateWithoutDevotional_taskInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutDevotional_taskInput | UserTaskProgressCreateOrConnectWithoutDevotional_taskInput[]
    upsert?: UserTaskProgressUpsertWithWhereUniqueWithoutDevotional_taskInput | UserTaskProgressUpsertWithWhereUniqueWithoutDevotional_taskInput[]
    createMany?: UserTaskProgressCreateManyDevotional_taskInputEnvelope
    set?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    disconnect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    delete?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    update?: UserTaskProgressUpdateWithWhereUniqueWithoutDevotional_taskInput | UserTaskProgressUpdateWithWhereUniqueWithoutDevotional_taskInput[]
    updateMany?: UserTaskProgressUpdateManyWithWhereWithoutDevotional_taskInput | UserTaskProgressUpdateManyWithWhereWithoutDevotional_taskInput[]
    deleteMany?: UserTaskProgressScalarWhereInput | UserTaskProgressScalarWhereInput[]
  export type UserTaskProgressUncheckedUpdateManyWithoutDevotional_taskNestedInput = {
    create?: XOR<UserTaskProgressCreateWithoutDevotional_taskInput, UserTaskProgressUncheckedCreateWithoutDevotional_taskInput> | UserTaskProgressCreateWithoutDevotional_taskInput[] | UserTaskProgressUncheckedCreateWithoutDevotional_taskInput[]
    connectOrCreate?: UserTaskProgressCreateOrConnectWithoutDevotional_taskInput | UserTaskProgressCreateOrConnectWithoutDevotional_taskInput[]
    upsert?: UserTaskProgressUpsertWithWhereUniqueWithoutDevotional_taskInput | UserTaskProgressUpsertWithWhereUniqueWithoutDevotional_taskInput[]
    createMany?: UserTaskProgressCreateManyDevotional_taskInputEnvelope
    set?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    disconnect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    delete?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    connect?: UserTaskProgressWhereUniqueInput | UserTaskProgressWhereUniqueInput[]
    update?: UserTaskProgressUpdateWithWhereUniqueWithoutDevotional_taskInput | UserTaskProgressUpdateWithWhereUniqueWithoutDevotional_taskInput[]
    updateMany?: UserTaskProgressUpdateManyWithWhereWithoutDevotional_taskInput | UserTaskProgressUpdateManyWithWhereWithoutDevotional_taskInput[]
    deleteMany?: UserTaskProgressScalarWhereInput | UserTaskProgressScalarWhereInput[]
    create?: XOR<DevotionalTaskCreateWithoutUser_task_progressInput, DevotionalTaskUncheckedCreateWithoutUser_task_progressInput>
    connectOrCreate?: DevotionalTaskCreateOrConnectWithoutUser_task_progressInput
    connect?: DevotionalTaskWhereUniqueInput
    create?: XOR<UserCreateWithoutUser_task_progressInput, UserUncheckedCreateWithoutUser_task_progressInput>
    connectOrCreate?: UserCreateOrConnectWithoutUser_task_progressInput
    connect?: UserWhereUniqueInput
    set?: Date | string
    create?: XOR<DevotionalTaskCreateWithoutUser_task_progressInput, DevotionalTaskUncheckedCreateWithoutUser_task_progressInput>
    connectOrCreate?: DevotionalTaskCreateOrConnectWithoutUser_task_progressInput
    upsert?: DevotionalTaskUpsertWithoutUser_task_progressInput
    disconnect?: DevotionalTaskWhereInput | boolean
    delete?: DevotionalTaskWhereInput | boolean
    connect?: DevotionalTaskWhereUniqueInput
    update?: XOR<XOR<DevotionalTaskUpdateToOneWithWhereWithoutUser_task_progressInput, DevotionalTaskUpdateWithoutUser_task_progressInput>, DevotionalTaskUncheckedUpdateWithoutUser_task_progressInput>
    create?: XOR<UserCreateWithoutUser_task_progressInput, UserUncheckedCreateWithoutUser_task_progressInput>
    connectOrCreate?: UserCreateOrConnectWithoutUser_task_progressInput
    upsert?: UserUpsertWithoutUser_task_progressInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUser_task_progressInput, UserUpdateWithoutUser_task_progressInput>, UserUncheckedUpdateWithoutUser_task_progressInput>
  export type ReflectionNicheTagCreateNestedManyWithoutNicheTagInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutNicheTagInput, ReflectionNicheTagUncheckedCreateWithoutNicheTagInput> | ReflectionNicheTagCreateWithoutNicheTagInput[] | ReflectionNicheTagUncheckedCreateWithoutNicheTagInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutNicheTagInput | ReflectionNicheTagCreateOrConnectWithoutNicheTagInput[]
    createMany?: ReflectionNicheTagCreateManyNicheTagInputEnvelope
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
  export type ReflectionNicheTagUncheckedCreateNestedManyWithoutNicheTagInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutNicheTagInput, ReflectionNicheTagUncheckedCreateWithoutNicheTagInput> | ReflectionNicheTagCreateWithoutNicheTagInput[] | ReflectionNicheTagUncheckedCreateWithoutNicheTagInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutNicheTagInput | ReflectionNicheTagCreateOrConnectWithoutNicheTagInput[]
    createMany?: ReflectionNicheTagCreateManyNicheTagInputEnvelope
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
  export type ReflectionNicheTagUpdateManyWithoutNicheTagNestedInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutNicheTagInput, ReflectionNicheTagUncheckedCreateWithoutNicheTagInput> | ReflectionNicheTagCreateWithoutNicheTagInput[] | ReflectionNicheTagUncheckedCreateWithoutNicheTagInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutNicheTagInput | ReflectionNicheTagCreateOrConnectWithoutNicheTagInput[]
    upsert?: ReflectionNicheTagUpsertWithWhereUniqueWithoutNicheTagInput | ReflectionNicheTagUpsertWithWhereUniqueWithoutNicheTagInput[]
    createMany?: ReflectionNicheTagCreateManyNicheTagInputEnvelope
    set?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    disconnect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    delete?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    update?: ReflectionNicheTagUpdateWithWhereUniqueWithoutNicheTagInput | ReflectionNicheTagUpdateWithWhereUniqueWithoutNicheTagInput[]
    updateMany?: ReflectionNicheTagUpdateManyWithWhereWithoutNicheTagInput | ReflectionNicheTagUpdateManyWithWhereWithoutNicheTagInput[]
    deleteMany?: ReflectionNicheTagScalarWhereInput | ReflectionNicheTagScalarWhereInput[]
  export type ReflectionNicheTagUncheckedUpdateManyWithoutNicheTagNestedInput = {
    create?: XOR<ReflectionNicheTagCreateWithoutNicheTagInput, ReflectionNicheTagUncheckedCreateWithoutNicheTagInput> | ReflectionNicheTagCreateWithoutNicheTagInput[] | ReflectionNicheTagUncheckedCreateWithoutNicheTagInput[]
    connectOrCreate?: ReflectionNicheTagCreateOrConnectWithoutNicheTagInput | ReflectionNicheTagCreateOrConnectWithoutNicheTagInput[]
    upsert?: ReflectionNicheTagUpsertWithWhereUniqueWithoutNicheTagInput | ReflectionNicheTagUpsertWithWhereUniqueWithoutNicheTagInput[]
    createMany?: ReflectionNicheTagCreateManyNicheTagInputEnvelope
    set?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    disconnect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    delete?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    connect?: ReflectionNicheTagWhereUniqueInput | ReflectionNicheTagWhereUniqueInput[]
    update?: ReflectionNicheTagUpdateWithWhereUniqueWithoutNicheTagInput | ReflectionNicheTagUpdateWithWhereUniqueWithoutNicheTagInput[]
    updateMany?: ReflectionNicheTagUpdateManyWithWhereWithoutNicheTagInput | ReflectionNicheTagUpdateManyWithWhereWithoutNicheTagInput[]
    deleteMany?: ReflectionNicheTagScalarWhereInput | ReflectionNicheTagScalarWhereInput[]
    create?: XOR<NicheTagCreateWithoutReflectionNicheTagsInput, NicheTagUncheckedCreateWithoutReflectionNicheTagsInput>
    connectOrCreate?: NicheTagCreateOrConnectWithoutReflectionNicheTagsInput
    connect?: NicheTagWhereUniqueInput
    create?: XOR<ReflectionCreateWithoutReflectionNicheTagsInput, ReflectionUncheckedCreateWithoutReflectionNicheTagsInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutReflectionNicheTagsInput
    connect?: ReflectionWhereUniqueInput
    create?: XOR<NicheTagCreateWithoutReflectionNicheTagsInput, NicheTagUncheckedCreateWithoutReflectionNicheTagsInput>
    connectOrCreate?: NicheTagCreateOrConnectWithoutReflectionNicheTagsInput
    upsert?: NicheTagUpsertWithoutReflectionNicheTagsInput
    connect?: NicheTagWhereUniqueInput
    update?: XOR<XOR<NicheTagUpdateToOneWithWhereWithoutReflectionNicheTagsInput, NicheTagUpdateWithoutReflectionNicheTagsInput>, NicheTagUncheckedUpdateWithoutReflectionNicheTagsInput>
    create?: XOR<ReflectionCreateWithoutReflectionNicheTagsInput, ReflectionUncheckedCreateWithoutReflectionNicheTagsInput>
    connectOrCreate?: ReflectionCreateOrConnectWithoutReflectionNicheTagsInput
    upsert?: ReflectionUpsertWithoutReflectionNicheTagsInput
    connect?: ReflectionWhereUniqueInput
    update?: XOR<XOR<ReflectionUpdateToOneWithWhereWithoutReflectionNicheTagsInput, ReflectionUpdateWithoutReflectionNicheTagsInput>, ReflectionUncheckedUpdateWithoutReflectionNicheTagsInput>
  export type DailyTaskCompletionCreateNestedManyWithoutTaskInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutTaskInput, DailyTaskCompletionUncheckedCreateWithoutTaskInput> | DailyTaskCompletionCreateWithoutTaskInput[] | DailyTaskCompletionUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutTaskInput | DailyTaskCompletionCreateOrConnectWithoutTaskInput[]
    createMany?: DailyTaskCompletionCreateManyTaskInputEnvelope
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    create?: XOR<UserCreateWithoutDailyTasksInput, UserUncheckedCreateWithoutDailyTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyTasksInput
    connect?: UserWhereUniqueInput
  export type DailyTaskCompletionUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutTaskInput, DailyTaskCompletionUncheckedCreateWithoutTaskInput> | DailyTaskCompletionCreateWithoutTaskInput[] | DailyTaskCompletionUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutTaskInput | DailyTaskCompletionCreateOrConnectWithoutTaskInput[]
    createMany?: DailyTaskCompletionCreateManyTaskInputEnvelope
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
  export type DailyTaskCompletionUpdateManyWithoutTaskNestedInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutTaskInput, DailyTaskCompletionUncheckedCreateWithoutTaskInput> | DailyTaskCompletionCreateWithoutTaskInput[] | DailyTaskCompletionUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutTaskInput | DailyTaskCompletionCreateOrConnectWithoutTaskInput[]
    upsert?: DailyTaskCompletionUpsertWithWhereUniqueWithoutTaskInput | DailyTaskCompletionUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: DailyTaskCompletionCreateManyTaskInputEnvelope
    set?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    disconnect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    delete?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    update?: DailyTaskCompletionUpdateWithWhereUniqueWithoutTaskInput | DailyTaskCompletionUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: DailyTaskCompletionUpdateManyWithWhereWithoutTaskInput | DailyTaskCompletionUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: DailyTaskCompletionScalarWhereInput | DailyTaskCompletionScalarWhereInput[]
    create?: XOR<UserCreateWithoutDailyTasksInput, UserUncheckedCreateWithoutDailyTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyTasksInput
    upsert?: UserUpsertWithoutDailyTasksInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDailyTasksInput, UserUpdateWithoutDailyTasksInput>, UserUncheckedUpdateWithoutDailyTasksInput>
  export type DailyTaskCompletionUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<DailyTaskCompletionCreateWithoutTaskInput, DailyTaskCompletionUncheckedCreateWithoutTaskInput> | DailyTaskCompletionCreateWithoutTaskInput[] | DailyTaskCompletionUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: DailyTaskCompletionCreateOrConnectWithoutTaskInput | DailyTaskCompletionCreateOrConnectWithoutTaskInput[]
    upsert?: DailyTaskCompletionUpsertWithWhereUniqueWithoutTaskInput | DailyTaskCompletionUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: DailyTaskCompletionCreateManyTaskInputEnvelope
    set?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    disconnect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    delete?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    connect?: DailyTaskCompletionWhereUniqueInput | DailyTaskCompletionWhereUniqueInput[]
    update?: DailyTaskCompletionUpdateWithWhereUniqueWithoutTaskInput | DailyTaskCompletionUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: DailyTaskCompletionUpdateManyWithWhereWithoutTaskInput | DailyTaskCompletionUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: DailyTaskCompletionScalarWhereInput | DailyTaskCompletionScalarWhereInput[]
    create?: XOR<DailyTaskCreateWithoutCompletionsInput, DailyTaskUncheckedCreateWithoutCompletionsInput>
    connectOrCreate?: DailyTaskCreateOrConnectWithoutCompletionsInput
    connect?: DailyTaskWhereUniqueInput
    create?: XOR<UserCreateWithoutDailyTaskCompletionsInput, UserUncheckedCreateWithoutDailyTaskCompletionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyTaskCompletionsInput
    connect?: UserWhereUniqueInput
    create?: XOR<DailyTaskCreateWithoutCompletionsInput, DailyTaskUncheckedCreateWithoutCompletionsInput>
    connectOrCreate?: DailyTaskCreateOrConnectWithoutCompletionsInput
    upsert?: DailyTaskUpsertWithoutCompletionsInput
    connect?: DailyTaskWhereUniqueInput
    update?: XOR<XOR<DailyTaskUpdateToOneWithWhereWithoutCompletionsInput, DailyTaskUpdateWithoutCompletionsInput>, DailyTaskUncheckedUpdateWithoutCompletionsInput>
    create?: XOR<UserCreateWithoutDailyTaskCompletionsInput, UserUncheckedCreateWithoutDailyTaskCompletionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyTaskCompletionsInput
    upsert?: UserUpsertWithoutDailyTaskCompletionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDailyTaskCompletionsInput, UserUpdateWithoutDailyTaskCompletionsInput>, UserUncheckedUpdateWithoutDailyTaskCompletionsInput>
    create?: XOR<DevotionalGoalCreateWithoutDevotional_daily_task_templatesInput, DevotionalGoalUncheckedCreateWithoutDevotional_daily_task_templatesInput>
    connectOrCreate?: DevotionalGoalCreateOrConnectWithoutDevotional_daily_task_templatesInput
    connect?: DevotionalGoalWhereUniqueInput
    create?: XOR<DevotionalGoalCreateWithoutDevotional_daily_task_templatesInput, DevotionalGoalUncheckedCreateWithoutDevotional_daily_task_templatesInput>
    connectOrCreate?: DevotionalGoalCreateOrConnectWithoutDevotional_daily_task_templatesInput
    upsert?: DevotionalGoalUpsertWithoutDevotional_daily_task_templatesInput
    connect?: DevotionalGoalWhereUniqueInput
    update?: XOR<XOR<DevotionalGoalUpdateToOneWithWhereWithoutDevotional_daily_task_templatesInput, DevotionalGoalUpdateWithoutDevotional_daily_task_templatesInput>, DevotionalGoalUncheckedUpdateWithoutDevotional_daily_task_templatesInput>
  export type AiPlanDailyTaskCreateNestedManyWithoutAiPlanInput = {
    create?: XOR<AiPlanDailyTaskCreateWithoutAiPlanInput, AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput> | AiPlanDailyTaskCreateWithoutAiPlanInput[] | AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput[]
    connectOrCreate?: AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput | AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput[]
    createMany?: AiPlanDailyTaskCreateManyAiPlanInputEnvelope
    connect?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
  export type AiPlanTaskCreateNestedManyWithoutAi_planInput = {
    create?: XOR<AiPlanTaskCreateWithoutAi_planInput, AiPlanTaskUncheckedCreateWithoutAi_planInput> | AiPlanTaskCreateWithoutAi_planInput[] | AiPlanTaskUncheckedCreateWithoutAi_planInput[]
    connectOrCreate?: AiPlanTaskCreateOrConnectWithoutAi_planInput | AiPlanTaskCreateOrConnectWithoutAi_planInput[]
    createMany?: AiPlanTaskCreateManyAi_planInputEnvelope
    connect?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    create?: XOR<UserCreateWithoutAiPlanInput, UserUncheckedCreateWithoutAiPlanInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiPlanInput
    connect?: UserWhereUniqueInput
  export type AiPlanDailyTaskUncheckedCreateNestedManyWithoutAiPlanInput = {
    create?: XOR<AiPlanDailyTaskCreateWithoutAiPlanInput, AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput> | AiPlanDailyTaskCreateWithoutAiPlanInput[] | AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput[]
    connectOrCreate?: AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput | AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput[]
    createMany?: AiPlanDailyTaskCreateManyAiPlanInputEnvelope
    connect?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
  export type AiPlanTaskUncheckedCreateNestedManyWithoutAi_planInput = {
    create?: XOR<AiPlanTaskCreateWithoutAi_planInput, AiPlanTaskUncheckedCreateWithoutAi_planInput> | AiPlanTaskCreateWithoutAi_planInput[] | AiPlanTaskUncheckedCreateWithoutAi_planInput[]
    connectOrCreate?: AiPlanTaskCreateOrConnectWithoutAi_planInput | AiPlanTaskCreateOrConnectWithoutAi_planInput[]
    createMany?: AiPlanTaskCreateManyAi_planInputEnvelope
    connect?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
  export type AiPlanDailyTaskUpdateManyWithoutAiPlanNestedInput = {
    create?: XOR<AiPlanDailyTaskCreateWithoutAiPlanInput, AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput> | AiPlanDailyTaskCreateWithoutAiPlanInput[] | AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput[]
    connectOrCreate?: AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput | AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput[]
    upsert?: AiPlanDailyTaskUpsertWithWhereUniqueWithoutAiPlanInput | AiPlanDailyTaskUpsertWithWhereUniqueWithoutAiPlanInput[]
    createMany?: AiPlanDailyTaskCreateManyAiPlanInputEnvelope
    set?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    disconnect?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    delete?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    connect?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    update?: AiPlanDailyTaskUpdateWithWhereUniqueWithoutAiPlanInput | AiPlanDailyTaskUpdateWithWhereUniqueWithoutAiPlanInput[]
    updateMany?: AiPlanDailyTaskUpdateManyWithWhereWithoutAiPlanInput | AiPlanDailyTaskUpdateManyWithWhereWithoutAiPlanInput[]
    deleteMany?: AiPlanDailyTaskScalarWhereInput | AiPlanDailyTaskScalarWhereInput[]
  export type AiPlanTaskUpdateManyWithoutAi_planNestedInput = {
    create?: XOR<AiPlanTaskCreateWithoutAi_planInput, AiPlanTaskUncheckedCreateWithoutAi_planInput> | AiPlanTaskCreateWithoutAi_planInput[] | AiPlanTaskUncheckedCreateWithoutAi_planInput[]
    connectOrCreate?: AiPlanTaskCreateOrConnectWithoutAi_planInput | AiPlanTaskCreateOrConnectWithoutAi_planInput[]
    upsert?: AiPlanTaskUpsertWithWhereUniqueWithoutAi_planInput | AiPlanTaskUpsertWithWhereUniqueWithoutAi_planInput[]
    createMany?: AiPlanTaskCreateManyAi_planInputEnvelope
    set?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    disconnect?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    delete?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    connect?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    update?: AiPlanTaskUpdateWithWhereUniqueWithoutAi_planInput | AiPlanTaskUpdateWithWhereUniqueWithoutAi_planInput[]
    updateMany?: AiPlanTaskUpdateManyWithWhereWithoutAi_planInput | AiPlanTaskUpdateManyWithWhereWithoutAi_planInput[]
    deleteMany?: AiPlanTaskScalarWhereInput | AiPlanTaskScalarWhereInput[]
    create?: XOR<UserCreateWithoutAiPlanInput, UserUncheckedCreateWithoutAiPlanInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiPlanInput
    upsert?: UserUpsertWithoutAiPlanInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAiPlanInput, UserUpdateWithoutAiPlanInput>, UserUncheckedUpdateWithoutAiPlanInput>
  export type AiPlanDailyTaskUncheckedUpdateManyWithoutAiPlanNestedInput = {
    create?: XOR<AiPlanDailyTaskCreateWithoutAiPlanInput, AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput> | AiPlanDailyTaskCreateWithoutAiPlanInput[] | AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput[]
    connectOrCreate?: AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput | AiPlanDailyTaskCreateOrConnectWithoutAiPlanInput[]
    upsert?: AiPlanDailyTaskUpsertWithWhereUniqueWithoutAiPlanInput | AiPlanDailyTaskUpsertWithWhereUniqueWithoutAiPlanInput[]
    createMany?: AiPlanDailyTaskCreateManyAiPlanInputEnvelope
    set?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    disconnect?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    delete?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    connect?: AiPlanDailyTaskWhereUniqueInput | AiPlanDailyTaskWhereUniqueInput[]
    update?: AiPlanDailyTaskUpdateWithWhereUniqueWithoutAiPlanInput | AiPlanDailyTaskUpdateWithWhereUniqueWithoutAiPlanInput[]
    updateMany?: AiPlanDailyTaskUpdateManyWithWhereWithoutAiPlanInput | AiPlanDailyTaskUpdateManyWithWhereWithoutAiPlanInput[]
    deleteMany?: AiPlanDailyTaskScalarWhereInput | AiPlanDailyTaskScalarWhereInput[]
  export type AiPlanTaskUncheckedUpdateManyWithoutAi_planNestedInput = {
    create?: XOR<AiPlanTaskCreateWithoutAi_planInput, AiPlanTaskUncheckedCreateWithoutAi_planInput> | AiPlanTaskCreateWithoutAi_planInput[] | AiPlanTaskUncheckedCreateWithoutAi_planInput[]
    connectOrCreate?: AiPlanTaskCreateOrConnectWithoutAi_planInput | AiPlanTaskCreateOrConnectWithoutAi_planInput[]
    upsert?: AiPlanTaskUpsertWithWhereUniqueWithoutAi_planInput | AiPlanTaskUpsertWithWhereUniqueWithoutAi_planInput[]
    createMany?: AiPlanTaskCreateManyAi_planInputEnvelope
    set?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    disconnect?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    delete?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    connect?: AiPlanTaskWhereUniqueInput | AiPlanTaskWhereUniqueInput[]
    update?: AiPlanTaskUpdateWithWhereUniqueWithoutAi_planInput | AiPlanTaskUpdateWithWhereUniqueWithoutAi_planInput[]
    updateMany?: AiPlanTaskUpdateManyWithWhereWithoutAi_planInput | AiPlanTaskUpdateManyWithWhereWithoutAi_planInput[]
    deleteMany?: AiPlanTaskScalarWhereInput | AiPlanTaskScalarWhereInput[]
    create?: XOR<AiPlanCreateWithoutTasksInput, AiPlanUncheckedCreateWithoutTasksInput>
    connectOrCreate?: AiPlanCreateOrConnectWithoutTasksInput
    connect?: AiPlanWhereUniqueInput
  export type UserAiTaskProgressCreateNestedManyWithoutAi_plan_taskInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput> | UserAiTaskProgressCreateWithoutAi_plan_taskInput[] | UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput | UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput[]
    createMany?: UserAiTaskProgressCreateManyAi_plan_taskInputEnvelope
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
  export type UserAiTaskProgressUncheckedCreateNestedManyWithoutAi_plan_taskInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput> | UserAiTaskProgressCreateWithoutAi_plan_taskInput[] | UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput | UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput[]
    createMany?: UserAiTaskProgressCreateManyAi_plan_taskInputEnvelope
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    create?: XOR<AiPlanCreateWithoutTasksInput, AiPlanUncheckedCreateWithoutTasksInput>
    connectOrCreate?: AiPlanCreateOrConnectWithoutTasksInput
    upsert?: AiPlanUpsertWithoutTasksInput
    connect?: AiPlanWhereUniqueInput
    update?: XOR<XOR<AiPlanUpdateToOneWithWhereWithoutTasksInput, AiPlanUpdateWithoutTasksInput>, AiPlanUncheckedUpdateWithoutTasksInput>
  export type UserAiTaskProgressUpdateManyWithoutAi_plan_taskNestedInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput> | UserAiTaskProgressCreateWithoutAi_plan_taskInput[] | UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput | UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput[]
    upsert?: UserAiTaskProgressUpsertWithWhereUniqueWithoutAi_plan_taskInput | UserAiTaskProgressUpsertWithWhereUniqueWithoutAi_plan_taskInput[]
    createMany?: UserAiTaskProgressCreateManyAi_plan_taskInputEnvelope
    set?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    disconnect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    delete?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    update?: UserAiTaskProgressUpdateWithWhereUniqueWithoutAi_plan_taskInput | UserAiTaskProgressUpdateWithWhereUniqueWithoutAi_plan_taskInput[]
    updateMany?: UserAiTaskProgressUpdateManyWithWhereWithoutAi_plan_taskInput | UserAiTaskProgressUpdateManyWithWhereWithoutAi_plan_taskInput[]
    deleteMany?: UserAiTaskProgressScalarWhereInput | UserAiTaskProgressScalarWhereInput[]
  export type UserAiTaskProgressUncheckedUpdateManyWithoutAi_plan_taskNestedInput = {
    create?: XOR<UserAiTaskProgressCreateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput> | UserAiTaskProgressCreateWithoutAi_plan_taskInput[] | UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput[]
    connectOrCreate?: UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput | UserAiTaskProgressCreateOrConnectWithoutAi_plan_taskInput[]
    upsert?: UserAiTaskProgressUpsertWithWhereUniqueWithoutAi_plan_taskInput | UserAiTaskProgressUpsertWithWhereUniqueWithoutAi_plan_taskInput[]
    createMany?: UserAiTaskProgressCreateManyAi_plan_taskInputEnvelope
    set?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    disconnect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    delete?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    connect?: UserAiTaskProgressWhereUniqueInput | UserAiTaskProgressWhereUniqueInput[]
    update?: UserAiTaskProgressUpdateWithWhereUniqueWithoutAi_plan_taskInput | UserAiTaskProgressUpdateWithWhereUniqueWithoutAi_plan_taskInput[]
    updateMany?: UserAiTaskProgressUpdateManyWithWhereWithoutAi_plan_taskInput | UserAiTaskProgressUpdateManyWithWhereWithoutAi_plan_taskInput[]
    deleteMany?: UserAiTaskProgressScalarWhereInput | UserAiTaskProgressScalarWhereInput[]
    create?: XOR<AiPlanTaskCreateWithoutProgressInput, AiPlanTaskUncheckedCreateWithoutProgressInput>
    connectOrCreate?: AiPlanTaskCreateOrConnectWithoutProgressInput
    connect?: AiPlanTaskWhereUniqueInput
    create?: XOR<UserCreateWithoutUserAiTaskProgressInput, UserUncheckedCreateWithoutUserAiTaskProgressInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserAiTaskProgressInput
    connect?: UserWhereUniqueInput
    create?: XOR<AiPlanTaskCreateWithoutProgressInput, AiPlanTaskUncheckedCreateWithoutProgressInput>
    connectOrCreate?: AiPlanTaskCreateOrConnectWithoutProgressInput
    upsert?: AiPlanTaskUpsertWithoutProgressInput
    connect?: AiPlanTaskWhereUniqueInput
    update?: XOR<XOR<AiPlanTaskUpdateToOneWithWhereWithoutProgressInput, AiPlanTaskUpdateWithoutProgressInput>, AiPlanTaskUncheckedUpdateWithoutProgressInput>
    create?: XOR<UserCreateWithoutUserAiTaskProgressInput, UserUncheckedCreateWithoutUserAiTaskProgressInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserAiTaskProgressInput
    upsert?: UserUpsertWithoutUserAiTaskProgressInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserAiTaskProgressInput, UserUpdateWithoutUserAiTaskProgressInput>, UserUncheckedUpdateWithoutUserAiTaskProgressInput>
    create?: XOR<AiPlanCreateWithoutDailyTasksInput, AiPlanUncheckedCreateWithoutDailyTasksInput>
    connectOrCreate?: AiPlanCreateOrConnectWithoutDailyTasksInput
    connect?: AiPlanWhereUniqueInput
    set?: boolean
    create?: XOR<AiPlanCreateWithoutDailyTasksInput, AiPlanUncheckedCreateWithoutDailyTasksInput>
    connectOrCreate?: AiPlanCreateOrConnectWithoutDailyTasksInput
    upsert?: AiPlanUpsertWithoutDailyTasksInput
    connect?: AiPlanWhereUniqueInput
    update?: XOR<XOR<AiPlanUpdateToOneWithWhereWithoutDailyTasksInput, AiPlanUpdateWithoutDailyTasksInput>, AiPlanUncheckedUpdateWithoutDailyTasksInput>
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    dailyTasks?: AiPlanDailyTaskCreateNestedManyWithoutAiPlanInput
    tasks?: AiPlanTaskCreateNestedManyWithoutAi_planInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    dailyTasks?: AiPlanDailyTaskUncheckedCreateNestedManyWithoutAiPlanInput
    tasks?: AiPlanTaskUncheckedCreateNestedManyWithoutAi_planInput
    where: AiPlanWhereUniqueInput
    create: XOR<AiPlanCreateWithoutUserInput, AiPlanUncheckedCreateWithoutUserInput>
  export type AiPlanCreateManyUserInputEnvelope = {
    data: AiPlanCreateManyUserInput | AiPlanCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    completion_date: Date | string
    created_at?: Date | string | null
    task: DailyTaskCreateNestedOneWithoutCompletionsInput
    id?: string
    task_id: string
    completion_date: Date | string
    created_at?: Date | string | null
    where: DailyTaskCompletionWhereUniqueInput
    create: XOR<DailyTaskCompletionCreateWithoutUserInput, DailyTaskCompletionUncheckedCreateWithoutUserInput>
  export type DailyTaskCompletionCreateManyUserInputEnvelope = {
    data: DailyTaskCompletionCreateManyUserInput | DailyTaskCompletionCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
    completions?: DailyTaskCompletionCreateNestedManyWithoutTaskInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
    completions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutTaskInput
    where: DailyTaskWhereUniqueInput
    create: XOR<DailyTaskCreateWithoutUserInput, DailyTaskUncheckedCreateWithoutUserInput>
  export type DailyTaskCreateManyUserInputEnvelope = {
    data: DailyTaskCreateManyUserInput | DailyTaskCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    title: string
    content: string
    mood?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    id?: string
    title: string
    content: string
    mood?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    where: JournalWhereUniqueInput
    create: XOR<JournalCreateWithoutUserInput, JournalUncheckedCreateWithoutUserInput>
  export type JournalCreateManyUserInputEnvelope = {
    data: JournalCreateManyUserInput | JournalCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    created_at?: Date | string | null
    reflection: ReflectionCreateNestedOneWithoutLikesInput
    id?: string
    reflection_id: string
    created_at?: Date | string | null
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  export type LikeCreateManyUserInputEnvelope = {
    data: LikeCreateManyUserInput | LikeCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
    reflection: ReflectionCreateNestedOneWithoutReflectionCommentsInput
    id?: string
    reflection_id: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
    where: ReflectionCommentWhereUniqueInput
    create: XOR<ReflectionCommentCreateWithoutUserInput, ReflectionCommentUncheckedCreateWithoutUserInput>
  export type ReflectionCommentCreateManyUserInputEnvelope = {
    data: ReflectionCommentCreateManyUserInput | ReflectionCommentCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    created_at?: Date | string | null
    reflection: ReflectionCreateNestedOneWithoutReflectionLikesInput
    id?: string
    reflection_id: string
    created_at?: Date | string | null
    where: ReflectionLikeWhereUniqueInput
    create: XOR<ReflectionLikeCreateWithoutUserInput, ReflectionLikeUncheckedCreateWithoutUserInput>
  export type ReflectionLikeCreateManyUserInputEnvelope = {
    data: ReflectionLikeCreateManyUserInput | ReflectionLikeCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagCreateNestedManyWithoutReflectionInput
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedCreateNestedManyWithoutReflectionInput
    where: ReflectionWhereUniqueInput
    create: XOR<ReflectionCreateWithoutUserInput, ReflectionUncheckedCreateWithoutUserInput>
  export type ReflectionCreateManyUserInputEnvelope = {
    data: ReflectionCreateManyUserInput | ReflectionCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    completed_at?: Date | string | null
    ai_plan_task: AiPlanTaskCreateNestedOneWithoutProgressInput
    id?: string
    ai_plan_task_id: string
    completed_at?: Date | string | null
    where: UserAiTaskProgressWhereUniqueInput
    create: XOR<UserAiTaskProgressCreateWithoutUserInput, UserAiTaskProgressUncheckedCreateWithoutUserInput>
  export type UserAiTaskProgressCreateManyUserInputEnvelope = {
    data: UserAiTaskProgressCreateManyUserInput | UserAiTaskProgressCreateManyUserInput[]
    skipDuplicates?: boolean
    id?: string
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    devotional_task?: DevotionalTaskCreateNestedOneWithoutUser_task_progressInput
    id?: string
    devotional_task_id?: string | null
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    where: UserTaskProgressWhereUniqueInput
    create: XOR<UserTaskProgressCreateWithoutUsersInput, UserTaskProgressUncheckedCreateWithoutUsersInput>
  export type UserTaskProgressCreateManyUsersInputEnvelope = {
    data: UserTaskProgressCreateManyUsersInput | UserTaskProgressCreateManyUsersInput[]
    skipDuplicates?: boolean
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesCreateNestedManyWithoutDevotional_goalsInput
    tasks?: DevotionalTaskCreateNestedManyWithoutGoalInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUncheckedCreateNestedManyWithoutDevotional_goalsInput
    tasks?: DevotionalTaskUncheckedCreateNestedManyWithoutGoalInput
    where: DevotionalGoalWhereUniqueInput
    create: XOR<DevotionalGoalCreateWithoutUsersInput, DevotionalGoalUncheckedCreateWithoutUsersInput>
    where: AiPlanWhereUniqueInput
    update: XOR<AiPlanUpdateWithoutUserInput, AiPlanUncheckedUpdateWithoutUserInput>
    create: XOR<AiPlanCreateWithoutUserInput, AiPlanUncheckedCreateWithoutUserInput>
    where: AiPlanWhereUniqueInput
    data: XOR<AiPlanUpdateWithoutUserInput, AiPlanUncheckedUpdateWithoutUserInput>
  export type AiPlanUpdateManyWithWhereWithoutUserInput = {
    where: AiPlanScalarWhereInput
    data: XOR<AiPlanUpdateManyMutationInput, AiPlanUncheckedUpdateManyWithoutUserInput>
    AND?: AiPlanScalarWhereInput | AiPlanScalarWhereInput[]
    OR?: AiPlanScalarWhereInput[]
    NOT?: AiPlanScalarWhereInput | AiPlanScalarWhereInput[]
    id?: UuidFilter<"AiPlan"> | string
    user_id?: UuidFilter<"AiPlan"> | string
    title?: StringFilter<"AiPlan"> | string
    description?: StringNullableFilter<"AiPlan"> | string | null
    created_at?: DateTimeNullableFilter<"AiPlan"> | Date | string | null
    where: DailyTaskCompletionWhereUniqueInput
    update: XOR<DailyTaskCompletionUpdateWithoutUserInput, DailyTaskCompletionUncheckedUpdateWithoutUserInput>
    create: XOR<DailyTaskCompletionCreateWithoutUserInput, DailyTaskCompletionUncheckedCreateWithoutUserInput>
    where: DailyTaskCompletionWhereUniqueInput
    data: XOR<DailyTaskCompletionUpdateWithoutUserInput, DailyTaskCompletionUncheckedUpdateWithoutUserInput>
  export type DailyTaskCompletionUpdateManyWithWhereWithoutUserInput = {
    where: DailyTaskCompletionScalarWhereInput
    data: XOR<DailyTaskCompletionUpdateManyMutationInput, DailyTaskCompletionUncheckedUpdateManyWithoutUserInput>
    AND?: DailyTaskCompletionScalarWhereInput | DailyTaskCompletionScalarWhereInput[]
    OR?: DailyTaskCompletionScalarWhereInput[]
    NOT?: DailyTaskCompletionScalarWhereInput | DailyTaskCompletionScalarWhereInput[]
    id?: UuidFilter<"DailyTaskCompletion"> | string
    task_id?: UuidFilter<"DailyTaskCompletion"> | string
    user_id?: UuidFilter<"DailyTaskCompletion"> | string
    completion_date?: DateTimeFilter<"DailyTaskCompletion"> | Date | string
    created_at?: DateTimeNullableFilter<"DailyTaskCompletion"> | Date | string | null
    where: DailyTaskWhereUniqueInput
    update: XOR<DailyTaskUpdateWithoutUserInput, DailyTaskUncheckedUpdateWithoutUserInput>
    create: XOR<DailyTaskCreateWithoutUserInput, DailyTaskUncheckedCreateWithoutUserInput>
    where: DailyTaskWhereUniqueInput
    data: XOR<DailyTaskUpdateWithoutUserInput, DailyTaskUncheckedUpdateWithoutUserInput>
  export type DailyTaskUpdateManyWithWhereWithoutUserInput = {
    where: DailyTaskScalarWhereInput
    data: XOR<DailyTaskUpdateManyMutationInput, DailyTaskUncheckedUpdateManyWithoutUserInput>
    AND?: DailyTaskScalarWhereInput | DailyTaskScalarWhereInput[]
    OR?: DailyTaskScalarWhereInput[]
    NOT?: DailyTaskScalarWhereInput | DailyTaskScalarWhereInput[]
    id?: UuidFilter<"DailyTask"> | string
    user_id?: UuidFilter<"DailyTask"> | string
    title?: StringFilter<"DailyTask"> | string
    description?: StringNullableFilter<"DailyTask"> | string | null
    created_at?: DateTimeNullableFilter<"DailyTask"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"DailyTask"> | Date | string | null
    is_recurring?: BoolNullableFilter<"DailyTask"> | boolean | null
    ai_generated?: BoolNullableFilter<"DailyTask"> | boolean | null
    where: JournalWhereUniqueInput
    update: XOR<JournalUpdateWithoutUserInput, JournalUncheckedUpdateWithoutUserInput>
    create: XOR<JournalCreateWithoutUserInput, JournalUncheckedCreateWithoutUserInput>
    where: JournalWhereUniqueInput
    data: XOR<JournalUpdateWithoutUserInput, JournalUncheckedUpdateWithoutUserInput>
  export type JournalUpdateManyWithWhereWithoutUserInput = {
    where: JournalScalarWhereInput
    data: XOR<JournalUpdateManyMutationInput, JournalUncheckedUpdateManyWithoutUserInput>
    AND?: JournalScalarWhereInput | JournalScalarWhereInput[]
    OR?: JournalScalarWhereInput[]
    NOT?: JournalScalarWhereInput | JournalScalarWhereInput[]
    id?: UuidFilter<"Journal"> | string
    user_id?: UuidFilter<"Journal"> | string
    title?: StringFilter<"Journal"> | string
    content?: StringFilter<"Journal"> | string
    mood?: StringNullableFilter<"Journal"> | string | null
    created_at?: DateTimeNullableFilter<"Journal"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Journal"> | Date | string | null
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
  export type LikeUpdateManyWithWhereWithoutUserInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutUserInput>
    AND?: LikeScalarWhereInput | LikeScalarWhereInput[]
    OR?: LikeScalarWhereInput[]
    NOT?: LikeScalarWhereInput | LikeScalarWhereInput[]
    id?: UuidFilter<"Like"> | string
    reflection_id?: UuidFilter<"Like"> | string
    user_id?: UuidFilter<"Like"> | string
    created_at?: DateTimeNullableFilter<"Like"> | Date | string | null
    where: ReflectionCommentWhereUniqueInput
    update: XOR<ReflectionCommentUpdateWithoutUserInput, ReflectionCommentUncheckedUpdateWithoutUserInput>
    create: XOR<ReflectionCommentCreateWithoutUserInput, ReflectionCommentUncheckedCreateWithoutUserInput>
    where: ReflectionCommentWhereUniqueInput
    data: XOR<ReflectionCommentUpdateWithoutUserInput, ReflectionCommentUncheckedUpdateWithoutUserInput>
  export type ReflectionCommentUpdateManyWithWhereWithoutUserInput = {
    where: ReflectionCommentScalarWhereInput
    data: XOR<ReflectionCommentUpdateManyMutationInput, ReflectionCommentUncheckedUpdateManyWithoutUserInput>
    AND?: ReflectionCommentScalarWhereInput | ReflectionCommentScalarWhereInput[]
    OR?: ReflectionCommentScalarWhereInput[]
    NOT?: ReflectionCommentScalarWhereInput | ReflectionCommentScalarWhereInput[]
    id?: UuidFilter<"ReflectionComment"> | string
    reflection_id?: UuidFilter<"ReflectionComment"> | string
    user_id?: UuidFilter<"ReflectionComment"> | string
    comment?: StringFilter<"ReflectionComment"> | string
    created_at?: DateTimeNullableFilter<"ReflectionComment"> | Date | string | null
    status?: StringNullableFilter<"ReflectionComment"> | string | null
    where: ReflectionLikeWhereUniqueInput
    update: XOR<ReflectionLikeUpdateWithoutUserInput, ReflectionLikeUncheckedUpdateWithoutUserInput>
    create: XOR<ReflectionLikeCreateWithoutUserInput, ReflectionLikeUncheckedCreateWithoutUserInput>
    where: ReflectionLikeWhereUniqueInput
    data: XOR<ReflectionLikeUpdateWithoutUserInput, ReflectionLikeUncheckedUpdateWithoutUserInput>
  export type ReflectionLikeUpdateManyWithWhereWithoutUserInput = {
    where: ReflectionLikeScalarWhereInput
    data: XOR<ReflectionLikeUpdateManyMutationInput, ReflectionLikeUncheckedUpdateManyWithoutUserInput>
    AND?: ReflectionLikeScalarWhereInput | ReflectionLikeScalarWhereInput[]
    OR?: ReflectionLikeScalarWhereInput[]
    NOT?: ReflectionLikeScalarWhereInput | ReflectionLikeScalarWhereInput[]
    id?: UuidFilter<"ReflectionLike"> | string
    reflection_id?: UuidFilter<"ReflectionLike"> | string
    user_id?: UuidFilter<"ReflectionLike"> | string
    created_at?: DateTimeNullableFilter<"ReflectionLike"> | Date | string | null
    where: ReflectionWhereUniqueInput
    update: XOR<ReflectionUpdateWithoutUserInput, ReflectionUncheckedUpdateWithoutUserInput>
    create: XOR<ReflectionCreateWithoutUserInput, ReflectionUncheckedCreateWithoutUserInput>
    where: ReflectionWhereUniqueInput
    data: XOR<ReflectionUpdateWithoutUserInput, ReflectionUncheckedUpdateWithoutUserInput>
  export type ReflectionUpdateManyWithWhereWithoutUserInput = {
    where: ReflectionScalarWhereInput
    data: XOR<ReflectionUpdateManyMutationInput, ReflectionUncheckedUpdateManyWithoutUserInput>
    AND?: ReflectionScalarWhereInput | ReflectionScalarWhereInput[]
    OR?: ReflectionScalarWhereInput[]
    NOT?: ReflectionScalarWhereInput | ReflectionScalarWhereInput[]
    id?: UuidFilter<"Reflection"> | string
    user_id?: UuidFilter<"Reflection"> | string
    text?: StringFilter<"Reflection"> | string
    mood?: StringNullableFilter<"Reflection"> | string | null
    created_at?: DateTimeNullableFilter<"Reflection"> | Date | string | null
    status?: StringNullableFilter<"Reflection"> | string | null
    where: UserAiTaskProgressWhereUniqueInput
    update: XOR<UserAiTaskProgressUpdateWithoutUserInput, UserAiTaskProgressUncheckedUpdateWithoutUserInput>
    create: XOR<UserAiTaskProgressCreateWithoutUserInput, UserAiTaskProgressUncheckedCreateWithoutUserInput>
    where: UserAiTaskProgressWhereUniqueInput
    data: XOR<UserAiTaskProgressUpdateWithoutUserInput, UserAiTaskProgressUncheckedUpdateWithoutUserInput>
  export type UserAiTaskProgressUpdateManyWithWhereWithoutUserInput = {
    where: UserAiTaskProgressScalarWhereInput
    data: XOR<UserAiTaskProgressUpdateManyMutationInput, UserAiTaskProgressUncheckedUpdateManyWithoutUserInput>
    AND?: UserAiTaskProgressScalarWhereInput | UserAiTaskProgressScalarWhereInput[]
    OR?: UserAiTaskProgressScalarWhereInput[]
    NOT?: UserAiTaskProgressScalarWhereInput | UserAiTaskProgressScalarWhereInput[]
    id?: UuidFilter<"UserAiTaskProgress"> | string
    user_id?: UuidFilter<"UserAiTaskProgress"> | string
    ai_plan_task_id?: UuidFilter<"UserAiTaskProgress"> | string
    completed_at?: DateTimeNullableFilter<"UserAiTaskProgress"> | Date | string | null
    where: UserTaskProgressWhereUniqueInput
    update: XOR<UserTaskProgressUpdateWithoutUsersInput, UserTaskProgressUncheckedUpdateWithoutUsersInput>
    create: XOR<UserTaskProgressCreateWithoutUsersInput, UserTaskProgressUncheckedCreateWithoutUsersInput>
    where: UserTaskProgressWhereUniqueInput
    data: XOR<UserTaskProgressUpdateWithoutUsersInput, UserTaskProgressUncheckedUpdateWithoutUsersInput>
  export type UserTaskProgressUpdateManyWithWhereWithoutUsersInput = {
    where: UserTaskProgressScalarWhereInput
    data: XOR<UserTaskProgressUpdateManyMutationInput, UserTaskProgressUncheckedUpdateManyWithoutUsersInput>
    AND?: UserTaskProgressScalarWhereInput | UserTaskProgressScalarWhereInput[]
    OR?: UserTaskProgressScalarWhereInput[]
    NOT?: UserTaskProgressScalarWhereInput | UserTaskProgressScalarWhereInput[]
    id?: UuidFilter<"UserTaskProgress"> | string
    user_id?: UuidNullableFilter<"UserTaskProgress"> | string | null
    devotional_task_id?: UuidNullableFilter<"UserTaskProgress"> | string | null
    completion_date?: DateTimeFilter<"UserTaskProgress"> | Date | string
    completedAt?: DateTimeNullableFilter<"UserTaskProgress"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"UserTaskProgress"> | Date | string | null
    update: XOR<DevotionalGoalUpdateWithoutUsersInput, DevotionalGoalUncheckedUpdateWithoutUsersInput>
    create: XOR<DevotionalGoalCreateWithoutUsersInput, DevotionalGoalUncheckedCreateWithoutUsersInput>
    where?: DevotionalGoalWhereInput
    where?: DevotionalGoalWhereInput
    data: XOR<DevotionalGoalUpdateWithoutUsersInput, DevotionalGoalUncheckedUpdateWithoutUsersInput>
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUpdateManyWithoutDevotional_goalsNestedInput
    tasks?: DevotionalTaskUpdateManyWithoutGoalNestedInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUncheckedUpdateManyWithoutDevotional_goalsNestedInput
    tasks?: DevotionalTaskUncheckedUpdateManyWithoutGoalNestedInput
    id?: string
    created_at?: Date | string | null
    user: UserCreateNestedOneWithoutLikesInput
    id?: string
    user_id: string
    created_at?: Date | string | null
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutReflectionInput, LikeUncheckedCreateWithoutReflectionInput>
  export type LikeCreateManyReflectionInputEnvelope = {
    data: LikeCreateManyReflectionInput | LikeCreateManyReflectionInput[]
    skipDuplicates?: boolean
    id?: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
    user: UserCreateNestedOneWithoutReflectionCommentsInput
    id?: string
    user_id: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
    where: ReflectionCommentWhereUniqueInput
    create: XOR<ReflectionCommentCreateWithoutReflectionInput, ReflectionCommentUncheckedCreateWithoutReflectionInput>
  export type ReflectionCommentCreateManyReflectionInputEnvelope = {
    data: ReflectionCommentCreateManyReflectionInput | ReflectionCommentCreateManyReflectionInput[]
    skipDuplicates?: boolean
    id?: string
    created_at?: Date | string | null
    user: UserCreateNestedOneWithoutReflectionLikesInput
    id?: string
    user_id: string
    created_at?: Date | string | null
    where: ReflectionLikeWhereUniqueInput
    create: XOR<ReflectionLikeCreateWithoutReflectionInput, ReflectionLikeUncheckedCreateWithoutReflectionInput>
  export type ReflectionLikeCreateManyReflectionInputEnvelope = {
    data: ReflectionLikeCreateManyReflectionInput | ReflectionLikeCreateManyReflectionInput[]
    skipDuplicates?: boolean
    nicheTag: NicheTagCreateNestedOneWithoutReflectionNicheTagsInput
    niche_tag_id: string
    where: ReflectionNicheTagWhereUniqueInput
    create: XOR<ReflectionNicheTagCreateWithoutReflectionInput, ReflectionNicheTagUncheckedCreateWithoutReflectionInput>
  export type ReflectionNicheTagCreateManyReflectionInputEnvelope = {
    data: ReflectionNicheTagCreateManyReflectionInput | ReflectionNicheTagCreateManyReflectionInput[]
    skipDuplicates?: boolean
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReflectionsInput, UserUncheckedCreateWithoutReflectionsInput>
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutReflectionInput, LikeUncheckedUpdateWithoutReflectionInput>
    create: XOR<LikeCreateWithoutReflectionInput, LikeUncheckedCreateWithoutReflectionInput>
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutReflectionInput, LikeUncheckedUpdateWithoutReflectionInput>
  export type LikeUpdateManyWithWhereWithoutReflectionInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutReflectionInput>
    where: ReflectionCommentWhereUniqueInput
    update: XOR<ReflectionCommentUpdateWithoutReflectionInput, ReflectionCommentUncheckedUpdateWithoutReflectionInput>
    create: XOR<ReflectionCommentCreateWithoutReflectionInput, ReflectionCommentUncheckedCreateWithoutReflectionInput>
    where: ReflectionCommentWhereUniqueInput
    data: XOR<ReflectionCommentUpdateWithoutReflectionInput, ReflectionCommentUncheckedUpdateWithoutReflectionInput>
  export type ReflectionCommentUpdateManyWithWhereWithoutReflectionInput = {
    where: ReflectionCommentScalarWhereInput
    data: XOR<ReflectionCommentUpdateManyMutationInput, ReflectionCommentUncheckedUpdateManyWithoutReflectionInput>
    where: ReflectionLikeWhereUniqueInput
    update: XOR<ReflectionLikeUpdateWithoutReflectionInput, ReflectionLikeUncheckedUpdateWithoutReflectionInput>
    create: XOR<ReflectionLikeCreateWithoutReflectionInput, ReflectionLikeUncheckedCreateWithoutReflectionInput>
    where: ReflectionLikeWhereUniqueInput
    data: XOR<ReflectionLikeUpdateWithoutReflectionInput, ReflectionLikeUncheckedUpdateWithoutReflectionInput>
  export type ReflectionLikeUpdateManyWithWhereWithoutReflectionInput = {
    where: ReflectionLikeScalarWhereInput
    data: XOR<ReflectionLikeUpdateManyMutationInput, ReflectionLikeUncheckedUpdateManyWithoutReflectionInput>
    where: ReflectionNicheTagWhereUniqueInput
    update: XOR<ReflectionNicheTagUpdateWithoutReflectionInput, ReflectionNicheTagUncheckedUpdateWithoutReflectionInput>
    create: XOR<ReflectionNicheTagCreateWithoutReflectionInput, ReflectionNicheTagUncheckedCreateWithoutReflectionInput>
    where: ReflectionNicheTagWhereUniqueInput
    data: XOR<ReflectionNicheTagUpdateWithoutReflectionInput, ReflectionNicheTagUncheckedUpdateWithoutReflectionInput>
  export type ReflectionNicheTagUpdateManyWithWhereWithoutReflectionInput = {
    where: ReflectionNicheTagScalarWhereInput
    data: XOR<ReflectionNicheTagUpdateManyMutationInput, ReflectionNicheTagUncheckedUpdateManyWithoutReflectionInput>
    AND?: ReflectionNicheTagScalarWhereInput | ReflectionNicheTagScalarWhereInput[]
    OR?: ReflectionNicheTagScalarWhereInput[]
    NOT?: ReflectionNicheTagScalarWhereInput | ReflectionNicheTagScalarWhereInput[]
    reflection_id?: UuidFilter<"ReflectionNicheTag"> | string
    niche_tag_id?: UuidFilter<"ReflectionNicheTag"> | string
    update: XOR<UserUpdateWithoutReflectionsInput, UserUncheckedUpdateWithoutReflectionsInput>
    create: XOR<UserCreateWithoutReflectionsInput, UserUncheckedCreateWithoutReflectionsInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReflectionsInput, UserUncheckedUpdateWithoutReflectionsInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagCreateNestedManyWithoutReflectionInput
    user: UserCreateNestedOneWithoutReflectionsInput
    id?: string
    user_id: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedCreateNestedManyWithoutReflectionInput
    where: ReflectionWhereUniqueInput
    create: XOR<ReflectionCreateWithoutLikesInput, ReflectionUncheckedCreateWithoutLikesInput>
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    update: XOR<ReflectionUpdateWithoutLikesInput, ReflectionUncheckedUpdateWithoutLikesInput>
    create: XOR<ReflectionCreateWithoutLikesInput, ReflectionUncheckedCreateWithoutLikesInput>
    where?: ReflectionWhereInput
    where?: ReflectionWhereInput
    data: XOR<ReflectionUpdateWithoutLikesInput, ReflectionUncheckedUpdateWithoutLikesInput>
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reflectionComments?: ReflectionCommentUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUpdateManyWithoutReflectionNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedUpdateManyWithoutReflectionNestedInput
    update: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagCreateNestedManyWithoutReflectionInput
    user: UserCreateNestedOneWithoutReflectionsInput
    id?: string
    user_id: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedCreateNestedManyWithoutReflectionInput
    where: ReflectionWhereUniqueInput
    create: XOR<ReflectionCreateWithoutReflectionCommentsInput, ReflectionUncheckedCreateWithoutReflectionCommentsInput>
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReflectionCommentsInput, UserUncheckedCreateWithoutReflectionCommentsInput>
    update: XOR<ReflectionUpdateWithoutReflectionCommentsInput, ReflectionUncheckedUpdateWithoutReflectionCommentsInput>
    create: XOR<ReflectionCreateWithoutReflectionCommentsInput, ReflectionUncheckedCreateWithoutReflectionCommentsInput>
    where?: ReflectionWhereInput
    where?: ReflectionWhereInput
    data: XOR<ReflectionUpdateWithoutReflectionCommentsInput, ReflectionUncheckedUpdateWithoutReflectionCommentsInput>
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUpdateManyWithoutReflectionNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedUpdateManyWithoutReflectionNestedInput
    update: XOR<UserUpdateWithoutReflectionCommentsInput, UserUncheckedUpdateWithoutReflectionCommentsInput>
    create: XOR<UserCreateWithoutReflectionCommentsInput, UserUncheckedCreateWithoutReflectionCommentsInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReflectionCommentsInput, UserUncheckedUpdateWithoutReflectionCommentsInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagCreateNestedManyWithoutReflectionInput
    user: UserCreateNestedOneWithoutReflectionsInput
    id?: string
    user_id: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutReflectionInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedCreateNestedManyWithoutReflectionInput
    where: ReflectionWhereUniqueInput
    create: XOR<ReflectionCreateWithoutReflectionLikesInput, ReflectionUncheckedCreateWithoutReflectionLikesInput>
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReflectionLikesInput, UserUncheckedCreateWithoutReflectionLikesInput>
    update: XOR<ReflectionUpdateWithoutReflectionLikesInput, ReflectionUncheckedUpdateWithoutReflectionLikesInput>
    create: XOR<ReflectionCreateWithoutReflectionLikesInput, ReflectionUncheckedCreateWithoutReflectionLikesInput>
    where?: ReflectionWhereInput
    where?: ReflectionWhereInput
    data: XOR<ReflectionUpdateWithoutReflectionLikesInput, ReflectionUncheckedUpdateWithoutReflectionLikesInput>
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUpdateManyWithoutReflectionNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedUpdateManyWithoutReflectionNestedInput
    update: XOR<UserUpdateWithoutReflectionLikesInput, UserUncheckedUpdateWithoutReflectionLikesInput>
    create: XOR<UserCreateWithoutReflectionLikesInput, UserUncheckedCreateWithoutReflectionLikesInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReflectionLikesInput, UserUncheckedUpdateWithoutReflectionLikesInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutJournalsInput, UserUncheckedCreateWithoutJournalsInput>
    update: XOR<UserUpdateWithoutJournalsInput, UserUncheckedUpdateWithoutJournalsInput>
    create: XOR<UserCreateWithoutJournalsInput, UserUncheckedCreateWithoutJournalsInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutJournalsInput, UserUncheckedUpdateWithoutJournalsInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    title: string
    description?: string | null
    is_recurring?: boolean | null
    created_at?: Date | string | null
    id?: string
    title: string
    description?: string | null
    is_recurring?: boolean | null
    created_at?: Date | string | null
    where: devotional_daily_task_templatesWhereUniqueInput
    create: XOR<devotional_daily_task_templatesCreateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput>
  export type devotional_daily_task_templatesCreateManyDevotional_goalsInputEnvelope = {
    data: devotional_daily_task_templatesCreateManyDevotional_goalsInput | devotional_daily_task_templatesCreateManyDevotional_goalsInput[]
    skipDuplicates?: boolean
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutDevotional_taskInput
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutDevotional_taskInput
    where: DevotionalTaskWhereUniqueInput
    create: XOR<DevotionalTaskCreateWithoutGoalInput, DevotionalTaskUncheckedCreateWithoutGoalInput>
  export type DevotionalTaskCreateManyGoalInputEnvelope = {
    data: DevotionalTaskCreateManyGoalInput | DevotionalTaskCreateManyGoalInput[]
    skipDuplicates?: boolean
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDevotionalGoalInput, UserUncheckedCreateWithoutDevotionalGoalInput>
  export type UserCreateManyDevotionalGoalInputEnvelope = {
    data: UserCreateManyDevotionalGoalInput | UserCreateManyDevotionalGoalInput[]
    skipDuplicates?: boolean
    where: devotional_daily_task_templatesWhereUniqueInput
    update: XOR<devotional_daily_task_templatesUpdateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedUpdateWithoutDevotional_goalsInput>
    create: XOR<devotional_daily_task_templatesCreateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedCreateWithoutDevotional_goalsInput>
    where: devotional_daily_task_templatesWhereUniqueInput
    data: XOR<devotional_daily_task_templatesUpdateWithoutDevotional_goalsInput, devotional_daily_task_templatesUncheckedUpdateWithoutDevotional_goalsInput>
  export type devotional_daily_task_templatesUpdateManyWithWhereWithoutDevotional_goalsInput = {
    where: devotional_daily_task_templatesScalarWhereInput
    data: XOR<devotional_daily_task_templatesUpdateManyMutationInput, devotional_daily_task_templatesUncheckedUpdateManyWithoutDevotional_goalsInput>
    AND?: devotional_daily_task_templatesScalarWhereInput | devotional_daily_task_templatesScalarWhereInput[]
    OR?: devotional_daily_task_templatesScalarWhereInput[]
    NOT?: devotional_daily_task_templatesScalarWhereInput | devotional_daily_task_templatesScalarWhereInput[]
    id?: UuidFilter<"devotional_daily_task_templates"> | string
    devotional_id?: UuidFilter<"devotional_daily_task_templates"> | string
    title?: StringFilter<"devotional_daily_task_templates"> | string
    description?: StringNullableFilter<"devotional_daily_task_templates"> | string | null
    is_recurring?: BoolNullableFilter<"devotional_daily_task_templates"> | boolean | null
    created_at?: DateTimeNullableFilter<"devotional_daily_task_templates"> | Date | string | null
    where: DevotionalTaskWhereUniqueInput
    update: XOR<DevotionalTaskUpdateWithoutGoalInput, DevotionalTaskUncheckedUpdateWithoutGoalInput>
    create: XOR<DevotionalTaskCreateWithoutGoalInput, DevotionalTaskUncheckedCreateWithoutGoalInput>
    where: DevotionalTaskWhereUniqueInput
    data: XOR<DevotionalTaskUpdateWithoutGoalInput, DevotionalTaskUncheckedUpdateWithoutGoalInput>
  export type DevotionalTaskUpdateManyWithWhereWithoutGoalInput = {
    where: DevotionalTaskScalarWhereInput
    data: XOR<DevotionalTaskUpdateManyMutationInput, DevotionalTaskUncheckedUpdateManyWithoutGoalInput>
    AND?: DevotionalTaskScalarWhereInput | DevotionalTaskScalarWhereInput[]
    OR?: DevotionalTaskScalarWhereInput[]
    NOT?: DevotionalTaskScalarWhereInput | DevotionalTaskScalarWhereInput[]
    id?: UuidFilter<"DevotionalTask"> | string
    goal_id?: UuidNullableFilter<"DevotionalTask"> | string | null
    day_number?: IntFilter<"DevotionalTask"> | number
    task_text?: StringFilter<"DevotionalTask"> | string
    created_at?: DateTimeNullableFilter<"DevotionalTask"> | Date | string | null
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutDevotionalGoalInput, UserUncheckedUpdateWithoutDevotionalGoalInput>
    create: XOR<UserCreateWithoutDevotionalGoalInput, UserUncheckedCreateWithoutDevotionalGoalInput>
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutDevotionalGoalInput, UserUncheckedUpdateWithoutDevotionalGoalInput>
  export type UserUpdateManyWithWhereWithoutDevotionalGoalInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutDevotionalGoalInput>
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: UuidFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    password?: StringFilter<"User"> | string
    emailOptIn?: BoolNullableFilter<"User"> | boolean | null
    streak?: IntFilter<"User"> | number
    streak_last_date?: DateTimeNullableFilter<"User"> | Date | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    devotional_goal_id?: UuidNullableFilter<"User"> | string | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesCreateNestedManyWithoutDevotional_goalsInput
    users?: UserCreateNestedManyWithoutDevotionalGoalInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUncheckedCreateNestedManyWithoutDevotional_goalsInput
    users?: UserUncheckedCreateNestedManyWithoutDevotionalGoalInput
    where: DevotionalGoalWhereUniqueInput
    create: XOR<DevotionalGoalCreateWithoutTasksInput, DevotionalGoalUncheckedCreateWithoutTasksInput>
    id?: string
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    users?: UserCreateNestedOneWithoutUser_task_progressInput
    id?: string
    user_id?: string | null
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    where: UserTaskProgressWhereUniqueInput
    create: XOR<UserTaskProgressCreateWithoutDevotional_taskInput, UserTaskProgressUncheckedCreateWithoutDevotional_taskInput>
  export type UserTaskProgressCreateManyDevotional_taskInputEnvelope = {
    data: UserTaskProgressCreateManyDevotional_taskInput | UserTaskProgressCreateManyDevotional_taskInput[]
    skipDuplicates?: boolean
    update: XOR<DevotionalGoalUpdateWithoutTasksInput, DevotionalGoalUncheckedUpdateWithoutTasksInput>
    create: XOR<DevotionalGoalCreateWithoutTasksInput, DevotionalGoalUncheckedCreateWithoutTasksInput>
    where?: DevotionalGoalWhereInput
    where?: DevotionalGoalWhereInput
    data: XOR<DevotionalGoalUpdateWithoutTasksInput, DevotionalGoalUncheckedUpdateWithoutTasksInput>
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUpdateManyWithoutDevotional_goalsNestedInput
    users?: UserUpdateManyWithoutDevotionalGoalNestedInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_daily_task_templates?: devotional_daily_task_templatesUncheckedUpdateManyWithoutDevotional_goalsNestedInput
    users?: UserUncheckedUpdateManyWithoutDevotionalGoalNestedInput
    where: UserTaskProgressWhereUniqueInput
    update: XOR<UserTaskProgressUpdateWithoutDevotional_taskInput, UserTaskProgressUncheckedUpdateWithoutDevotional_taskInput>
    create: XOR<UserTaskProgressCreateWithoutDevotional_taskInput, UserTaskProgressUncheckedCreateWithoutDevotional_taskInput>
    where: UserTaskProgressWhereUniqueInput
    data: XOR<UserTaskProgressUpdateWithoutDevotional_taskInput, UserTaskProgressUncheckedUpdateWithoutDevotional_taskInput>
  export type UserTaskProgressUpdateManyWithWhereWithoutDevotional_taskInput = {
    where: UserTaskProgressScalarWhereInput
    data: XOR<UserTaskProgressUpdateManyMutationInput, UserTaskProgressUncheckedUpdateManyWithoutDevotional_taskInput>
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    goal?: DevotionalGoalCreateNestedOneWithoutTasksInput
    id?: string
    goal_id?: string | null
    day_number: number
    task_text: string
    created_at?: Date | string | null
    where: DevotionalTaskWhereUniqueInput
    create: XOR<DevotionalTaskCreateWithoutUser_task_progressInput, DevotionalTaskUncheckedCreateWithoutUser_task_progressInput>
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUser_task_progressInput, UserUncheckedCreateWithoutUser_task_progressInput>
    update: XOR<DevotionalTaskUpdateWithoutUser_task_progressInput, DevotionalTaskUncheckedUpdateWithoutUser_task_progressInput>
    create: XOR<DevotionalTaskCreateWithoutUser_task_progressInput, DevotionalTaskUncheckedCreateWithoutUser_task_progressInput>
    where?: DevotionalTaskWhereInput
    where?: DevotionalTaskWhereInput
    data: XOR<DevotionalTaskUpdateWithoutUser_task_progressInput, DevotionalTaskUncheckedUpdateWithoutUser_task_progressInput>
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    goal?: DevotionalGoalUpdateOneWithoutTasksNestedInput
    id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update: XOR<UserUpdateWithoutUser_task_progressInput, UserUncheckedUpdateWithoutUser_task_progressInput>
    create: XOR<UserCreateWithoutUser_task_progressInput, UserUncheckedCreateWithoutUser_task_progressInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUser_task_progressInput, UserUncheckedUpdateWithoutUser_task_progressInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    reflection: ReflectionCreateNestedOneWithoutReflectionNicheTagsInput
    reflection_id: string
    where: ReflectionNicheTagWhereUniqueInput
    create: XOR<ReflectionNicheTagCreateWithoutNicheTagInput, ReflectionNicheTagUncheckedCreateWithoutNicheTagInput>
  export type ReflectionNicheTagCreateManyNicheTagInputEnvelope = {
    data: ReflectionNicheTagCreateManyNicheTagInput | ReflectionNicheTagCreateManyNicheTagInput[]
    skipDuplicates?: boolean
    where: ReflectionNicheTagWhereUniqueInput
    update: XOR<ReflectionNicheTagUpdateWithoutNicheTagInput, ReflectionNicheTagUncheckedUpdateWithoutNicheTagInput>
    create: XOR<ReflectionNicheTagCreateWithoutNicheTagInput, ReflectionNicheTagUncheckedCreateWithoutNicheTagInput>
    where: ReflectionNicheTagWhereUniqueInput
    data: XOR<ReflectionNicheTagUpdateWithoutNicheTagInput, ReflectionNicheTagUncheckedUpdateWithoutNicheTagInput>
  export type ReflectionNicheTagUpdateManyWithWhereWithoutNicheTagInput = {
    where: ReflectionNicheTagScalarWhereInput
    data: XOR<ReflectionNicheTagUpdateManyMutationInput, ReflectionNicheTagUncheckedUpdateManyWithoutNicheTagInput>
    id?: string
    name: string
    id?: string
    name: string
    where: NicheTagWhereUniqueInput
    create: XOR<NicheTagCreateWithoutReflectionNicheTagsInput, NicheTagUncheckedCreateWithoutReflectionNicheTagsInput>
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutReflectionInput
    user: UserCreateNestedOneWithoutReflectionsInput
    id?: string
    user_id: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
    likes?: LikeUncheckedCreateNestedManyWithoutReflectionInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutReflectionInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutReflectionInput
    where: ReflectionWhereUniqueInput
    create: XOR<ReflectionCreateWithoutReflectionNicheTagsInput, ReflectionUncheckedCreateWithoutReflectionNicheTagsInput>
    update: XOR<NicheTagUpdateWithoutReflectionNicheTagsInput, NicheTagUncheckedUpdateWithoutReflectionNicheTagsInput>
    create: XOR<NicheTagCreateWithoutReflectionNicheTagsInput, NicheTagUncheckedCreateWithoutReflectionNicheTagsInput>
    where?: NicheTagWhereInput
    where?: NicheTagWhereInput
    data: XOR<NicheTagUpdateWithoutReflectionNicheTagsInput, NicheTagUncheckedUpdateWithoutReflectionNicheTagsInput>
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    update: XOR<ReflectionUpdateWithoutReflectionNicheTagsInput, ReflectionUncheckedUpdateWithoutReflectionNicheTagsInput>
    create: XOR<ReflectionCreateWithoutReflectionNicheTagsInput, ReflectionUncheckedCreateWithoutReflectionNicheTagsInput>
    where?: ReflectionWhereInput
    where?: ReflectionWhereInput
    data: XOR<ReflectionUpdateWithoutReflectionNicheTagsInput, ReflectionUncheckedUpdateWithoutReflectionNicheTagsInput>
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutReflectionNestedInput
    user?: UserUpdateOneRequiredWithoutReflectionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutReflectionNestedInput
    id?: string
    completion_date: Date | string
    created_at?: Date | string | null
    user: UserCreateNestedOneWithoutDailyTaskCompletionsInput
    id?: string
    user_id: string
    completion_date: Date | string
    created_at?: Date | string | null
    where: DailyTaskCompletionWhereUniqueInput
    create: XOR<DailyTaskCompletionCreateWithoutTaskInput, DailyTaskCompletionUncheckedCreateWithoutTaskInput>
  export type DailyTaskCompletionCreateManyTaskInputEnvelope = {
    data: DailyTaskCompletionCreateManyTaskInput | DailyTaskCompletionCreateManyTaskInput[]
    skipDuplicates?: boolean
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDailyTasksInput, UserUncheckedCreateWithoutDailyTasksInput>
    where: DailyTaskCompletionWhereUniqueInput
    update: XOR<DailyTaskCompletionUpdateWithoutTaskInput, DailyTaskCompletionUncheckedUpdateWithoutTaskInput>
    create: XOR<DailyTaskCompletionCreateWithoutTaskInput, DailyTaskCompletionUncheckedCreateWithoutTaskInput>
    where: DailyTaskCompletionWhereUniqueInput
    data: XOR<DailyTaskCompletionUpdateWithoutTaskInput, DailyTaskCompletionUncheckedUpdateWithoutTaskInput>
  export type DailyTaskCompletionUpdateManyWithWhereWithoutTaskInput = {
    where: DailyTaskCompletionScalarWhereInput
    data: XOR<DailyTaskCompletionUpdateManyMutationInput, DailyTaskCompletionUncheckedUpdateManyWithoutTaskInput>
    update: XOR<UserUpdateWithoutDailyTasksInput, UserUncheckedUpdateWithoutDailyTasksInput>
    create: XOR<UserCreateWithoutDailyTasksInput, UserUncheckedCreateWithoutDailyTasksInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDailyTasksInput, UserUncheckedUpdateWithoutDailyTasksInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
    user: UserCreateNestedOneWithoutDailyTasksInput
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
    where: DailyTaskWhereUniqueInput
    create: XOR<DailyTaskCreateWithoutCompletionsInput, DailyTaskUncheckedCreateWithoutCompletionsInput>
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDailyTaskCompletionsInput, UserUncheckedCreateWithoutDailyTaskCompletionsInput>
    update: XOR<DailyTaskUpdateWithoutCompletionsInput, DailyTaskUncheckedUpdateWithoutCompletionsInput>
    create: XOR<DailyTaskCreateWithoutCompletionsInput, DailyTaskUncheckedCreateWithoutCompletionsInput>
    where?: DailyTaskWhereInput
    where?: DailyTaskWhereInput
    data: XOR<DailyTaskUpdateWithoutCompletionsInput, DailyTaskUncheckedUpdateWithoutCompletionsInput>
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user?: UserUpdateOneRequiredWithoutDailyTasksNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    update: XOR<UserUpdateWithoutDailyTaskCompletionsInput, UserUncheckedUpdateWithoutDailyTaskCompletionsInput>
    create: XOR<UserCreateWithoutDailyTaskCompletionsInput, UserUncheckedCreateWithoutDailyTaskCompletionsInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDailyTaskCompletionsInput, UserUncheckedUpdateWithoutDailyTaskCompletionsInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    tasks?: DevotionalTaskCreateNestedManyWithoutGoalInput
    users?: UserCreateNestedManyWithoutDevotionalGoalInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    tasks?: DevotionalTaskUncheckedCreateNestedManyWithoutGoalInput
    users?: UserUncheckedCreateNestedManyWithoutDevotionalGoalInput
    where: DevotionalGoalWhereUniqueInput
    create: XOR<DevotionalGoalCreateWithoutDevotional_daily_task_templatesInput, DevotionalGoalUncheckedCreateWithoutDevotional_daily_task_templatesInput>
    update: XOR<DevotionalGoalUpdateWithoutDevotional_daily_task_templatesInput, DevotionalGoalUncheckedUpdateWithoutDevotional_daily_task_templatesInput>
    create: XOR<DevotionalGoalCreateWithoutDevotional_daily_task_templatesInput, DevotionalGoalUncheckedCreateWithoutDevotional_daily_task_templatesInput>
    where?: DevotionalGoalWhereInput
    where?: DevotionalGoalWhereInput
    data: XOR<DevotionalGoalUpdateWithoutDevotional_daily_task_templatesInput, DevotionalGoalUncheckedUpdateWithoutDevotional_daily_task_templatesInput>
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tasks?: DevotionalTaskUpdateManyWithoutGoalNestedInput
    users?: UserUpdateManyWithoutDevotionalGoalNestedInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tasks?: DevotionalTaskUncheckedUpdateManyWithoutGoalNestedInput
    users?: UserUncheckedUpdateManyWithoutDevotionalGoalNestedInput
    id?: string
    text: string
    completed?: boolean
    id?: string
    text: string
    completed?: boolean
    where: AiPlanDailyTaskWhereUniqueInput
    create: XOR<AiPlanDailyTaskCreateWithoutAiPlanInput, AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput>
  export type AiPlanDailyTaskCreateManyAiPlanInputEnvelope = {
    data: AiPlanDailyTaskCreateManyAiPlanInput | AiPlanDailyTaskCreateManyAiPlanInput[]
    skipDuplicates?: boolean
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    progress?: UserAiTaskProgressCreateNestedManyWithoutAi_plan_taskInput
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    progress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutAi_plan_taskInput
    where: AiPlanTaskWhereUniqueInput
    create: XOR<AiPlanTaskCreateWithoutAi_planInput, AiPlanTaskUncheckedCreateWithoutAi_planInput>
  export type AiPlanTaskCreateManyAi_planInputEnvelope = {
    data: AiPlanTaskCreateManyAi_planInput | AiPlanTaskCreateManyAi_planInput[]
    skipDuplicates?: boolean
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAiPlanInput, UserUncheckedCreateWithoutAiPlanInput>
    where: AiPlanDailyTaskWhereUniqueInput
    update: XOR<AiPlanDailyTaskUpdateWithoutAiPlanInput, AiPlanDailyTaskUncheckedUpdateWithoutAiPlanInput>
    create: XOR<AiPlanDailyTaskCreateWithoutAiPlanInput, AiPlanDailyTaskUncheckedCreateWithoutAiPlanInput>
    where: AiPlanDailyTaskWhereUniqueInput
    data: XOR<AiPlanDailyTaskUpdateWithoutAiPlanInput, AiPlanDailyTaskUncheckedUpdateWithoutAiPlanInput>
  export type AiPlanDailyTaskUpdateManyWithWhereWithoutAiPlanInput = {
    where: AiPlanDailyTaskScalarWhereInput
    data: XOR<AiPlanDailyTaskUpdateManyMutationInput, AiPlanDailyTaskUncheckedUpdateManyWithoutAiPlanInput>
    AND?: AiPlanDailyTaskScalarWhereInput | AiPlanDailyTaskScalarWhereInput[]
    OR?: AiPlanDailyTaskScalarWhereInput[]
    NOT?: AiPlanDailyTaskScalarWhereInput | AiPlanDailyTaskScalarWhereInput[]
    id?: UuidFilter<"AiPlanDailyTask"> | string
    text?: StringFilter<"AiPlanDailyTask"> | string
    completed?: BoolFilter<"AiPlanDailyTask"> | boolean
    planId?: UuidFilter<"AiPlanDailyTask"> | string
    where: AiPlanTaskWhereUniqueInput
    update: XOR<AiPlanTaskUpdateWithoutAi_planInput, AiPlanTaskUncheckedUpdateWithoutAi_planInput>
    create: XOR<AiPlanTaskCreateWithoutAi_planInput, AiPlanTaskUncheckedCreateWithoutAi_planInput>
    where: AiPlanTaskWhereUniqueInput
    data: XOR<AiPlanTaskUpdateWithoutAi_planInput, AiPlanTaskUncheckedUpdateWithoutAi_planInput>
  export type AiPlanTaskUpdateManyWithWhereWithoutAi_planInput = {
    where: AiPlanTaskScalarWhereInput
    data: XOR<AiPlanTaskUpdateManyMutationInput, AiPlanTaskUncheckedUpdateManyWithoutAi_planInput>
    AND?: AiPlanTaskScalarWhereInput | AiPlanTaskScalarWhereInput[]
    OR?: AiPlanTaskScalarWhereInput[]
    NOT?: AiPlanTaskScalarWhereInput | AiPlanTaskScalarWhereInput[]
    id?: UuidFilter<"AiPlanTask"> | string
    ai_plan_id?: UuidFilter<"AiPlanTask"> | string
    day_number?: IntFilter<"AiPlanTask"> | number
    task_text?: StringFilter<"AiPlanTask"> | string
    created_at?: DateTimeNullableFilter<"AiPlanTask"> | Date | string | null
    update: XOR<UserUpdateWithoutAiPlanInput, UserUncheckedUpdateWithoutAiPlanInput>
    create: XOR<UserCreateWithoutAiPlanInput, UserUncheckedCreateWithoutAiPlanInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAiPlanInput, UserUncheckedUpdateWithoutAiPlanInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    dailyTasks?: AiPlanDailyTaskCreateNestedManyWithoutAiPlanInput
    user: UserCreateNestedOneWithoutAiPlanInput
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    dailyTasks?: AiPlanDailyTaskUncheckedCreateNestedManyWithoutAiPlanInput
    where: AiPlanWhereUniqueInput
    create: XOR<AiPlanCreateWithoutTasksInput, AiPlanUncheckedCreateWithoutTasksInput>
    id?: string
    completed_at?: Date | string | null
    user: UserCreateNestedOneWithoutUserAiTaskProgressInput
    id?: string
    user_id: string
    completed_at?: Date | string | null
    where: UserAiTaskProgressWhereUniqueInput
    create: XOR<UserAiTaskProgressCreateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput>
  export type UserAiTaskProgressCreateManyAi_plan_taskInputEnvelope = {
    data: UserAiTaskProgressCreateManyAi_plan_taskInput | UserAiTaskProgressCreateManyAi_plan_taskInput[]
    skipDuplicates?: boolean
    update: XOR<AiPlanUpdateWithoutTasksInput, AiPlanUncheckedUpdateWithoutTasksInput>
    create: XOR<AiPlanCreateWithoutTasksInput, AiPlanUncheckedCreateWithoutTasksInput>
    where?: AiPlanWhereInput
    where?: AiPlanWhereInput
    data: XOR<AiPlanUpdateWithoutTasksInput, AiPlanUncheckedUpdateWithoutTasksInput>
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyTasks?: AiPlanDailyTaskUpdateManyWithoutAiPlanNestedInput
    user?: UserUpdateOneRequiredWithoutAiPlanNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyTasks?: AiPlanDailyTaskUncheckedUpdateManyWithoutAiPlanNestedInput
    where: UserAiTaskProgressWhereUniqueInput
    update: XOR<UserAiTaskProgressUpdateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedUpdateWithoutAi_plan_taskInput>
    create: XOR<UserAiTaskProgressCreateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedCreateWithoutAi_plan_taskInput>
    where: UserAiTaskProgressWhereUniqueInput
    data: XOR<UserAiTaskProgressUpdateWithoutAi_plan_taskInput, UserAiTaskProgressUncheckedUpdateWithoutAi_plan_taskInput>
  export type UserAiTaskProgressUpdateManyWithWhereWithoutAi_plan_taskInput = {
    where: UserAiTaskProgressScalarWhereInput
    data: XOR<UserAiTaskProgressUpdateManyMutationInput, UserAiTaskProgressUncheckedUpdateManyWithoutAi_plan_taskInput>
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    ai_plan: AiPlanCreateNestedOneWithoutTasksInput
    id?: string
    ai_plan_id: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    where: AiPlanTaskWhereUniqueInput
    create: XOR<AiPlanTaskCreateWithoutProgressInput, AiPlanTaskUncheckedCreateWithoutProgressInput>
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskCreateNestedManyWithoutUserInput
    journals?: JournalCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeCreateNestedManyWithoutUserInput
    reflections?: ReflectionCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressCreateNestedManyWithoutUsersInput
    devotionalGoal?: DevotionalGoalCreateNestedOneWithoutUsersInput
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    devotional_goal_id?: string | null
    is_admin?: boolean | null
    AiPlan?: AiPlanUncheckedCreateNestedManyWithoutUserInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedCreateNestedManyWithoutUserInput
    dailyTasks?: DailyTaskUncheckedCreateNestedManyWithoutUserInput
    journals?: JournalUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    reflectionComments?: ReflectionCommentUncheckedCreateNestedManyWithoutUserInput
    reflectionLikes?: ReflectionLikeUncheckedCreateNestedManyWithoutUserInput
    reflections?: ReflectionUncheckedCreateNestedManyWithoutUserInput
    user_task_progress?: UserTaskProgressUncheckedCreateNestedManyWithoutUsersInput
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserAiTaskProgressInput, UserUncheckedCreateWithoutUserAiTaskProgressInput>
    update: XOR<AiPlanTaskUpdateWithoutProgressInput, AiPlanTaskUncheckedUpdateWithoutProgressInput>
    create: XOR<AiPlanTaskCreateWithoutProgressInput, AiPlanTaskUncheckedCreateWithoutProgressInput>
    where?: AiPlanTaskWhereInput
    where?: AiPlanTaskWhereInput
    data: XOR<AiPlanTaskUpdateWithoutProgressInput, AiPlanTaskUncheckedUpdateWithoutProgressInput>
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ai_plan?: AiPlanUpdateOneRequiredWithoutTasksNestedInput
    id?: StringFieldUpdateOperationsInput | string
    ai_plan_id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update: XOR<UserUpdateWithoutUserAiTaskProgressInput, UserUncheckedUpdateWithoutUserAiTaskProgressInput>
    create: XOR<UserCreateWithoutUserAiTaskProgressInput, UserUncheckedCreateWithoutUserAiTaskProgressInput>
    where?: UserWhereInput
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserAiTaskProgressInput, UserUncheckedUpdateWithoutUserAiTaskProgressInput>
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    devotionalGoal?: DevotionalGoalUpdateOneWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    devotional_goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    tasks?: AiPlanTaskCreateNestedManyWithoutAi_planInput
    user: UserCreateNestedOneWithoutAiPlanInput
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    tasks?: AiPlanTaskUncheckedCreateNestedManyWithoutAi_planInput
    where: AiPlanWhereUniqueInput
    create: XOR<AiPlanCreateWithoutDailyTasksInput, AiPlanUncheckedCreateWithoutDailyTasksInput>
    update: XOR<AiPlanUpdateWithoutDailyTasksInput, AiPlanUncheckedUpdateWithoutDailyTasksInput>
    create: XOR<AiPlanCreateWithoutDailyTasksInput, AiPlanUncheckedCreateWithoutDailyTasksInput>
    where?: AiPlanWhereInput
    where?: AiPlanWhereInput
    data: XOR<AiPlanUpdateWithoutDailyTasksInput, AiPlanUncheckedUpdateWithoutDailyTasksInput>
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tasks?: AiPlanTaskUpdateManyWithoutAi_planNestedInput
    user?: UserUpdateOneRequiredWithoutAiPlanNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tasks?: AiPlanTaskUncheckedUpdateManyWithoutAi_planNestedInput
  export type AiPlanCreateManyUserInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
  export type DailyTaskCompletionCreateManyUserInput = {
    id?: string
    task_id: string
    completion_date: Date | string
    created_at?: Date | string | null
  export type DailyTaskCreateManyUserInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_recurring?: boolean | null
    ai_generated?: boolean | null
  export type JournalCreateManyUserInput = {
    id?: string
    title: string
    content: string
    mood?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  export type LikeCreateManyUserInput = {
    id?: string
    reflection_id: string
    created_at?: Date | string | null
  export type ReflectionCommentCreateManyUserInput = {
    id?: string
    reflection_id: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
  export type ReflectionLikeCreateManyUserInput = {
    id?: string
    reflection_id: string
    created_at?: Date | string | null
  export type ReflectionCreateManyUserInput = {
    id?: string
    text: string
    mood?: string | null
    created_at?: Date | string | null
    status?: string | null
  export type UserAiTaskProgressCreateManyUserInput = {
    id?: string
    ai_plan_task_id: string
    completed_at?: Date | string | null
  export type UserTaskProgressCreateManyUsersInput = {
    id?: string
    devotional_task_id?: string | null
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyTasks?: AiPlanDailyTaskUpdateManyWithoutAiPlanNestedInput
    tasks?: AiPlanTaskUpdateManyWithoutAi_planNestedInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyTasks?: AiPlanDailyTaskUncheckedUpdateManyWithoutAiPlanNestedInput
    tasks?: AiPlanTaskUncheckedUpdateManyWithoutAi_planNestedInput
  export type AiPlanUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    task?: DailyTaskUpdateOneRequiredWithoutCompletionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    task_id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type DailyTaskCompletionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    task_id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completions?: DailyTaskCompletionUpdateManyWithoutTaskNestedInput
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completions?: DailyTaskCompletionUncheckedUpdateManyWithoutTaskNestedInput
  export type DailyTaskUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ai_generated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type JournalUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reflection?: ReflectionUpdateOneRequiredWithoutLikesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type LikeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    reflection?: ReflectionUpdateOneRequiredWithoutReflectionCommentsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  export type ReflectionCommentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reflection?: ReflectionUpdateOneRequiredWithoutReflectionLikesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type ReflectionLikeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reflection_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUpdateManyWithoutReflectionNestedInput
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutReflectionNestedInput
    reflectionNicheTags?: ReflectionNicheTagUncheckedUpdateManyWithoutReflectionNestedInput
  export type ReflectionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ai_plan_task?: AiPlanTaskUpdateOneRequiredWithoutProgressNestedInput
    id?: StringFieldUpdateOperationsInput | string
    ai_plan_task_id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserAiTaskProgressUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ai_plan_task_id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    devotional_task?: DevotionalTaskUpdateOneWithoutUser_task_progressNestedInput
    id?: StringFieldUpdateOperationsInput | string
    devotional_task_id?: NullableStringFieldUpdateOperationsInput | string | null
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserTaskProgressUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    devotional_task_id?: NullableStringFieldUpdateOperationsInput | string | null
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type LikeCreateManyReflectionInput = {
    id?: string
    user_id: string
    created_at?: Date | string | null
  export type ReflectionCommentCreateManyReflectionInput = {
    id?: string
    user_id: string
    comment: string
    created_at?: Date | string | null
    status?: string | null
  export type ReflectionLikeCreateManyReflectionInput = {
    id?: string
    user_id: string
    created_at?: Date | string | null
  export type ReflectionNicheTagCreateManyReflectionInput = {
    niche_tag_id: string
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type LikeUncheckedUpdateManyWithoutReflectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutReflectionCommentsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  export type ReflectionCommentUncheckedUpdateManyWithoutReflectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutReflectionLikesNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type ReflectionLikeUncheckedUpdateManyWithoutReflectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nicheTag?: NicheTagUpdateOneRequiredWithoutReflectionNicheTagsNestedInput
    niche_tag_id?: StringFieldUpdateOperationsInput | string
  export type ReflectionNicheTagUncheckedUpdateManyWithoutReflectionInput = {
    niche_tag_id?: StringFieldUpdateOperationsInput | string
  export type devotional_daily_task_templatesCreateManyDevotional_goalsInput = {
    id?: string
    title: string
    description?: string | null
    is_recurring?: boolean | null
    created_at?: Date | string | null
  export type DevotionalTaskCreateManyGoalInput = {
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
  export type UserCreateManyDevotionalGoalInput = {
    id?: string
    email: string
    name?: string | null
    password: string
    emailOptIn?: boolean | null
    streak?: number
    streak_last_date?: Date | string | null
    avatar?: string | null
    is_admin?: boolean | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type devotional_daily_task_templatesUncheckedUpdateManyWithoutDevotional_goalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_recurring?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_task_progress?: UserTaskProgressUpdateManyWithoutDevotional_taskNestedInput
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutDevotional_taskNestedInput
  export type DevotionalTaskUncheckedUpdateManyWithoutGoalInput = {
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUpdateManyWithoutUserNestedInput
    journals?: JournalUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUpdateManyWithoutUsersNestedInput
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AiPlan?: AiPlanUncheckedUpdateManyWithoutUserNestedInput
    dailyTaskCompletions?: DailyTaskCompletionUncheckedUpdateManyWithoutUserNestedInput
    dailyTasks?: DailyTaskUncheckedUpdateManyWithoutUserNestedInput
    journals?: JournalUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    reflectionComments?: ReflectionCommentUncheckedUpdateManyWithoutUserNestedInput
    reflectionLikes?: ReflectionLikeUncheckedUpdateManyWithoutUserNestedInput
    reflections?: ReflectionUncheckedUpdateManyWithoutUserNestedInput
    UserAiTaskProgress?: UserAiTaskProgressUncheckedUpdateManyWithoutUserNestedInput
    user_task_progress?: UserTaskProgressUncheckedUpdateManyWithoutUsersNestedInput
  export type UserUncheckedUpdateManyWithoutDevotionalGoalInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    emailOptIn?: NullableBoolFieldUpdateOperationsInput | boolean | null
    streak?: IntFieldUpdateOperationsInput | number
    streak_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  export type UserTaskProgressCreateManyDevotional_taskInput = {
    id?: string
    user_id?: string | null
    completion_date: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: UserUpdateOneWithoutUser_task_progressNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserTaskProgressUncheckedUpdateManyWithoutDevotional_taskInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type ReflectionNicheTagCreateManyNicheTagInput = {
    reflection_id: string
    reflection?: ReflectionUpdateOneRequiredWithoutReflectionNicheTagsNestedInput
    reflection_id?: StringFieldUpdateOperationsInput | string
  export type ReflectionNicheTagUncheckedUpdateManyWithoutNicheTagInput = {
    reflection_id?: StringFieldUpdateOperationsInput | string
  export type DailyTaskCompletionCreateManyTaskInput = {
    id?: string
    user_id: string
    completion_date: Date | string
    created_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutDailyTaskCompletionsNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type DailyTaskCompletionUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    completion_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type AiPlanDailyTaskCreateManyAiPlanInput = {
    id?: string
    text: string
    completed?: boolean
  export type AiPlanTaskCreateManyAi_planInput = {
    id?: string
    day_number: number
    task_text: string
    created_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
  export type AiPlanDailyTaskUncheckedUpdateManyWithoutAiPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: UserAiTaskProgressUpdateManyWithoutAi_plan_taskNestedInput
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: UserAiTaskProgressUncheckedUpdateManyWithoutAi_plan_taskNestedInput
  export type AiPlanTaskUncheckedUpdateManyWithoutAi_planInput = {
    id?: StringFieldUpdateOperationsInput | string
    day_number?: IntFieldUpdateOperationsInput | number
    task_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserAiTaskProgressCreateManyAi_plan_taskInput = {
    id?: string
    user_id: string
    completed_at?: Date | string | null
    id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserAiTaskProgressNestedInput
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  export type UserAiTaskProgressUncheckedUpdateManyWithoutAi_plan_taskInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
   * Batch Payload for updateMany & deleteMany & createMany
    count: number
  export const dmmf: runtime.BaseDMMF
		readonly maxAge?: number;
		readonly maxSize: number;
		onEviction?: (key: KeyType, value: ValueType) => void;
	readonly size: number;
	Simple ["Least Recently Used" (LRU) cache](https://en.m.wikipedia.org/wiki/Cache_replacement_policies#Least_Recently_Used_.28LRU.29).
	The instance is [`iterable`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols) so you can use it directly in a [`for…of`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of) loop.
	const lru = new QuickLRU({maxSize: 1000});
	constructor(options: QuickLRU.Options<KeyType, ValueType>);
	[Symbol.iterator](): IterableIterator<[KeyType, ValueType]>;
	set(key: KeyType, value: ValueType, options?: {maxAge?: number}): this;
	get(key: KeyType): ValueType | undefined;
	has(key: KeyType): boolean;
	peek(key: KeyType): ValueType | undefined;
	delete(key: KeyType): boolean;
	clear(): void;
	resize(maxSize: number): void;
	keys(): IterableIterator<KeyType>;
	values(): IterableIterator<ValueType>;
	entriesAscending(): IterableIterator<[KeyType, ValueType]>;
	entriesDescending(): IterableIterator<[KeyType, ValueType]>;
export default function buildSourceMapTree(input: SourceMapInput | SourceMapInput[], loader: SourceMapLoader): MapSourceType;
 * Pass `excludeContent` to exclude any self-containing source file content
export default function remapping(input: SourceMapInput | SourceMapInput[], loader: SourceMapLoader, options?: boolean | Options): SourceMap;
    column: number;
    line: number;
    name: string;
    source: string;
    content: string | null;
    ignore: boolean;
    map: null;
    sources: Sources[];
    source: string;
    content: string | null;
    ignore: boolean;
    map: TraceMap;
    sources: Sources[];
    source: string;
    content: null;
    ignore: false;
export declare function MapSource(map: TraceMap, sources: Sources[]): MapSource;
export declare function OriginalSource(source: string, content: string | null, ignore: boolean): OriginalSource;
export declare function traceMappings(tree: MapSource): GenMapping;
export declare function originalPositionFor(source: Sources, line: number, column: number, name: string): SourceMapSegmentObject | null;
